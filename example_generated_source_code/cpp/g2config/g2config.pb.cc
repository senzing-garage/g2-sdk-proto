// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: g2config.proto

#include "g2config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace g2config {
PROTOBUF_CONSTEXPR AddDataSourceRequest::AddDataSourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inputjson_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.confighandle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddDataSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDataSourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDataSourceRequestDefaultTypeInternal() {}
  union {
    AddDataSourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDataSourceRequestDefaultTypeInternal _AddDataSourceRequest_default_instance_;
PROTOBUF_CONSTEXPR AddDataSourceResponse::AddDataSourceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddDataSourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDataSourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDataSourceResponseDefaultTypeInternal() {}
  union {
    AddDataSourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDataSourceResponseDefaultTypeInternal _AddDataSourceResponse_default_instance_;
PROTOBUF_CONSTEXPR CloseRequest::CloseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.confighandle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CloseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseRequestDefaultTypeInternal() {}
  union {
    CloseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseRequestDefaultTypeInternal _CloseRequest_default_instance_;
PROTOBUF_CONSTEXPR CloseResponse::CloseResponse(
    ::_pbi::ConstantInitialized) {}
struct CloseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseResponseDefaultTypeInternal() {}
  union {
    CloseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseResponseDefaultTypeInternal _CloseResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateRequest::CreateRequest(
    ::_pbi::ConstantInitialized) {}
struct CreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRequestDefaultTypeInternal() {}
  union {
    CreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRequestDefaultTypeInternal _CreateRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateResponse::CreateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateResponseDefaultTypeInternal() {}
  union {
    CreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateResponseDefaultTypeInternal _CreateResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteDataSourceRequest::DeleteDataSourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inputjson_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.confighandle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDataSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDataSourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDataSourceRequestDefaultTypeInternal() {}
  union {
    DeleteDataSourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDataSourceRequestDefaultTypeInternal _DeleteDataSourceRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteDataSourceResponse::DeleteDataSourceResponse(
    ::_pbi::ConstantInitialized) {}
struct DeleteDataSourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDataSourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDataSourceResponseDefaultTypeInternal() {}
  union {
    DeleteDataSourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDataSourceResponseDefaultTypeInternal _DeleteDataSourceResponse_default_instance_;
PROTOBUF_CONSTEXPR DestroyRequest::DestroyRequest(
    ::_pbi::ConstantInitialized) {}
struct DestroyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DestroyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DestroyRequestDefaultTypeInternal() {}
  union {
    DestroyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DestroyRequestDefaultTypeInternal _DestroyRequest_default_instance_;
PROTOBUF_CONSTEXPR DestroyResponse::DestroyResponse(
    ::_pbi::ConstantInitialized) {}
struct DestroyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DestroyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DestroyResponseDefaultTypeInternal() {}
  union {
    DestroyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DestroyResponseDefaultTypeInternal _DestroyResponse_default_instance_;
PROTOBUF_CONSTEXPR InitRequest::InitRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modulename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.iniparams_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.verboselogging_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitRequestDefaultTypeInternal() {}
  union {
    InitRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitRequestDefaultTypeInternal _InitRequest_default_instance_;
PROTOBUF_CONSTEXPR InitResponse::InitResponse(
    ::_pbi::ConstantInitialized) {}
struct InitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitResponseDefaultTypeInternal() {}
  union {
    InitResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitResponseDefaultTypeInternal _InitResponse_default_instance_;
PROTOBUF_CONSTEXPR ListDataSourcesRequest::ListDataSourcesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.confighandle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListDataSourcesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDataSourcesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDataSourcesRequestDefaultTypeInternal() {}
  union {
    ListDataSourcesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDataSourcesRequestDefaultTypeInternal _ListDataSourcesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListDataSourcesResponse::ListDataSourcesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListDataSourcesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDataSourcesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDataSourcesResponseDefaultTypeInternal() {}
  union {
    ListDataSourcesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDataSourcesResponseDefaultTypeInternal _ListDataSourcesResponse_default_instance_;
PROTOBUF_CONSTEXPR LoadRequest::LoadRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jsonconfig_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadRequestDefaultTypeInternal() {}
  union {
    LoadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadRequestDefaultTypeInternal _LoadRequest_default_instance_;
PROTOBUF_CONSTEXPR LoadResponse::LoadResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadResponseDefaultTypeInternal() {}
  union {
    LoadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadResponseDefaultTypeInternal _LoadResponse_default_instance_;
PROTOBUF_CONSTEXPR SaveRequest::SaveRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.confighandle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveRequestDefaultTypeInternal() {}
  union {
    SaveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveRequestDefaultTypeInternal _SaveRequest_default_instance_;
PROTOBUF_CONSTEXPR SaveResponse::SaveResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveResponseDefaultTypeInternal() {}
  union {
    SaveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveResponseDefaultTypeInternal _SaveResponse_default_instance_;
}  // namespace g2config
static ::_pb::Metadata file_level_metadata_g2config_2eproto[18];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_g2config_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_g2config_2eproto = nullptr;

const uint32_t TableStruct_g2config_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::AddDataSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::AddDataSourceRequest, _impl_.confighandle_),
  PROTOBUF_FIELD_OFFSET(::g2config::AddDataSourceRequest, _impl_.inputjson_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::AddDataSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::AddDataSourceResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::CloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::CloseRequest, _impl_.confighandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::CloseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::CreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::CreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::CreateResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::DeleteDataSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::DeleteDataSourceRequest, _impl_.confighandle_),
  PROTOBUF_FIELD_OFFSET(::g2config::DeleteDataSourceRequest, _impl_.inputjson_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::DeleteDataSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::DestroyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::DestroyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::InitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::InitRequest, _impl_.modulename_),
  PROTOBUF_FIELD_OFFSET(::g2config::InitRequest, _impl_.iniparams_),
  PROTOBUF_FIELD_OFFSET(::g2config::InitRequest, _impl_.verboselogging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::InitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::ListDataSourcesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::ListDataSourcesRequest, _impl_.confighandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::ListDataSourcesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::ListDataSourcesResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::LoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::LoadRequest, _impl_.jsonconfig_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::LoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::LoadResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::SaveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::SaveRequest, _impl_.confighandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2config::SaveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2config::SaveResponse, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::g2config::AddDataSourceRequest)},
  { 8, -1, -1, sizeof(::g2config::AddDataSourceResponse)},
  { 15, -1, -1, sizeof(::g2config::CloseRequest)},
  { 22, -1, -1, sizeof(::g2config::CloseResponse)},
  { 28, -1, -1, sizeof(::g2config::CreateRequest)},
  { 34, -1, -1, sizeof(::g2config::CreateResponse)},
  { 41, -1, -1, sizeof(::g2config::DeleteDataSourceRequest)},
  { 49, -1, -1, sizeof(::g2config::DeleteDataSourceResponse)},
  { 55, -1, -1, sizeof(::g2config::DestroyRequest)},
  { 61, -1, -1, sizeof(::g2config::DestroyResponse)},
  { 67, -1, -1, sizeof(::g2config::InitRequest)},
  { 76, -1, -1, sizeof(::g2config::InitResponse)},
  { 82, -1, -1, sizeof(::g2config::ListDataSourcesRequest)},
  { 89, -1, -1, sizeof(::g2config::ListDataSourcesResponse)},
  { 96, -1, -1, sizeof(::g2config::LoadRequest)},
  { 103, -1, -1, sizeof(::g2config::LoadResponse)},
  { 110, -1, -1, sizeof(::g2config::SaveRequest)},
  { 117, -1, -1, sizeof(::g2config::SaveResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::g2config::_AddDataSourceRequest_default_instance_._instance,
  &::g2config::_AddDataSourceResponse_default_instance_._instance,
  &::g2config::_CloseRequest_default_instance_._instance,
  &::g2config::_CloseResponse_default_instance_._instance,
  &::g2config::_CreateRequest_default_instance_._instance,
  &::g2config::_CreateResponse_default_instance_._instance,
  &::g2config::_DeleteDataSourceRequest_default_instance_._instance,
  &::g2config::_DeleteDataSourceResponse_default_instance_._instance,
  &::g2config::_DestroyRequest_default_instance_._instance,
  &::g2config::_DestroyResponse_default_instance_._instance,
  &::g2config::_InitRequest_default_instance_._instance,
  &::g2config::_InitResponse_default_instance_._instance,
  &::g2config::_ListDataSourcesRequest_default_instance_._instance,
  &::g2config::_ListDataSourcesResponse_default_instance_._instance,
  &::g2config::_LoadRequest_default_instance_._instance,
  &::g2config::_LoadResponse_default_instance_._instance,
  &::g2config::_SaveRequest_default_instance_._instance,
  &::g2config::_SaveResponse_default_instance_._instance,
};

const char descriptor_table_protodef_g2config_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016g2config.proto\022\010g2config\"\?\n\024AddDataSou"
  "rceRequest\022\024\n\014configHandle\030\001 \001(\003\022\021\n\tinpu"
  "tJson\030\002 \001(\t\"\'\n\025AddDataSourceResponse\022\016\n\006"
  "result\030\001 \001(\t\"$\n\014CloseRequest\022\024\n\014configHa"
  "ndle\030\001 \001(\003\"\017\n\rCloseResponse\"\017\n\rCreateReq"
  "uest\" \n\016CreateResponse\022\016\n\006result\030\001 \001(\003\"B"
  "\n\027DeleteDataSourceRequest\022\024\n\014configHandl"
  "e\030\001 \001(\003\022\021\n\tinputJson\030\002 \001(\t\"\032\n\030DeleteData"
  "SourceResponse\"\020\n\016DestroyRequest\"\021\n\017Dest"
  "royResponse\"L\n\013InitRequest\022\022\n\nmoduleName"
  "\030\001 \001(\t\022\021\n\tiniParams\030\002 \001(\t\022\026\n\016verboseLogg"
  "ing\030\003 \001(\003\"\016\n\014InitResponse\".\n\026ListDataSou"
  "rcesRequest\022\024\n\014configHandle\030\001 \001(\003\")\n\027Lis"
  "tDataSourcesResponse\022\016\n\006result\030\001 \001(\t\"!\n\013"
  "LoadRequest\022\022\n\njsonConfig\030\001 \001(\t\"\036\n\014LoadR"
  "esponse\022\016\n\006result\030\001 \001(\003\"#\n\013SaveRequest\022\024"
  "\n\014configHandle\030\001 \001(\003\"\036\n\014SaveResponse\022\016\n\006"
  "result\030\001 \001(\t2\375\004\n\010G2Config\022R\n\rAddDataSour"
  "ce\022\036.g2config.AddDataSourceRequest\032\037.g2c"
  "onfig.AddDataSourceResponse\"\000\022:\n\005Close\022\026"
  ".g2config.CloseRequest\032\027.g2config.CloseR"
  "esponse\"\000\022=\n\006Create\022\027.g2config.CreateReq"
  "uest\032\030.g2config.CreateResponse\"\000\022[\n\020Dele"
  "teDataSource\022!.g2config.DeleteDataSource"
  "Request\032\".g2config.DeleteDataSourceRespo"
  "nse\"\000\022@\n\007Destroy\022\030.g2config.DestroyReque"
  "st\032\031.g2config.DestroyResponse\"\000\0227\n\004Init\022"
  "\025.g2config.InitRequest\032\026.g2config.InitRe"
  "sponse\"\000\022X\n\017ListDataSources\022 .g2config.L"
  "istDataSourcesRequest\032!.g2config.ListDat"
  "aSourcesResponse\"\000\0227\n\004Load\022\025.g2config.Lo"
  "adRequest\032\026.g2config.LoadResponse\"\000\0227\n\004S"
  "ave\022\025.g2config.SaveRequest\032\026.g2config.Sa"
  "veResponse\"\000Bi\n#com.senzing.g2.engine.gr"
  "pc.G2ConfigB\rG2ConfigProtoP\001Z1github.com"
  "/senzing-garage/g2-sdk-go-grpc/g2configb"
  "\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_g2config_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_g2config_2eproto = {
    false, false, 1447, descriptor_table_protodef_g2config_2eproto,
    "g2config.proto",
    &descriptor_table_g2config_2eproto_once, nullptr, 0, 18,
    schemas, file_default_instances, TableStruct_g2config_2eproto::offsets,
    file_level_metadata_g2config_2eproto, file_level_enum_descriptors_g2config_2eproto,
    file_level_service_descriptors_g2config_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_g2config_2eproto_getter() {
  return &descriptor_table_g2config_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_g2config_2eproto(&descriptor_table_g2config_2eproto);
namespace g2config {

// ===================================================================

class AddDataSourceRequest::_Internal {
 public:
};

AddDataSourceRequest::AddDataSourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.AddDataSourceRequest)
}
AddDataSourceRequest::AddDataSourceRequest(const AddDataSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddDataSourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inputjson_){}
    , decltype(_impl_.confighandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.inputjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inputjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inputjson().empty()) {
    _this->_impl_.inputjson_.Set(from._internal_inputjson(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.confighandle_ = from._impl_.confighandle_;
  // @@protoc_insertion_point(copy_constructor:g2config.AddDataSourceRequest)
}

inline void AddDataSourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.inputjson_){}
    , decltype(_impl_.confighandle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.inputjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inputjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddDataSourceRequest::~AddDataSourceRequest() {
  // @@protoc_insertion_point(destructor:g2config.AddDataSourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddDataSourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inputjson_.Destroy();
}

void AddDataSourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddDataSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.AddDataSourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputjson_.ClearToEmpty();
  _impl_.confighandle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddDataSourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 configHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.confighandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string inputJson = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_inputjson();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.AddDataSourceRequest.inputJson"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddDataSourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.AddDataSourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_confighandle(), target);
  }

  // string inputJson = 2;
  if (!this->_internal_inputjson().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_inputjson().data(), static_cast<int>(this->_internal_inputjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.AddDataSourceRequest.inputJson");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_inputjson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.AddDataSourceRequest)
  return target;
}

size_t AddDataSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.AddDataSourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string inputJson = 2;
  if (!this->_internal_inputjson().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_inputjson());
  }

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_confighandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddDataSourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddDataSourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddDataSourceRequest::GetClassData() const { return &_class_data_; }


void AddDataSourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddDataSourceRequest*>(&to_msg);
  auto& from = static_cast<const AddDataSourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.AddDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inputjson().empty()) {
    _this->_internal_set_inputjson(from._internal_inputjson());
  }
  if (from._internal_confighandle() != 0) {
    _this->_internal_set_confighandle(from._internal_confighandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddDataSourceRequest::CopyFrom(const AddDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.AddDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDataSourceRequest::IsInitialized() const {
  return true;
}

void AddDataSourceRequest::InternalSwap(AddDataSourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.inputjson_, lhs_arena,
      &other->_impl_.inputjson_, rhs_arena
  );
  swap(_impl_.confighandle_, other->_impl_.confighandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddDataSourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[0]);
}

// ===================================================================

class AddDataSourceResponse::_Internal {
 public:
};

AddDataSourceResponse::AddDataSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.AddDataSourceResponse)
}
AddDataSourceResponse::AddDataSourceResponse(const AddDataSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddDataSourceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:g2config.AddDataSourceResponse)
}

inline void AddDataSourceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddDataSourceResponse::~AddDataSourceResponse() {
  // @@protoc_insertion_point(destructor:g2config.AddDataSourceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddDataSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void AddDataSourceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddDataSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.AddDataSourceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddDataSourceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.AddDataSourceResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddDataSourceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.AddDataSourceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.AddDataSourceResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.AddDataSourceResponse)
  return target;
}

size_t AddDataSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.AddDataSourceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddDataSourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddDataSourceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddDataSourceResponse::GetClassData() const { return &_class_data_; }


void AddDataSourceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddDataSourceResponse*>(&to_msg);
  auto& from = static_cast<const AddDataSourceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.AddDataSourceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddDataSourceResponse::CopyFrom(const AddDataSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.AddDataSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDataSourceResponse::IsInitialized() const {
  return true;
}

void AddDataSourceResponse::InternalSwap(AddDataSourceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AddDataSourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[1]);
}

// ===================================================================

class CloseRequest::_Internal {
 public:
};

CloseRequest::CloseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.CloseRequest)
}
CloseRequest::CloseRequest(const CloseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CloseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.confighandle_ = from._impl_.confighandle_;
  // @@protoc_insertion_point(copy_constructor:g2config.CloseRequest)
}

inline void CloseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CloseRequest::~CloseRequest() {
  // @@protoc_insertion_point(destructor:g2config.CloseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CloseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CloseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.CloseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.confighandle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 configHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.confighandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CloseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.CloseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_confighandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.CloseRequest)
  return target;
}

size_t CloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.CloseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_confighandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CloseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseRequest::GetClassData() const { return &_class_data_; }


void CloseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CloseRequest*>(&to_msg);
  auto& from = static_cast<const CloseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.CloseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_confighandle() != 0) {
    _this->_internal_set_confighandle(from._internal_confighandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CloseRequest::CopyFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseRequest::IsInitialized() const {
  return true;
}

void CloseRequest::InternalSwap(CloseRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.confighandle_, other->_impl_.confighandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[2]);
}

// ===================================================================

class CloseResponse::_Internal {
 public:
};

CloseResponse::CloseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.CloseResponse)
}
CloseResponse::CloseResponse(const CloseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CloseResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.CloseResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CloseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[3]);
}

// ===================================================================

class CreateRequest::_Internal {
 public:
};

CreateRequest::CreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.CreateRequest)
}
CreateRequest::CreateRequest(const CreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CreateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.CreateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[4]);
}

// ===================================================================

class CreateResponse::_Internal {
 public:
};

CreateResponse::CreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.CreateResponse)
}
CreateResponse::CreateResponse(const CreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:g2config.CreateResponse)
}

inline void CreateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateResponse::~CreateResponse() {
  // @@protoc_insertion_point(destructor:g2config.CreateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CreateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.CreateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.CreateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.CreateResponse)
  return target;
}

size_t CreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.CreateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateResponse::GetClassData() const { return &_class_data_; }


void CreateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateResponse*>(&to_msg);
  auto& from = static_cast<const CreateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.CreateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateResponse::CopyFrom(const CreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResponse::IsInitialized() const {
  return true;
}

void CreateResponse::InternalSwap(CreateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[5]);
}

// ===================================================================

class DeleteDataSourceRequest::_Internal {
 public:
};

DeleteDataSourceRequest::DeleteDataSourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.DeleteDataSourceRequest)
}
DeleteDataSourceRequest::DeleteDataSourceRequest(const DeleteDataSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDataSourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inputjson_){}
    , decltype(_impl_.confighandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.inputjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inputjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inputjson().empty()) {
    _this->_impl_.inputjson_.Set(from._internal_inputjson(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.confighandle_ = from._impl_.confighandle_;
  // @@protoc_insertion_point(copy_constructor:g2config.DeleteDataSourceRequest)
}

inline void DeleteDataSourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.inputjson_){}
    , decltype(_impl_.confighandle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.inputjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inputjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDataSourceRequest::~DeleteDataSourceRequest() {
  // @@protoc_insertion_point(destructor:g2config.DeleteDataSourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDataSourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inputjson_.Destroy();
}

void DeleteDataSourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDataSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.DeleteDataSourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputjson_.ClearToEmpty();
  _impl_.confighandle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDataSourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 configHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.confighandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string inputJson = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_inputjson();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.DeleteDataSourceRequest.inputJson"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDataSourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.DeleteDataSourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_confighandle(), target);
  }

  // string inputJson = 2;
  if (!this->_internal_inputjson().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_inputjson().data(), static_cast<int>(this->_internal_inputjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.DeleteDataSourceRequest.inputJson");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_inputjson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.DeleteDataSourceRequest)
  return target;
}

size_t DeleteDataSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.DeleteDataSourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string inputJson = 2;
  if (!this->_internal_inputjson().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_inputjson());
  }

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_confighandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDataSourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDataSourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDataSourceRequest::GetClassData() const { return &_class_data_; }


void DeleteDataSourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDataSourceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDataSourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.DeleteDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inputjson().empty()) {
    _this->_internal_set_inputjson(from._internal_inputjson());
  }
  if (from._internal_confighandle() != 0) {
    _this->_internal_set_confighandle(from._internal_confighandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDataSourceRequest::CopyFrom(const DeleteDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.DeleteDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDataSourceRequest::IsInitialized() const {
  return true;
}

void DeleteDataSourceRequest::InternalSwap(DeleteDataSourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.inputjson_, lhs_arena,
      &other->_impl_.inputjson_, rhs_arena
  );
  swap(_impl_.confighandle_, other->_impl_.confighandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDataSourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[6]);
}

// ===================================================================

class DeleteDataSourceResponse::_Internal {
 public:
};

DeleteDataSourceResponse::DeleteDataSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.DeleteDataSourceResponse)
}
DeleteDataSourceResponse::DeleteDataSourceResponse(const DeleteDataSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeleteDataSourceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.DeleteDataSourceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDataSourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDataSourceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteDataSourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[7]);
}

// ===================================================================

class DestroyRequest::_Internal {
 public:
};

DestroyRequest::DestroyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.DestroyRequest)
}
DestroyRequest::DestroyRequest(const DestroyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DestroyRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.DestroyRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DestroyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DestroyRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DestroyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[8]);
}

// ===================================================================

class DestroyResponse::_Internal {
 public:
};

DestroyResponse::DestroyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.DestroyResponse)
}
DestroyResponse::DestroyResponse(const DestroyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DestroyResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.DestroyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DestroyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DestroyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DestroyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[9]);
}

// ===================================================================

class InitRequest::_Internal {
 public:
};

InitRequest::InitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.InitRequest)
}
InitRequest::InitRequest(const InitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InitRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.verboselogging_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modulename().empty()) {
    _this->_impl_.modulename_.Set(from._internal_modulename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iniparams().empty()) {
    _this->_impl_.iniparams_.Set(from._internal_iniparams(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.verboselogging_ = from._impl_.verboselogging_;
  // @@protoc_insertion_point(copy_constructor:g2config.InitRequest)
}

inline void InitRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.verboselogging_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:g2config.InitRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modulename_.Destroy();
  _impl_.iniparams_.Destroy();
}

void InitRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.InitRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modulename_.ClearToEmpty();
  _impl_.iniparams_.ClearToEmpty();
  _impl_.verboselogging_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string moduleName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_modulename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.InitRequest.moduleName"));
        } else
          goto handle_unusual;
        continue;
      // string iniParams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_iniparams();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.InitRequest.iniParams"));
        } else
          goto handle_unusual;
        continue;
      // int64 verboseLogging = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.verboselogging_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.InitRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modulename().data(), static_cast<int>(this->_internal_modulename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.InitRequest.moduleName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_modulename(), target);
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iniparams().data(), static_cast<int>(this->_internal_iniparams().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.InitRequest.iniParams");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_iniparams(), target);
  }

  // int64 verboseLogging = 3;
  if (this->_internal_verboselogging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_verboselogging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.InitRequest)
  return target;
}

size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.InitRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modulename());
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iniparams());
  }

  // int64 verboseLogging = 3;
  if (this->_internal_verboselogging() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_verboselogging());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InitRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitRequest::GetClassData() const { return &_class_data_; }


void InitRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InitRequest*>(&to_msg);
  auto& from = static_cast<const InitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.InitRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modulename().empty()) {
    _this->_internal_set_modulename(from._internal_modulename());
  }
  if (!from._internal_iniparams().empty()) {
    _this->_internal_set_iniparams(from._internal_iniparams());
  }
  if (from._internal_verboselogging() != 0) {
    _this->_internal_set_verboselogging(from._internal_verboselogging());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitRequest::IsInitialized() const {
  return true;
}

void InitRequest::InternalSwap(InitRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.modulename_, lhs_arena,
      &other->_impl_.modulename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.iniparams_, lhs_arena,
      &other->_impl_.iniparams_, rhs_arena
  );
  swap(_impl_.verboselogging_, other->_impl_.verboselogging_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[10]);
}

// ===================================================================

class InitResponse::_Internal {
 public:
};

InitResponse::InitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2config.InitResponse)
}
InitResponse::InitResponse(const InitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  InitResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2config.InitResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[11]);
}

// ===================================================================

class ListDataSourcesRequest::_Internal {
 public:
};

ListDataSourcesRequest::ListDataSourcesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.ListDataSourcesRequest)
}
ListDataSourcesRequest::ListDataSourcesRequest(const ListDataSourcesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListDataSourcesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.confighandle_ = from._impl_.confighandle_;
  // @@protoc_insertion_point(copy_constructor:g2config.ListDataSourcesRequest)
}

inline void ListDataSourcesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListDataSourcesRequest::~ListDataSourcesRequest() {
  // @@protoc_insertion_point(destructor:g2config.ListDataSourcesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListDataSourcesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListDataSourcesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListDataSourcesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.ListDataSourcesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.confighandle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDataSourcesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 configHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.confighandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDataSourcesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.ListDataSourcesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_confighandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.ListDataSourcesRequest)
  return target;
}

size_t ListDataSourcesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.ListDataSourcesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_confighandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDataSourcesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListDataSourcesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDataSourcesRequest::GetClassData() const { return &_class_data_; }


void ListDataSourcesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListDataSourcesRequest*>(&to_msg);
  auto& from = static_cast<const ListDataSourcesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.ListDataSourcesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_confighandle() != 0) {
    _this->_internal_set_confighandle(from._internal_confighandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDataSourcesRequest::CopyFrom(const ListDataSourcesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.ListDataSourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDataSourcesRequest::IsInitialized() const {
  return true;
}

void ListDataSourcesRequest::InternalSwap(ListDataSourcesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.confighandle_, other->_impl_.confighandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDataSourcesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[12]);
}

// ===================================================================

class ListDataSourcesResponse::_Internal {
 public:
};

ListDataSourcesResponse::ListDataSourcesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.ListDataSourcesResponse)
}
ListDataSourcesResponse::ListDataSourcesResponse(const ListDataSourcesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListDataSourcesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:g2config.ListDataSourcesResponse)
}

inline void ListDataSourcesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListDataSourcesResponse::~ListDataSourcesResponse() {
  // @@protoc_insertion_point(destructor:g2config.ListDataSourcesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListDataSourcesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void ListDataSourcesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListDataSourcesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.ListDataSourcesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDataSourcesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.ListDataSourcesResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDataSourcesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.ListDataSourcesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.ListDataSourcesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.ListDataSourcesResponse)
  return target;
}

size_t ListDataSourcesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.ListDataSourcesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDataSourcesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListDataSourcesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDataSourcesResponse::GetClassData() const { return &_class_data_; }


void ListDataSourcesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListDataSourcesResponse*>(&to_msg);
  auto& from = static_cast<const ListDataSourcesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.ListDataSourcesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDataSourcesResponse::CopyFrom(const ListDataSourcesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.ListDataSourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDataSourcesResponse::IsInitialized() const {
  return true;
}

void ListDataSourcesResponse::InternalSwap(ListDataSourcesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDataSourcesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[13]);
}

// ===================================================================

class LoadRequest::_Internal {
 public:
};

LoadRequest::LoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.LoadRequest)
}
LoadRequest::LoadRequest(const LoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jsonconfig_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.jsonconfig_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jsonconfig_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_jsonconfig().empty()) {
    _this->_impl_.jsonconfig_.Set(from._internal_jsonconfig(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:g2config.LoadRequest)
}

inline void LoadRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jsonconfig_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.jsonconfig_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jsonconfig_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadRequest::~LoadRequest() {
  // @@protoc_insertion_point(destructor:g2config.LoadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jsonconfig_.Destroy();
}

void LoadRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.LoadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jsonconfig_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string jsonConfig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_jsonconfig();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.LoadRequest.jsonConfig"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.LoadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonConfig = 1;
  if (!this->_internal_jsonconfig().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jsonconfig().data(), static_cast<int>(this->_internal_jsonconfig().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.LoadRequest.jsonConfig");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_jsonconfig(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.LoadRequest)
  return target;
}

size_t LoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.LoadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jsonConfig = 1;
  if (!this->_internal_jsonconfig().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jsonconfig());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadRequest::GetClassData() const { return &_class_data_; }


void LoadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadRequest*>(&to_msg);
  auto& from = static_cast<const LoadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.LoadRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jsonconfig().empty()) {
    _this->_internal_set_jsonconfig(from._internal_jsonconfig());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadRequest::CopyFrom(const LoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.LoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadRequest::IsInitialized() const {
  return true;
}

void LoadRequest::InternalSwap(LoadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.jsonconfig_, lhs_arena,
      &other->_impl_.jsonconfig_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[14]);
}

// ===================================================================

class LoadResponse::_Internal {
 public:
};

LoadResponse::LoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.LoadResponse)
}
LoadResponse::LoadResponse(const LoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:g2config.LoadResponse)
}

inline void LoadResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoadResponse::~LoadResponse() {
  // @@protoc_insertion_point(destructor:g2config.LoadResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LoadResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.LoadResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.LoadResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.LoadResponse)
  return target;
}

size_t LoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.LoadResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadResponse::GetClassData() const { return &_class_data_; }


void LoadResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadResponse*>(&to_msg);
  auto& from = static_cast<const LoadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.LoadResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadResponse::CopyFrom(const LoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.LoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadResponse::IsInitialized() const {
  return true;
}

void LoadResponse::InternalSwap(LoadResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[15]);
}

// ===================================================================

class SaveRequest::_Internal {
 public:
};

SaveRequest::SaveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.SaveRequest)
}
SaveRequest::SaveRequest(const SaveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.confighandle_ = from._impl_.confighandle_;
  // @@protoc_insertion_point(copy_constructor:g2config.SaveRequest)
}

inline void SaveRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.confighandle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveRequest::~SaveRequest() {
  // @@protoc_insertion_point(destructor:g2config.SaveRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SaveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.SaveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.confighandle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 configHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.confighandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.SaveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_confighandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.SaveRequest)
  return target;
}

size_t SaveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.SaveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configHandle = 1;
  if (this->_internal_confighandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_confighandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveRequest::GetClassData() const { return &_class_data_; }


void SaveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveRequest*>(&to_msg);
  auto& from = static_cast<const SaveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.SaveRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_confighandle() != 0) {
    _this->_internal_set_confighandle(from._internal_confighandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveRequest::CopyFrom(const SaveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.SaveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveRequest::IsInitialized() const {
  return true;
}

void SaveRequest::InternalSwap(SaveRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.confighandle_, other->_impl_.confighandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[16]);
}

// ===================================================================

class SaveResponse::_Internal {
 public:
};

SaveResponse::SaveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2config.SaveResponse)
}
SaveResponse::SaveResponse(const SaveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:g2config.SaveResponse)
}

inline void SaveResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveResponse::~SaveResponse() {
  // @@protoc_insertion_point(destructor:g2config.SaveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void SaveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2config.SaveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2config.SaveResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2config.SaveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2config.SaveResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2config.SaveResponse)
  return target;
}

size_t SaveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2config.SaveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveResponse::GetClassData() const { return &_class_data_; }


void SaveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveResponse*>(&to_msg);
  auto& from = static_cast<const SaveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2config.SaveResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveResponse::CopyFrom(const SaveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2config.SaveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveResponse::IsInitialized() const {
  return true;
}

void SaveResponse::InternalSwap(SaveResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2config_2eproto_getter, &descriptor_table_g2config_2eproto_once,
      file_level_metadata_g2config_2eproto[17]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace g2config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::g2config::AddDataSourceRequest*
Arena::CreateMaybeMessage< ::g2config::AddDataSourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::AddDataSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::AddDataSourceResponse*
Arena::CreateMaybeMessage< ::g2config::AddDataSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::AddDataSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::CloseRequest*
Arena::CreateMaybeMessage< ::g2config::CloseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::CloseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::CloseResponse*
Arena::CreateMaybeMessage< ::g2config::CloseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::CloseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::CreateRequest*
Arena::CreateMaybeMessage< ::g2config::CreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::CreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::CreateResponse*
Arena::CreateMaybeMessage< ::g2config::CreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::CreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::DeleteDataSourceRequest*
Arena::CreateMaybeMessage< ::g2config::DeleteDataSourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::DeleteDataSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::DeleteDataSourceResponse*
Arena::CreateMaybeMessage< ::g2config::DeleteDataSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::DeleteDataSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::DestroyRequest*
Arena::CreateMaybeMessage< ::g2config::DestroyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::DestroyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::DestroyResponse*
Arena::CreateMaybeMessage< ::g2config::DestroyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::DestroyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::InitRequest*
Arena::CreateMaybeMessage< ::g2config::InitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::InitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::InitResponse*
Arena::CreateMaybeMessage< ::g2config::InitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::InitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::ListDataSourcesRequest*
Arena::CreateMaybeMessage< ::g2config::ListDataSourcesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::ListDataSourcesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::ListDataSourcesResponse*
Arena::CreateMaybeMessage< ::g2config::ListDataSourcesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::ListDataSourcesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::LoadRequest*
Arena::CreateMaybeMessage< ::g2config::LoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::LoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::LoadResponse*
Arena::CreateMaybeMessage< ::g2config::LoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::LoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::SaveRequest*
Arena::CreateMaybeMessage< ::g2config::SaveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::SaveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2config::SaveResponse*
Arena::CreateMaybeMessage< ::g2config::SaveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2config::SaveResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
