// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szdiagnostic.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_szdiagnostic_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_szdiagnostic_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_szdiagnostic_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_szdiagnostic_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_szdiagnostic_2eproto;
namespace szdiagnostic {
class CheckDatabasePerformanceRequest;
struct CheckDatabasePerformanceRequestDefaultTypeInternal;
extern CheckDatabasePerformanceRequestDefaultTypeInternal _CheckDatabasePerformanceRequest_default_instance_;
class CheckDatabasePerformanceResponse;
struct CheckDatabasePerformanceResponseDefaultTypeInternal;
extern CheckDatabasePerformanceResponseDefaultTypeInternal _CheckDatabasePerformanceResponse_default_instance_;
class PurgeRepositoryRequest;
struct PurgeRepositoryRequestDefaultTypeInternal;
extern PurgeRepositoryRequestDefaultTypeInternal _PurgeRepositoryRequest_default_instance_;
class PurgeRepositoryResponse;
struct PurgeRepositoryResponseDefaultTypeInternal;
extern PurgeRepositoryResponseDefaultTypeInternal _PurgeRepositoryResponse_default_instance_;
class ReinitializeRequest;
struct ReinitializeRequestDefaultTypeInternal;
extern ReinitializeRequestDefaultTypeInternal _ReinitializeRequest_default_instance_;
class ReinitializeResponse;
struct ReinitializeResponseDefaultTypeInternal;
extern ReinitializeResponseDefaultTypeInternal _ReinitializeResponse_default_instance_;
}  // namespace szdiagnostic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace szdiagnostic {

// ===================================================================


// -------------------------------------------------------------------

class ReinitializeResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szdiagnostic.ReinitializeResponse) */ {
 public:
  inline ReinitializeResponse() : ReinitializeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReinitializeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReinitializeResponse(const ReinitializeResponse& from)
      : ReinitializeResponse(nullptr, from) {}
  ReinitializeResponse(ReinitializeResponse&& from) noexcept
    : ReinitializeResponse() {
    *this = ::std::move(from);
  }

  inline ReinitializeResponse& operator=(const ReinitializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReinitializeResponse& operator=(ReinitializeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReinitializeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReinitializeResponse* internal_default_instance() {
    return reinterpret_cast<const ReinitializeResponse*>(
               &_ReinitializeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ReinitializeResponse& a, ReinitializeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReinitializeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReinitializeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReinitializeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReinitializeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReinitializeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReinitializeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.ReinitializeResponse";
  }
  protected:
  explicit ReinitializeResponse(::google::protobuf::Arena* arena);
  ReinitializeResponse(::google::protobuf::Arena* arena, const ReinitializeResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szdiagnostic.ReinitializeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};// -------------------------------------------------------------------

class ReinitializeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szdiagnostic.ReinitializeRequest) */ {
 public:
  inline ReinitializeRequest() : ReinitializeRequest(nullptr) {}
  ~ReinitializeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReinitializeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReinitializeRequest(const ReinitializeRequest& from)
      : ReinitializeRequest(nullptr, from) {}
  ReinitializeRequest(ReinitializeRequest&& from) noexcept
    : ReinitializeRequest() {
    *this = ::std::move(from);
  }

  inline ReinitializeRequest& operator=(const ReinitializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReinitializeRequest& operator=(ReinitializeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReinitializeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReinitializeRequest* internal_default_instance() {
    return reinterpret_cast<const ReinitializeRequest*>(
               &_ReinitializeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ReinitializeRequest& a, ReinitializeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReinitializeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReinitializeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReinitializeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReinitializeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReinitializeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReinitializeRequest& from) {
    ReinitializeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReinitializeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.ReinitializeRequest";
  }
  protected:
  explicit ReinitializeRequest(::google::protobuf::Arena* arena);
  ReinitializeRequest(::google::protobuf::Arena* arena, const ReinitializeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
  };
  // int64 configId = 1;
  void clear_configid() ;
  ::int64_t configid() const;
  void set_configid(::int64_t value);

  private:
  ::int64_t _internal_configid() const;
  void _internal_set_configid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szdiagnostic.ReinitializeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t configid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};// -------------------------------------------------------------------

class PurgeRepositoryResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szdiagnostic.PurgeRepositoryResponse) */ {
 public:
  inline PurgeRepositoryResponse() : PurgeRepositoryResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PurgeRepositoryResponse(::google::protobuf::internal::ConstantInitialized);

  inline PurgeRepositoryResponse(const PurgeRepositoryResponse& from)
      : PurgeRepositoryResponse(nullptr, from) {}
  PurgeRepositoryResponse(PurgeRepositoryResponse&& from) noexcept
    : PurgeRepositoryResponse() {
    *this = ::std::move(from);
  }

  inline PurgeRepositoryResponse& operator=(const PurgeRepositoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PurgeRepositoryResponse& operator=(PurgeRepositoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PurgeRepositoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PurgeRepositoryResponse* internal_default_instance() {
    return reinterpret_cast<const PurgeRepositoryResponse*>(
               &_PurgeRepositoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PurgeRepositoryResponse& a, PurgeRepositoryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PurgeRepositoryResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PurgeRepositoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PurgeRepositoryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PurgeRepositoryResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PurgeRepositoryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PurgeRepositoryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.PurgeRepositoryResponse";
  }
  protected:
  explicit PurgeRepositoryResponse(::google::protobuf::Arena* arena);
  PurgeRepositoryResponse(::google::protobuf::Arena* arena, const PurgeRepositoryResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szdiagnostic.PurgeRepositoryResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};// -------------------------------------------------------------------

class PurgeRepositoryRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szdiagnostic.PurgeRepositoryRequest) */ {
 public:
  inline PurgeRepositoryRequest() : PurgeRepositoryRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PurgeRepositoryRequest(::google::protobuf::internal::ConstantInitialized);

  inline PurgeRepositoryRequest(const PurgeRepositoryRequest& from)
      : PurgeRepositoryRequest(nullptr, from) {}
  PurgeRepositoryRequest(PurgeRepositoryRequest&& from) noexcept
    : PurgeRepositoryRequest() {
    *this = ::std::move(from);
  }

  inline PurgeRepositoryRequest& operator=(const PurgeRepositoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PurgeRepositoryRequest& operator=(PurgeRepositoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PurgeRepositoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PurgeRepositoryRequest* internal_default_instance() {
    return reinterpret_cast<const PurgeRepositoryRequest*>(
               &_PurgeRepositoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PurgeRepositoryRequest& a, PurgeRepositoryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PurgeRepositoryRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PurgeRepositoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PurgeRepositoryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PurgeRepositoryRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PurgeRepositoryRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PurgeRepositoryRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.PurgeRepositoryRequest";
  }
  protected:
  explicit PurgeRepositoryRequest(::google::protobuf::Arena* arena);
  PurgeRepositoryRequest(::google::protobuf::Arena* arena, const PurgeRepositoryRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szdiagnostic.PurgeRepositoryRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};// -------------------------------------------------------------------

class CheckDatabasePerformanceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szdiagnostic.CheckDatabasePerformanceResponse) */ {
 public:
  inline CheckDatabasePerformanceResponse() : CheckDatabasePerformanceResponse(nullptr) {}
  ~CheckDatabasePerformanceResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckDatabasePerformanceResponse(::google::protobuf::internal::ConstantInitialized);

  inline CheckDatabasePerformanceResponse(const CheckDatabasePerformanceResponse& from)
      : CheckDatabasePerformanceResponse(nullptr, from) {}
  CheckDatabasePerformanceResponse(CheckDatabasePerformanceResponse&& from) noexcept
    : CheckDatabasePerformanceResponse() {
    *this = ::std::move(from);
  }

  inline CheckDatabasePerformanceResponse& operator=(const CheckDatabasePerformanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckDatabasePerformanceResponse& operator=(CheckDatabasePerformanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckDatabasePerformanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckDatabasePerformanceResponse* internal_default_instance() {
    return reinterpret_cast<const CheckDatabasePerformanceResponse*>(
               &_CheckDatabasePerformanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CheckDatabasePerformanceResponse& a, CheckDatabasePerformanceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckDatabasePerformanceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckDatabasePerformanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckDatabasePerformanceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckDatabasePerformanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckDatabasePerformanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckDatabasePerformanceResponse& from) {
    CheckDatabasePerformanceResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckDatabasePerformanceResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.CheckDatabasePerformanceResponse";
  }
  protected:
  explicit CheckDatabasePerformanceResponse(::google::protobuf::Arena* arena);
  CheckDatabasePerformanceResponse(::google::protobuf::Arena* arena, const CheckDatabasePerformanceResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szdiagnostic.CheckDatabasePerformanceResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};// -------------------------------------------------------------------

class CheckDatabasePerformanceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szdiagnostic.CheckDatabasePerformanceRequest) */ {
 public:
  inline CheckDatabasePerformanceRequest() : CheckDatabasePerformanceRequest(nullptr) {}
  ~CheckDatabasePerformanceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CheckDatabasePerformanceRequest(::google::protobuf::internal::ConstantInitialized);

  inline CheckDatabasePerformanceRequest(const CheckDatabasePerformanceRequest& from)
      : CheckDatabasePerformanceRequest(nullptr, from) {}
  CheckDatabasePerformanceRequest(CheckDatabasePerformanceRequest&& from) noexcept
    : CheckDatabasePerformanceRequest() {
    *this = ::std::move(from);
  }

  inline CheckDatabasePerformanceRequest& operator=(const CheckDatabasePerformanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckDatabasePerformanceRequest& operator=(CheckDatabasePerformanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckDatabasePerformanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckDatabasePerformanceRequest* internal_default_instance() {
    return reinterpret_cast<const CheckDatabasePerformanceRequest*>(
               &_CheckDatabasePerformanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CheckDatabasePerformanceRequest& a, CheckDatabasePerformanceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckDatabasePerformanceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckDatabasePerformanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckDatabasePerformanceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CheckDatabasePerformanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckDatabasePerformanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CheckDatabasePerformanceRequest& from) {
    CheckDatabasePerformanceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckDatabasePerformanceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szdiagnostic.CheckDatabasePerformanceRequest";
  }
  protected:
  explicit CheckDatabasePerformanceRequest(::google::protobuf::Arena* arena);
  CheckDatabasePerformanceRequest(::google::protobuf::Arena* arena, const CheckDatabasePerformanceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondsToRunFieldNumber = 1,
  };
  // int32 secondsToRun = 1;
  void clear_secondstorun() ;
  ::int32_t secondstorun() const;
  void set_secondstorun(::int32_t value);

  private:
  ::int32_t _internal_secondstorun() const;
  void _internal_set_secondstorun(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:szdiagnostic.CheckDatabasePerformanceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t secondstorun_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szdiagnostic_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CheckDatabasePerformanceRequest

// int32 secondsToRun = 1;
inline void CheckDatabasePerformanceRequest::clear_secondstorun() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.secondstorun_ = 0;
}
inline ::int32_t CheckDatabasePerformanceRequest::secondstorun() const {
  // @@protoc_insertion_point(field_get:szdiagnostic.CheckDatabasePerformanceRequest.secondsToRun)
  return _internal_secondstorun();
}
inline void CheckDatabasePerformanceRequest::set_secondstorun(::int32_t value) {
  _internal_set_secondstorun(value);
  // @@protoc_insertion_point(field_set:szdiagnostic.CheckDatabasePerformanceRequest.secondsToRun)
}
inline ::int32_t CheckDatabasePerformanceRequest::_internal_secondstorun() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.secondstorun_;
}
inline void CheckDatabasePerformanceRequest::_internal_set_secondstorun(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secondstorun_ = value;
}

// -------------------------------------------------------------------

// CheckDatabasePerformanceResponse

// string result = 1;
inline void CheckDatabasePerformanceResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& CheckDatabasePerformanceResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szdiagnostic.CheckDatabasePerformanceResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckDatabasePerformanceResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szdiagnostic.CheckDatabasePerformanceResponse.result)
}
inline std::string* CheckDatabasePerformanceResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szdiagnostic.CheckDatabasePerformanceResponse.result)
  return _s;
}
inline const std::string& CheckDatabasePerformanceResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void CheckDatabasePerformanceResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* CheckDatabasePerformanceResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* CheckDatabasePerformanceResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szdiagnostic.CheckDatabasePerformanceResponse.result)
  return _impl_.result_.Release();
}
inline void CheckDatabasePerformanceResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szdiagnostic.CheckDatabasePerformanceResponse.result)
}

// -------------------------------------------------------------------

// PurgeRepositoryRequest

// -------------------------------------------------------------------

// PurgeRepositoryResponse

// -------------------------------------------------------------------

// ReinitializeRequest

// int64 configId = 1;
inline void ReinitializeRequest::clear_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_ = ::int64_t{0};
}
inline ::int64_t ReinitializeRequest::configid() const {
  // @@protoc_insertion_point(field_get:szdiagnostic.ReinitializeRequest.configId)
  return _internal_configid();
}
inline void ReinitializeRequest::set_configid(::int64_t value) {
  _internal_set_configid(value);
  // @@protoc_insertion_point(field_set:szdiagnostic.ReinitializeRequest.configId)
}
inline ::int64_t ReinitializeRequest::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_;
}
inline void ReinitializeRequest::_internal_set_configid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_ = value;
}

// -------------------------------------------------------------------

// ReinitializeResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace szdiagnostic


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_szdiagnostic_2eproto_2epb_2eh
