// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: g2engine.proto
#ifndef GRPC_g2engine_2eproto__INCLUDED
#define GRPC_g2engine_2eproto__INCLUDED

#include "g2engine.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace g2engine {

class G2Engine final {
 public:
  static constexpr char const* service_full_name() {
    return "g2engine.G2Engine";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::g2engine::AddRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>> AsyncAddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>>(AsyncAddRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>> PrepareAsyncAddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>>(PrepareAsyncAddRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::g2engine::AddRecordWithInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>> AsyncAddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>>(AsyncAddRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>> PrepareAsyncAddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>>(PrepareAsyncAddRecordWithInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::g2engine::CloseExportResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>> AsyncCloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>>(AsyncCloseExportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>> PrepareAsyncCloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>>(PrepareAsyncCloseExportRaw(context, request, cq));
    }
    virtual ::grpc::Status CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::g2engine::CountRedoRecordsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>> AsyncCountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>>(AsyncCountRedoRecordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>> PrepareAsyncCountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>>(PrepareAsyncCountRedoRecordsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::g2engine::DeleteRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>> AsyncDeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>>(AsyncDeleteRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>> PrepareAsyncDeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>>(PrepareAsyncDeleteRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::g2engine::DeleteRecordWithInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>> AsyncDeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>>(AsyncDeleteRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>> PrepareAsyncDeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>>(PrepareAsyncDeleteRecordWithInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::g2engine::DestroyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    virtual ::grpc::Status ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::g2engine::ExportConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>> AsyncExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>>(AsyncExportConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>> PrepareAsyncExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>>(PrepareAsyncExportConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::g2engine::ExportConfigAndConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>> AsyncExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>>(AsyncExportConfigAndConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>> PrepareAsyncExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>>(PrepareAsyncExportConfigAndConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::g2engine::ExportCSVEntityReportResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>> AsyncExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>>(AsyncExportCSVEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>> PrepareAsyncExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>>(PrepareAsyncExportCSVEntityReportRaw(context, request, cq));
    }
    virtual ::grpc::Status ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::g2engine::ExportJSONEntityReportResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>> AsyncExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>>(AsyncExportJSONEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>> PrepareAsyncExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>>(PrepareAsyncExportJSONEntityReportRaw(context, request, cq));
    }
    virtual ::grpc::Status FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::g2engine::FetchNextResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>> AsyncFetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>>(AsyncFetchNextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>> PrepareAsyncFetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>>(PrepareAsyncFetchNextRaw(context, request, cq));
    }
    virtual ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>> AsyncFindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>>(AsyncFindInterestingEntitiesByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>> PrepareAsyncFindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>>(PrepareAsyncFindInterestingEntitiesByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>> AsyncFindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>>(AsyncFindInterestingEntitiesByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>> PrepareAsyncFindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>>(PrepareAsyncFindInterestingEntitiesByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::g2engine::FindNetworkByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>> AsyncFindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>>(AsyncFindNetworkByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>> PrepareAsyncFindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>>(PrepareAsyncFindNetworkByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::g2engine::FindNetworkByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>> AsyncFindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>>(AsyncFindNetworkByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>> PrepareAsyncFindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>>(PrepareAsyncFindNetworkByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::g2engine::FindNetworkByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>> AsyncFindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>>(AsyncFindNetworkByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>> PrepareAsyncFindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>>(PrepareAsyncFindNetworkByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::g2engine::FindNetworkByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>> AsyncFindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>>(AsyncFindNetworkByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>> PrepareAsyncFindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>>(PrepareAsyncFindNetworkByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::g2engine::FindPathByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>> AsyncFindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>>(AsyncFindPathByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>> PrepareAsyncFindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>>(PrepareAsyncFindPathByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::g2engine::FindPathByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>> AsyncFindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>>(AsyncFindPathByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>> PrepareAsyncFindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>>(PrepareAsyncFindPathByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::g2engine::FindPathByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>> AsyncFindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>>(AsyncFindPathByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>> PrepareAsyncFindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>>(PrepareAsyncFindPathByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::g2engine::FindPathByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>> AsyncFindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>>(AsyncFindPathByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>> PrepareAsyncFindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>>(PrepareAsyncFindPathByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::g2engine::FindPathExcludingByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>> AsyncFindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>>(AsyncFindPathExcludingByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>> PrepareAsyncFindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>>(PrepareAsyncFindPathExcludingByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::g2engine::FindPathExcludingByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>> AsyncFindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>>(AsyncFindPathExcludingByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>> PrepareAsyncFindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>>(PrepareAsyncFindPathExcludingByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::g2engine::FindPathExcludingByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>> AsyncFindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>>(AsyncFindPathExcludingByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>> PrepareAsyncFindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>>(PrepareAsyncFindPathExcludingByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::g2engine::FindPathExcludingByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>> AsyncFindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>>(AsyncFindPathExcludingByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>> PrepareAsyncFindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>>(PrepareAsyncFindPathExcludingByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>> AsyncFindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>>(AsyncFindPathIncludingSourceByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>> PrepareAsyncFindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>>(PrepareAsyncFindPathIncludingSourceByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>> AsyncFindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>>(AsyncFindPathIncludingSourceByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>> PrepareAsyncFindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>>(PrepareAsyncFindPathIncludingSourceByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>> AsyncFindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>>(AsyncFindPathIncludingSourceByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>> PrepareAsyncFindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>>(PrepareAsyncFindPathIncludingSourceByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>> AsyncFindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>>(AsyncFindPathIncludingSourceByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>> PrepareAsyncFindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>>(PrepareAsyncFindPathIncludingSourceByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::g2engine::GetActiveConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>> AsyncGetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>>(AsyncGetActiveConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>> PrepareAsyncGetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>>(PrepareAsyncGetActiveConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::g2engine::GetEntityByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>> AsyncGetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>>(AsyncGetEntityByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>> PrepareAsyncGetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>>(PrepareAsyncGetEntityByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::g2engine::GetEntityByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>> AsyncGetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>>(AsyncGetEntityByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>> PrepareAsyncGetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>>(PrepareAsyncGetEntityByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::g2engine::GetEntityByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>> AsyncGetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>>(AsyncGetEntityByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>> PrepareAsyncGetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>>(PrepareAsyncGetEntityByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::g2engine::GetEntityByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>> AsyncGetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>>(AsyncGetEntityByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>> PrepareAsyncGetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>>(PrepareAsyncGetEntityByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::g2engine::GetRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>> AsyncGetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>>(AsyncGetRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>> PrepareAsyncGetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>>(PrepareAsyncGetRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::g2engine::GetRecord_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>> AsyncGetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>>(AsyncGetRecord_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>> PrepareAsyncGetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>>(PrepareAsyncGetRecord_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::g2engine::GetRedoRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>> AsyncGetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>>(AsyncGetRedoRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>> PrepareAsyncGetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>>(PrepareAsyncGetRedoRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>> AsyncGetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>>(AsyncGetRepositoryLastModifiedTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>> PrepareAsyncGetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>>(PrepareAsyncGetRepositoryLastModifiedTimeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::g2engine::GetVirtualEntityByRecordIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>> AsyncGetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>>(AsyncGetVirtualEntityByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>> PrepareAsyncGetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>>(PrepareAsyncGetVirtualEntityByRecordIDRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>> AsyncGetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>>(AsyncGetVirtualEntityByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>> PrepareAsyncGetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>>(PrepareAsyncGetVirtualEntityByRecordID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::g2engine::HowEntityByEntityIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>> AsyncHowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>>(AsyncHowEntityByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>> PrepareAsyncHowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>>(PrepareAsyncHowEntityByEntityIDRaw(context, request, cq));
    }
    virtual ::grpc::Status HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::g2engine::HowEntityByEntityID_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>> AsyncHowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>>(AsyncHowEntityByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>> PrepareAsyncHowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>>(PrepareAsyncHowEntityByEntityID_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status Init(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::g2engine::InitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    virtual ::grpc::Status InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::g2engine::InitWithConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>> AsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>>(AsyncInitWithConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>> PrepareAsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>>(PrepareAsyncInitWithConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::g2engine::PrimeEngineResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>> AsyncPrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>>(AsyncPrimeEngineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>> PrepareAsyncPrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>>(PrepareAsyncPrimeEngineRaw(context, request, cq));
    }
    virtual ::grpc::Status ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::g2engine::ReevaluateEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>> AsyncReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>>(AsyncReevaluateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>> PrepareAsyncReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>>(PrepareAsyncReevaluateEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::g2engine::ReevaluateEntityWithInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>> AsyncReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>>(AsyncReevaluateEntityWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>> PrepareAsyncReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>>(PrepareAsyncReevaluateEntityWithInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::g2engine::ReevaluateRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>> AsyncReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>>(AsyncReevaluateRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>> PrepareAsyncReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>>(PrepareAsyncReevaluateRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::g2engine::ReevaluateRecordWithInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>> AsyncReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>>(AsyncReevaluateRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>> PrepareAsyncReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>>(PrepareAsyncReevaluateRecordWithInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::g2engine::ReinitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>> AsyncReinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>>(AsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>> PrepareAsyncReinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>>(PrepareAsyncReinitRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::g2engine::ReplaceRecordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>> AsyncReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>>(AsyncReplaceRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>> PrepareAsyncReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>>(PrepareAsyncReplaceRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::g2engine::ReplaceRecordWithInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>> AsyncReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>>(AsyncReplaceRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>> PrepareAsyncReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>>(PrepareAsyncReplaceRecordWithInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::g2engine::SearchByAttributesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>> AsyncSearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>>(AsyncSearchByAttributesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>> PrepareAsyncSearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>>(PrepareAsyncSearchByAttributesRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::g2engine::SearchByAttributes_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>> AsyncSearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>>(AsyncSearchByAttributes_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>> PrepareAsyncSearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>>(PrepareAsyncSearchByAttributes_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::g2engine::StatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>> AsyncStats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>>(AsyncStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>> PrepareAsyncStats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>>(PrepareAsyncStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>> StreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>>(StreamExportCSVEntityReportRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>> AsyncStreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>>(AsyncStreamExportCSVEntityReportRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>> PrepareAsyncStreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>>(PrepareAsyncStreamExportCSVEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>> StreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>>(StreamExportJSONEntityReportRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>> AsyncStreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>>(AsyncStreamExportJSONEntityReportRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>> PrepareAsyncStreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>>(PrepareAsyncStreamExportJSONEntityReportRaw(context, request, cq));
    }
    virtual ::grpc::Status WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::g2engine::WhyEntitiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>> AsyncWhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>>(AsyncWhyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>> PrepareAsyncWhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>>(PrepareAsyncWhyEntitiesRaw(context, request, cq));
    }
    virtual ::grpc::Status WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::g2engine::WhyEntities_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>> AsyncWhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>>(AsyncWhyEntities_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>> PrepareAsyncWhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>>(PrepareAsyncWhyEntities_V2Raw(context, request, cq));
    }
    virtual ::grpc::Status WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::g2engine::WhyRecordsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>> AsyncWhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>>(AsyncWhyRecordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>> PrepareAsyncWhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>>(PrepareAsyncWhyRecordsRaw(context, request, cq));
    }
    virtual ::grpc::Status WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::g2engine::WhyRecords_V2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>> AsyncWhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>>(AsyncWhyRecords_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>> PrepareAsyncWhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>>(PrepareAsyncWhyRecords_V2Raw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest* request, ::grpc::ClientReadReactor< ::g2engine::StreamExportCSVEntityReportResponse>* reactor) = 0;
      virtual void StreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest* request, ::grpc::ClientReadReactor< ::g2engine::StreamExportJSONEntityReportResponse>* reactor) = 0;
      virtual void WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>* AsyncAddRecordRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordResponse>* PrepareAsyncAddRecordRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>* AsyncAddRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::AddRecordWithInfoResponse>* PrepareAsyncAddRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>* AsyncCloseExportRaw(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CloseExportResponse>* PrepareAsyncCloseExportRaw(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>* AsyncCountRedoRecordsRaw(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::CountRedoRecordsResponse>* PrepareAsyncCountRedoRecordsRaw(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>* AsyncDeleteRecordRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordResponse>* PrepareAsyncDeleteRecordRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>* AsyncDeleteRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DeleteRecordWithInfoResponse>* PrepareAsyncDeleteRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>* AsyncExportConfigRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigResponse>* PrepareAsyncExportConfigRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>* AsyncExportConfigAndConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportConfigAndConfigIDResponse>* PrepareAsyncExportConfigAndConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>* AsyncExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportCSVEntityReportResponse>* PrepareAsyncExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>* AsyncExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ExportJSONEntityReportResponse>* PrepareAsyncExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>* AsyncFetchNextRaw(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FetchNextResponse>* PrepareAsyncFetchNextRaw(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>* AsyncFindInterestingEntitiesByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByEntityIDResponse>* PrepareAsyncFindInterestingEntitiesByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>* AsyncFindInterestingEntitiesByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindInterestingEntitiesByRecordIDResponse>* PrepareAsyncFindInterestingEntitiesByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>* AsyncFindNetworkByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityIDResponse>* PrepareAsyncFindNetworkByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>* AsyncFindNetworkByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByEntityID_V2Response>* PrepareAsyncFindNetworkByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>* AsyncFindNetworkByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordIDResponse>* PrepareAsyncFindNetworkByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>* AsyncFindNetworkByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindNetworkByRecordID_V2Response>* PrepareAsyncFindNetworkByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>* AsyncFindPathByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityIDResponse>* PrepareAsyncFindPathByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>* AsyncFindPathByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByEntityID_V2Response>* PrepareAsyncFindPathByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>* AsyncFindPathByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordIDResponse>* PrepareAsyncFindPathByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>* AsyncFindPathByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathByRecordID_V2Response>* PrepareAsyncFindPathByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>* AsyncFindPathExcludingByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityIDResponse>* PrepareAsyncFindPathExcludingByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>* AsyncFindPathExcludingByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByEntityID_V2Response>* PrepareAsyncFindPathExcludingByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>* AsyncFindPathExcludingByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordIDResponse>* PrepareAsyncFindPathExcludingByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>* AsyncFindPathExcludingByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathExcludingByRecordID_V2Response>* PrepareAsyncFindPathExcludingByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>* AsyncFindPathIncludingSourceByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityIDResponse>* PrepareAsyncFindPathIncludingSourceByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* AsyncFindPathIncludingSourceByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* PrepareAsyncFindPathIncludingSourceByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>* AsyncFindPathIncludingSourceByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordIDResponse>* PrepareAsyncFindPathIncludingSourceByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* AsyncFindPathIncludingSourceByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* PrepareAsyncFindPathIncludingSourceByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>* AsyncGetActiveConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetActiveConfigIDResponse>* PrepareAsyncGetActiveConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>* AsyncGetEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityIDResponse>* PrepareAsyncGetEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>* AsyncGetEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByEntityID_V2Response>* PrepareAsyncGetEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>* AsyncGetEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordIDResponse>* PrepareAsyncGetEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>* AsyncGetEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetEntityByRecordID_V2Response>* PrepareAsyncGetEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>* AsyncGetRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecordResponse>* PrepareAsyncGetRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>* AsyncGetRecord_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRecord_V2Response>* PrepareAsyncGetRecord_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>* AsyncGetRedoRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRedoRecordResponse>* PrepareAsyncGetRedoRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>* AsyncGetRepositoryLastModifiedTimeRaw(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetRepositoryLastModifiedTimeResponse>* PrepareAsyncGetRepositoryLastModifiedTimeRaw(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>* AsyncGetVirtualEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordIDResponse>* PrepareAsyncGetVirtualEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>* AsyncGetVirtualEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::GetVirtualEntityByRecordID_V2Response>* PrepareAsyncGetVirtualEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>* AsyncHowEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityIDResponse>* PrepareAsyncHowEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>* AsyncHowEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::HowEntityByEntityID_V2Response>* PrepareAsyncHowEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>* AsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::InitWithConfigIDResponse>* PrepareAsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>* AsyncPrimeEngineRaw(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::PrimeEngineResponse>* PrepareAsyncPrimeEngineRaw(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>* AsyncReevaluateEntityRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityResponse>* PrepareAsyncReevaluateEntityRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>* AsyncReevaluateEntityWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateEntityWithInfoResponse>* PrepareAsyncReevaluateEntityWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>* AsyncReevaluateRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordResponse>* PrepareAsyncReevaluateRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>* AsyncReevaluateRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReevaluateRecordWithInfoResponse>* PrepareAsyncReevaluateRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>* AsyncReinitRaw(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReinitResponse>* PrepareAsyncReinitRaw(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>* AsyncReplaceRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordResponse>* PrepareAsyncReplaceRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>* AsyncReplaceRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::ReplaceRecordWithInfoResponse>* PrepareAsyncReplaceRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>* AsyncSearchByAttributesRaw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributesResponse>* PrepareAsyncSearchByAttributesRaw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>* AsyncSearchByAttributes_V2Raw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::SearchByAttributes_V2Response>* PrepareAsyncSearchByAttributes_V2Raw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>* AsyncStatsRaw(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::StatsResponse>* PrepareAsyncStatsRaw(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>* StreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>* AsyncStreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportCSVEntityReportResponse>* PrepareAsyncStreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>* StreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>* AsyncStreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2engine::StreamExportJSONEntityReportResponse>* PrepareAsyncStreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>* AsyncWhyEntitiesRaw(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntitiesResponse>* PrepareAsyncWhyEntitiesRaw(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>* AsyncWhyEntities_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyEntities_V2Response>* PrepareAsyncWhyEntities_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>* AsyncWhyRecordsRaw(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecordsResponse>* PrepareAsyncWhyRecordsRaw(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>* AsyncWhyRecords_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2engine::WhyRecords_V2Response>* PrepareAsyncWhyRecords_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::g2engine::AddRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>> AsyncAddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>>(AsyncAddRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>> PrepareAsyncAddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>>(PrepareAsyncAddRecordRaw(context, request, cq));
    }
    ::grpc::Status AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::g2engine::AddRecordWithInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>> AsyncAddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>>(AsyncAddRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>> PrepareAsyncAddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>>(PrepareAsyncAddRecordWithInfoRaw(context, request, cq));
    }
    ::grpc::Status CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::g2engine::CloseExportResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>> AsyncCloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>>(AsyncCloseExportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>> PrepareAsyncCloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>>(PrepareAsyncCloseExportRaw(context, request, cq));
    }
    ::grpc::Status CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::g2engine::CountRedoRecordsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>> AsyncCountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>>(AsyncCountRedoRecordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>> PrepareAsyncCountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>>(PrepareAsyncCountRedoRecordsRaw(context, request, cq));
    }
    ::grpc::Status DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::g2engine::DeleteRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>> AsyncDeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>>(AsyncDeleteRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>> PrepareAsyncDeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>>(PrepareAsyncDeleteRecordRaw(context, request, cq));
    }
    ::grpc::Status DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::g2engine::DeleteRecordWithInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>> AsyncDeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>>(AsyncDeleteRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>> PrepareAsyncDeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>>(PrepareAsyncDeleteRecordWithInfoRaw(context, request, cq));
    }
    ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::g2engine::DestroyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    ::grpc::Status ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::g2engine::ExportConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>> AsyncExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>>(AsyncExportConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>> PrepareAsyncExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>>(PrepareAsyncExportConfigRaw(context, request, cq));
    }
    ::grpc::Status ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::g2engine::ExportConfigAndConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>> AsyncExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>>(AsyncExportConfigAndConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>> PrepareAsyncExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>>(PrepareAsyncExportConfigAndConfigIDRaw(context, request, cq));
    }
    ::grpc::Status ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::g2engine::ExportCSVEntityReportResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>> AsyncExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>>(AsyncExportCSVEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>> PrepareAsyncExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>>(PrepareAsyncExportCSVEntityReportRaw(context, request, cq));
    }
    ::grpc::Status ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::g2engine::ExportJSONEntityReportResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>> AsyncExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>>(AsyncExportJSONEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>> PrepareAsyncExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>>(PrepareAsyncExportJSONEntityReportRaw(context, request, cq));
    }
    ::grpc::Status FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::g2engine::FetchNextResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>> AsyncFetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>>(AsyncFetchNextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>> PrepareAsyncFetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>>(PrepareAsyncFetchNextRaw(context, request, cq));
    }
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>> AsyncFindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>>(AsyncFindInterestingEntitiesByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>> PrepareAsyncFindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>>(PrepareAsyncFindInterestingEntitiesByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>> AsyncFindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>>(AsyncFindInterestingEntitiesByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>> PrepareAsyncFindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>>(PrepareAsyncFindInterestingEntitiesByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::g2engine::FindNetworkByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>> AsyncFindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>>(AsyncFindNetworkByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>> PrepareAsyncFindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>>(PrepareAsyncFindNetworkByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::g2engine::FindNetworkByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>> AsyncFindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>>(AsyncFindNetworkByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>> PrepareAsyncFindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>>(PrepareAsyncFindNetworkByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::g2engine::FindNetworkByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>> AsyncFindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>>(AsyncFindNetworkByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>> PrepareAsyncFindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>>(PrepareAsyncFindNetworkByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::g2engine::FindNetworkByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>> AsyncFindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>>(AsyncFindNetworkByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>> PrepareAsyncFindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>>(PrepareAsyncFindNetworkByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::g2engine::FindPathByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>> AsyncFindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>>(AsyncFindPathByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>> PrepareAsyncFindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>>(PrepareAsyncFindPathByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::g2engine::FindPathByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>> AsyncFindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>>(AsyncFindPathByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>> PrepareAsyncFindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>>(PrepareAsyncFindPathByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::g2engine::FindPathByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>> AsyncFindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>>(AsyncFindPathByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>> PrepareAsyncFindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>>(PrepareAsyncFindPathByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::g2engine::FindPathByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>> AsyncFindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>>(AsyncFindPathByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>> PrepareAsyncFindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>>(PrepareAsyncFindPathByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::g2engine::FindPathExcludingByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>> AsyncFindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>>(AsyncFindPathExcludingByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>> PrepareAsyncFindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>>(PrepareAsyncFindPathExcludingByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::g2engine::FindPathExcludingByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>> AsyncFindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>>(AsyncFindPathExcludingByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>> PrepareAsyncFindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>>(PrepareAsyncFindPathExcludingByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::g2engine::FindPathExcludingByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>> AsyncFindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>>(AsyncFindPathExcludingByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>> PrepareAsyncFindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>>(PrepareAsyncFindPathExcludingByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::g2engine::FindPathExcludingByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>> AsyncFindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>>(AsyncFindPathExcludingByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>> PrepareAsyncFindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>>(PrepareAsyncFindPathExcludingByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>> AsyncFindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>>(AsyncFindPathIncludingSourceByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>> PrepareAsyncFindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>>(PrepareAsyncFindPathIncludingSourceByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>> AsyncFindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>>(AsyncFindPathIncludingSourceByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>> PrepareAsyncFindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>>(PrepareAsyncFindPathIncludingSourceByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>> AsyncFindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>>(AsyncFindPathIncludingSourceByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>> PrepareAsyncFindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>>(PrepareAsyncFindPathIncludingSourceByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>> AsyncFindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>>(AsyncFindPathIncludingSourceByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>> PrepareAsyncFindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>>(PrepareAsyncFindPathIncludingSourceByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::g2engine::GetActiveConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>> AsyncGetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>>(AsyncGetActiveConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>> PrepareAsyncGetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>>(PrepareAsyncGetActiveConfigIDRaw(context, request, cq));
    }
    ::grpc::Status GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::g2engine::GetEntityByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>> AsyncGetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>>(AsyncGetEntityByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>> PrepareAsyncGetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>>(PrepareAsyncGetEntityByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::g2engine::GetEntityByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>> AsyncGetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>>(AsyncGetEntityByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>> PrepareAsyncGetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>>(PrepareAsyncGetEntityByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::g2engine::GetEntityByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>> AsyncGetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>>(AsyncGetEntityByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>> PrepareAsyncGetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>>(PrepareAsyncGetEntityByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::g2engine::GetEntityByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>> AsyncGetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>>(AsyncGetEntityByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>> PrepareAsyncGetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>>(PrepareAsyncGetEntityByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::g2engine::GetRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>> AsyncGetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>>(AsyncGetRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>> PrepareAsyncGetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>>(PrepareAsyncGetRecordRaw(context, request, cq));
    }
    ::grpc::Status GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::g2engine::GetRecord_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>> AsyncGetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>>(AsyncGetRecord_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>> PrepareAsyncGetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>>(PrepareAsyncGetRecord_V2Raw(context, request, cq));
    }
    ::grpc::Status GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::g2engine::GetRedoRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>> AsyncGetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>>(AsyncGetRedoRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>> PrepareAsyncGetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>>(PrepareAsyncGetRedoRecordRaw(context, request, cq));
    }
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>> AsyncGetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>>(AsyncGetRepositoryLastModifiedTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>> PrepareAsyncGetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>>(PrepareAsyncGetRepositoryLastModifiedTimeRaw(context, request, cq));
    }
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::g2engine::GetVirtualEntityByRecordIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>> AsyncGetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>>(AsyncGetVirtualEntityByRecordIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>> PrepareAsyncGetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>>(PrepareAsyncGetVirtualEntityByRecordIDRaw(context, request, cq));
    }
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>> AsyncGetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>>(AsyncGetVirtualEntityByRecordID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>> PrepareAsyncGetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>>(PrepareAsyncGetVirtualEntityByRecordID_V2Raw(context, request, cq));
    }
    ::grpc::Status HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::g2engine::HowEntityByEntityIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>> AsyncHowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>>(AsyncHowEntityByEntityIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>> PrepareAsyncHowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>>(PrepareAsyncHowEntityByEntityIDRaw(context, request, cq));
    }
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::g2engine::HowEntityByEntityID_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>> AsyncHowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>>(AsyncHowEntityByEntityID_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>> PrepareAsyncHowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>>(PrepareAsyncHowEntityByEntityID_V2Raw(context, request, cq));
    }
    ::grpc::Status Init(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::g2engine::InitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    ::grpc::Status InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::g2engine::InitWithConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>> AsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>>(AsyncInitWithConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>> PrepareAsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>>(PrepareAsyncInitWithConfigIDRaw(context, request, cq));
    }
    ::grpc::Status PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::g2engine::PrimeEngineResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>> AsyncPrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>>(AsyncPrimeEngineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>> PrepareAsyncPrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>>(PrepareAsyncPrimeEngineRaw(context, request, cq));
    }
    ::grpc::Status ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::g2engine::ReevaluateEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>> AsyncReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>>(AsyncReevaluateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>> PrepareAsyncReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>>(PrepareAsyncReevaluateEntityRaw(context, request, cq));
    }
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::g2engine::ReevaluateEntityWithInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>> AsyncReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>>(AsyncReevaluateEntityWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>> PrepareAsyncReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>>(PrepareAsyncReevaluateEntityWithInfoRaw(context, request, cq));
    }
    ::grpc::Status ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::g2engine::ReevaluateRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>> AsyncReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>>(AsyncReevaluateRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>> PrepareAsyncReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>>(PrepareAsyncReevaluateRecordRaw(context, request, cq));
    }
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::g2engine::ReevaluateRecordWithInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>> AsyncReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>>(AsyncReevaluateRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>> PrepareAsyncReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>>(PrepareAsyncReevaluateRecordWithInfoRaw(context, request, cq));
    }
    ::grpc::Status Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::g2engine::ReinitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>> AsyncReinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>>(AsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>> PrepareAsyncReinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>>(PrepareAsyncReinitRaw(context, request, cq));
    }
    ::grpc::Status ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::g2engine::ReplaceRecordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>> AsyncReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>>(AsyncReplaceRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>> PrepareAsyncReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>>(PrepareAsyncReplaceRecordRaw(context, request, cq));
    }
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::g2engine::ReplaceRecordWithInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>> AsyncReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>>(AsyncReplaceRecordWithInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>> PrepareAsyncReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>>(PrepareAsyncReplaceRecordWithInfoRaw(context, request, cq));
    }
    ::grpc::Status SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::g2engine::SearchByAttributesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>> AsyncSearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>>(AsyncSearchByAttributesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>> PrepareAsyncSearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>>(PrepareAsyncSearchByAttributesRaw(context, request, cq));
    }
    ::grpc::Status SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::g2engine::SearchByAttributes_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>> AsyncSearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>>(AsyncSearchByAttributes_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>> PrepareAsyncSearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>>(PrepareAsyncSearchByAttributes_V2Raw(context, request, cq));
    }
    ::grpc::Status Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::g2engine::StatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>> AsyncStats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>>(AsyncStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>> PrepareAsyncStats(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>>(PrepareAsyncStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::g2engine::StreamExportCSVEntityReportResponse>> StreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::g2engine::StreamExportCSVEntityReportResponse>>(StreamExportCSVEntityReportRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>> AsyncStreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>>(AsyncStreamExportCSVEntityReportRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>> PrepareAsyncStreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>>(PrepareAsyncStreamExportCSVEntityReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::g2engine::StreamExportJSONEntityReportResponse>> StreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::g2engine::StreamExportJSONEntityReportResponse>>(StreamExportJSONEntityReportRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>> AsyncStreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>>(AsyncStreamExportJSONEntityReportRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>> PrepareAsyncStreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>>(PrepareAsyncStreamExportJSONEntityReportRaw(context, request, cq));
    }
    ::grpc::Status WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::g2engine::WhyEntitiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>> AsyncWhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>>(AsyncWhyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>> PrepareAsyncWhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>>(PrepareAsyncWhyEntitiesRaw(context, request, cq));
    }
    ::grpc::Status WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::g2engine::WhyEntities_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>> AsyncWhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>>(AsyncWhyEntities_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>> PrepareAsyncWhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>>(PrepareAsyncWhyEntities_V2Raw(context, request, cq));
    }
    ::grpc::Status WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::g2engine::WhyRecordsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>> AsyncWhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>>(AsyncWhyRecordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>> PrepareAsyncWhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>>(PrepareAsyncWhyRecordsRaw(context, request, cq));
    }
    ::grpc::Status WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::g2engine::WhyRecords_V2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>> AsyncWhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>>(AsyncWhyRecords_V2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>> PrepareAsyncWhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>>(PrepareAsyncWhyRecords_V2Raw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void AddRecord(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void AddRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response, std::function<void(::grpc::Status)>) override;
      void CloseExport(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response, std::function<void(::grpc::Status)>) override;
      void CountRedoRecords(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRecord(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response, std::function<void(::grpc::Status)>) override;
      void Destroy(::grpc::ClientContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void ExportConfig(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void ExportConfigAndConfigID(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response, std::function<void(::grpc::Status)>) override;
      void ExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response, std::function<void(::grpc::Status)>) override;
      void ExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response, std::function<void(::grpc::Status)>) override;
      void FetchNext(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindInterestingEntitiesByEntityID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindInterestingEntitiesByRecordID(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindNetworkByEntityID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindNetworkByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindNetworkByRecordID(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindNetworkByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathExcludingByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathExcludingByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathExcludingByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathExcludingByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathIncludingSourceByEntityID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathIncludingSourceByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPathIncludingSourceByRecordID(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void FindPathIncludingSourceByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetActiveConfigID(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void GetEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void GetEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRecord(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response, std::function<void(::grpc::Status)>) override;
      void GetRecord_V2(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRedoRecord(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRepositoryLastModifiedTime(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetVirtualEntityByRecordID(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void GetVirtualEntityByRecordID_V2(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response, std::function<void(::grpc::Status)>) override;
      void HowEntityByEntityID(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response, std::function<void(::grpc::Status)>) override;
      void HowEntityByEntityID_V2(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Init(::grpc::ClientContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response, std::function<void(::grpc::Status)>) override;
      void Init(::grpc::ClientContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void InitWithConfigID(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response, std::function<void(::grpc::Status)>) override;
      void PrimeEngine(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void ReevaluateEntity(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void ReevaluateEntityWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void ReevaluateRecord(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void ReevaluateRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response, std::function<void(::grpc::Status)>) override;
      void Reinit(::grpc::ClientContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response, std::function<void(::grpc::Status)>) override;
      void ReplaceRecord(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void ReplaceRecordWithInfo(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchByAttributes(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response, std::function<void(::grpc::Status)>) override;
      void SearchByAttributes_V2(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response, std::function<void(::grpc::Status)>) override;
      void Stats(::grpc::ClientContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamExportCSVEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest* request, ::grpc::ClientReadReactor< ::g2engine::StreamExportCSVEntityReportResponse>* reactor) override;
      void StreamExportJSONEntityReport(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest* request, ::grpc::ClientReadReactor< ::g2engine::StreamExportJSONEntityReportResponse>* reactor) override;
      void WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response, std::function<void(::grpc::Status)>) override;
      void WhyEntities(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response, std::function<void(::grpc::Status)>) override;
      void WhyEntities_V2(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response, std::function<void(::grpc::Status)>) override;
      void WhyRecords(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response, std::function<void(::grpc::Status)>) override;
      void WhyRecords_V2(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>* AsyncAddRecordRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordResponse>* PrepareAsyncAddRecordRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>* AsyncAddRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::AddRecordWithInfoResponse>* PrepareAsyncAddRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::AddRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>* AsyncCloseExportRaw(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::CloseExportResponse>* PrepareAsyncCloseExportRaw(::grpc::ClientContext* context, const ::g2engine::CloseExportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>* AsyncCountRedoRecordsRaw(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::CountRedoRecordsResponse>* PrepareAsyncCountRedoRecordsRaw(::grpc::ClientContext* context, const ::g2engine::CountRedoRecordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>* AsyncDeleteRecordRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordResponse>* PrepareAsyncDeleteRecordRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>* AsyncDeleteRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DeleteRecordWithInfoResponse>* PrepareAsyncDeleteRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::DeleteRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2engine::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>* AsyncExportConfigRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigResponse>* PrepareAsyncExportConfigRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>* AsyncExportConfigAndConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportConfigAndConfigIDResponse>* PrepareAsyncExportConfigAndConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::ExportConfigAndConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>* AsyncExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportCSVEntityReportResponse>* PrepareAsyncExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>* AsyncExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ExportJSONEntityReportResponse>* PrepareAsyncExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::ExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>* AsyncFetchNextRaw(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FetchNextResponse>* PrepareAsyncFetchNextRaw(::grpc::ClientContext* context, const ::g2engine::FetchNextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>* AsyncFindInterestingEntitiesByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByEntityIDResponse>* PrepareAsyncFindInterestingEntitiesByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>* AsyncFindInterestingEntitiesByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindInterestingEntitiesByRecordIDResponse>* PrepareAsyncFindInterestingEntitiesByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>* AsyncFindNetworkByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityIDResponse>* PrepareAsyncFindNetworkByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>* AsyncFindNetworkByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByEntityID_V2Response>* PrepareAsyncFindNetworkByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>* AsyncFindNetworkByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordIDResponse>* PrepareAsyncFindNetworkByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>* AsyncFindNetworkByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindNetworkByRecordID_V2Response>* PrepareAsyncFindNetworkByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindNetworkByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>* AsyncFindPathByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityIDResponse>* PrepareAsyncFindPathByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>* AsyncFindPathByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByEntityID_V2Response>* PrepareAsyncFindPathByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>* AsyncFindPathByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordIDResponse>* PrepareAsyncFindPathByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>* AsyncFindPathByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathByRecordID_V2Response>* PrepareAsyncFindPathByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>* AsyncFindPathExcludingByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityIDResponse>* PrepareAsyncFindPathExcludingByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>* AsyncFindPathExcludingByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByEntityID_V2Response>* PrepareAsyncFindPathExcludingByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>* AsyncFindPathExcludingByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordIDResponse>* PrepareAsyncFindPathExcludingByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>* AsyncFindPathExcludingByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathExcludingByRecordID_V2Response>* PrepareAsyncFindPathExcludingByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>* AsyncFindPathIncludingSourceByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityIDResponse>* PrepareAsyncFindPathIncludingSourceByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* AsyncFindPathIncludingSourceByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* PrepareAsyncFindPathIncludingSourceByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>* AsyncFindPathIncludingSourceByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordIDResponse>* PrepareAsyncFindPathIncludingSourceByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* AsyncFindPathIncludingSourceByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* PrepareAsyncFindPathIncludingSourceByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>* AsyncGetActiveConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetActiveConfigIDResponse>* PrepareAsyncGetActiveConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::GetActiveConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>* AsyncGetEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityIDResponse>* PrepareAsyncGetEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>* AsyncGetEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByEntityID_V2Response>* PrepareAsyncGetEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>* AsyncGetEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordIDResponse>* PrepareAsyncGetEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>* AsyncGetEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetEntityByRecordID_V2Response>* PrepareAsyncGetEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>* AsyncGetRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecordResponse>* PrepareAsyncGetRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>* AsyncGetRecord_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRecord_V2Response>* PrepareAsyncGetRecord_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetRecord_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>* AsyncGetRedoRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRedoRecordResponse>* PrepareAsyncGetRedoRecordRaw(::grpc::ClientContext* context, const ::g2engine::GetRedoRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>* AsyncGetRepositoryLastModifiedTimeRaw(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetRepositoryLastModifiedTimeResponse>* PrepareAsyncGetRepositoryLastModifiedTimeRaw(::grpc::ClientContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>* AsyncGetVirtualEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordIDResponse>* PrepareAsyncGetVirtualEntityByRecordIDRaw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>* AsyncGetVirtualEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::GetVirtualEntityByRecordID_V2Response>* PrepareAsyncGetVirtualEntityByRecordID_V2Raw(::grpc::ClientContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>* AsyncHowEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityIDResponse>* PrepareAsyncHowEntityByEntityIDRaw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>* AsyncHowEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::HowEntityByEntityID_V2Response>* PrepareAsyncHowEntityByEntityID_V2Raw(::grpc::ClientContext* context, const ::g2engine::HowEntityByEntityID_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2engine::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>* AsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::InitWithConfigIDResponse>* PrepareAsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2engine::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>* AsyncPrimeEngineRaw(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::PrimeEngineResponse>* PrepareAsyncPrimeEngineRaw(::grpc::ClientContext* context, const ::g2engine::PrimeEngineRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>* AsyncReevaluateEntityRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityResponse>* PrepareAsyncReevaluateEntityRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>* AsyncReevaluateEntityWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateEntityWithInfoResponse>* PrepareAsyncReevaluateEntityWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>* AsyncReevaluateRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordResponse>* PrepareAsyncReevaluateRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>* AsyncReevaluateRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReevaluateRecordWithInfoResponse>* PrepareAsyncReevaluateRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>* AsyncReinitRaw(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReinitResponse>* PrepareAsyncReinitRaw(::grpc::ClientContext* context, const ::g2engine::ReinitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>* AsyncReplaceRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordResponse>* PrepareAsyncReplaceRecordRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>* AsyncReplaceRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::ReplaceRecordWithInfoResponse>* PrepareAsyncReplaceRecordWithInfoRaw(::grpc::ClientContext* context, const ::g2engine::ReplaceRecordWithInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>* AsyncSearchByAttributesRaw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributesResponse>* PrepareAsyncSearchByAttributesRaw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>* AsyncSearchByAttributes_V2Raw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::SearchByAttributes_V2Response>* PrepareAsyncSearchByAttributes_V2Raw(::grpc::ClientContext* context, const ::g2engine::SearchByAttributes_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>* AsyncStatsRaw(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::StatsResponse>* PrepareAsyncStatsRaw(::grpc::ClientContext* context, const ::g2engine::StatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::g2engine::StreamExportCSVEntityReportResponse>* StreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request) override;
    ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>* AsyncStreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::g2engine::StreamExportCSVEntityReportResponse>* PrepareAsyncStreamExportCSVEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportCSVEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::g2engine::StreamExportJSONEntityReportResponse>* StreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request) override;
    ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>* AsyncStreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::g2engine::StreamExportJSONEntityReportResponse>* PrepareAsyncStreamExportJSONEntityReportRaw(::grpc::ClientContext* context, const ::g2engine::StreamExportJSONEntityReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>* AsyncWhyEntitiesRaw(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntitiesResponse>* PrepareAsyncWhyEntitiesRaw(::grpc::ClientContext* context, const ::g2engine::WhyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>* AsyncWhyEntities_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyEntities_V2Response>* PrepareAsyncWhyEntities_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyEntities_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>* AsyncWhyRecordsRaw(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecordsResponse>* PrepareAsyncWhyRecordsRaw(::grpc::ClientContext* context, const ::g2engine::WhyRecordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>* AsyncWhyRecords_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2engine::WhyRecords_V2Response>* PrepareAsyncWhyRecords_V2Raw(::grpc::ClientContext* context, const ::g2engine::WhyRecords_V2Request& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_AddRecordWithInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_CloseExport_;
    const ::grpc::internal::RpcMethod rpcmethod_CountRedoRecords_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRecordWithInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_Destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_ExportConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_ExportConfigAndConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_ExportCSVEntityReport_;
    const ::grpc::internal::RpcMethod rpcmethod_ExportJSONEntityReport_;
    const ::grpc::internal::RpcMethod rpcmethod_FetchNext_;
    const ::grpc::internal::RpcMethod rpcmethod_FindInterestingEntitiesByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindInterestingEntitiesByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindNetworkByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindNetworkByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindNetworkByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindNetworkByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathExcludingByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathExcludingByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathExcludingByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathExcludingByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathIncludingSourceByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathIncludingSourceByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathIncludingSourceByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPathIncludingSourceByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActiveConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecord_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRedoRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRepositoryLastModifiedTime_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVirtualEntityByRecordID_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVirtualEntityByRecordID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_HowEntityByEntityID_;
    const ::grpc::internal::RpcMethod rpcmethod_HowEntityByEntityID_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_Init_;
    const ::grpc::internal::RpcMethod rpcmethod_InitWithConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_PrimeEngine_;
    const ::grpc::internal::RpcMethod rpcmethod_ReevaluateEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_ReevaluateEntityWithInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_ReevaluateRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_ReevaluateRecordWithInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_Reinit_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceRecordWithInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchByAttributes_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchByAttributes_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_Stats_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamExportCSVEntityReport_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamExportJSONEntityReport_;
    const ::grpc::internal::RpcMethod rpcmethod_WhyEntities_;
    const ::grpc::internal::RpcMethod rpcmethod_WhyEntities_V2_;
    const ::grpc::internal::RpcMethod rpcmethod_WhyRecords_;
    const ::grpc::internal::RpcMethod rpcmethod_WhyRecords_V2_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddRecord(::grpc::ServerContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response);
    virtual ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response);
    virtual ::grpc::Status CloseExport(::grpc::ServerContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response);
    virtual ::grpc::Status CountRedoRecords(::grpc::ServerContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response);
    virtual ::grpc::Status DeleteRecord(::grpc::ServerContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response);
    virtual ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response);
    virtual ::grpc::Status Destroy(::grpc::ServerContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response);
    virtual ::grpc::Status ExportConfig(::grpc::ServerContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response);
    virtual ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response);
    virtual ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response);
    virtual ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response);
    virtual ::grpc::Status FetchNext(::grpc::ServerContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response);
    virtual ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response);
    virtual ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response);
    virtual ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response);
    virtual ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response);
    virtual ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response);
    virtual ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response);
    virtual ::grpc::Status FindPathByEntityID(::grpc::ServerContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response);
    virtual ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response);
    virtual ::grpc::Status FindPathByRecordID(::grpc::ServerContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response);
    virtual ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response);
    virtual ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response);
    virtual ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response);
    virtual ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response);
    virtual ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response);
    virtual ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response);
    virtual ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response);
    virtual ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response);
    virtual ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response);
    virtual ::grpc::Status GetActiveConfigID(::grpc::ServerContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response);
    virtual ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response);
    virtual ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response);
    virtual ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response);
    virtual ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response);
    virtual ::grpc::Status GetRecord(::grpc::ServerContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response);
    virtual ::grpc::Status GetRecord_V2(::grpc::ServerContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response);
    virtual ::grpc::Status GetRedoRecord(::grpc::ServerContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response);
    virtual ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response);
    virtual ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response);
    virtual ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response);
    virtual ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response);
    virtual ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response);
    virtual ::grpc::Status Init(::grpc::ServerContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response);
    virtual ::grpc::Status InitWithConfigID(::grpc::ServerContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response);
    virtual ::grpc::Status PrimeEngine(::grpc::ServerContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response);
    virtual ::grpc::Status ReevaluateEntity(::grpc::ServerContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response);
    virtual ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response);
    virtual ::grpc::Status ReevaluateRecord(::grpc::ServerContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response);
    virtual ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response);
    virtual ::grpc::Status Reinit(::grpc::ServerContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response);
    virtual ::grpc::Status ReplaceRecord(::grpc::ServerContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response);
    virtual ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response);
    virtual ::grpc::Status SearchByAttributes(::grpc::ServerContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response);
    virtual ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response);
    virtual ::grpc::Status Stats(::grpc::ServerContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response);
    virtual ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* context, const ::g2engine::StreamExportCSVEntityReportRequest* request, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* writer);
    virtual ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* context, const ::g2engine::StreamExportJSONEntityReportRequest* request, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* writer);
    virtual ::grpc::Status WhyEntities(::grpc::ServerContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response);
    virtual ::grpc::Status WhyEntities_V2(::grpc::ServerContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response);
    virtual ::grpc::Status WhyRecords(::grpc::ServerContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response);
    virtual ::grpc::Status WhyRecords_V2(::grpc::ServerContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddRecord() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRecord(::grpc::ServerContext* context, ::g2engine::AddRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::AddRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRecordWithInfo(::grpc::ServerContext* context, ::g2engine::AddRecordWithInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::AddRecordWithInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CloseExport() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCloseExport(::grpc::ServerContext* context, ::g2engine::CloseExportRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::CloseExportResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCountRedoRecords(::grpc::ServerContext* context, ::g2engine::CountRedoRecordsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::CountRedoRecordsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRecord(::grpc::ServerContext* context, ::g2engine::DeleteRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::DeleteRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRecordWithInfo(::grpc::ServerContext* context, ::g2engine::DeleteRecordWithInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::DeleteRecordWithInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Destroy() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::g2engine::DestroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::DestroyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExportConfig() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportConfig(::grpc::ServerContext* context, ::g2engine::ExportConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ExportConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportConfigAndConfigID(::grpc::ServerContext* context, ::g2engine::ExportConfigAndConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ExportConfigAndConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportCSVEntityReport(::grpc::ServerContext* context, ::g2engine::ExportCSVEntityReportRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ExportCSVEntityReportResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportJSONEntityReport(::grpc::ServerContext* context, ::g2engine::ExportJSONEntityReportRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ExportJSONEntityReportResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FetchNext() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchNext(::grpc::ServerContext* context, ::g2engine::FetchNextRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FetchNextResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindInterestingEntitiesByEntityID(::grpc::ServerContext* context, ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindInterestingEntitiesByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindInterestingEntitiesByRecordID(::grpc::ServerContext* context, ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindInterestingEntitiesByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByEntityID(::grpc::ServerContext* context, ::g2engine::FindNetworkByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindNetworkByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByEntityID_V2(::grpc::ServerContext* context, ::g2engine::FindNetworkByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindNetworkByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByRecordID(::grpc::ServerContext* context, ::g2engine::FindNetworkByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindNetworkByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByRecordID_V2(::grpc::ServerContext* context, ::g2engine::FindNetworkByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindNetworkByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByEntityID(::grpc::ServerContext* context, ::g2engine::FindPathByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByEntityID_V2(::grpc::ServerContext* context, ::g2engine::FindPathByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByRecordID(::grpc::ServerContext* context, ::g2engine::FindPathByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByRecordID_V2(::grpc::ServerContext* context, ::g2engine::FindPathByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByEntityID(::grpc::ServerContext* context, ::g2engine::FindPathExcludingByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathExcludingByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByEntityID_V2(::grpc::ServerContext* context, ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathExcludingByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByRecordID(::grpc::ServerContext* context, ::g2engine::FindPathExcludingByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathExcludingByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByRecordID_V2(::grpc::ServerContext* context, ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathExcludingByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByEntityID(::grpc::ServerContext* context, ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathIncludingSourceByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* context, ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByRecordID(::grpc::ServerContext* context, ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathIncludingSourceByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* context, ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActiveConfigID(::grpc::ServerContext* context, ::g2engine::GetActiveConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetActiveConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByEntityID(::grpc::ServerContext* context, ::g2engine::GetEntityByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetEntityByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByEntityID_V2(::grpc::ServerContext* context, ::g2engine::GetEntityByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetEntityByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByRecordID(::grpc::ServerContext* context, ::g2engine::GetEntityByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetEntityByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByRecordID_V2(::grpc::ServerContext* context, ::g2engine::GetEntityByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetEntityByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecord() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord(::grpc::ServerContext* context, ::g2engine::GetRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord_V2(::grpc::ServerContext* context, ::g2engine::GetRecord_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetRecord_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRedoRecord(::grpc::ServerContext* context, ::g2engine::GetRedoRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetRedoRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRepositoryLastModifiedTime(::grpc::ServerContext* context, ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetRepositoryLastModifiedTimeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtualEntityByRecordID(::grpc::ServerContext* context, ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetVirtualEntityByRecordIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtualEntityByRecordID_V2(::grpc::ServerContext* context, ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::GetVirtualEntityByRecordID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHowEntityByEntityID(::grpc::ServerContext* context, ::g2engine::HowEntityByEntityIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::HowEntityByEntityIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHowEntityByEntityID_V2(::grpc::ServerContext* context, ::g2engine::HowEntityByEntityID_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::HowEntityByEntityID_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Init() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::g2engine::InitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::InitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitWithConfigID(::grpc::ServerContext* context, ::g2engine::InitWithConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::InitWithConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPrimeEngine(::grpc::ServerContext* context, ::g2engine::PrimeEngineRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::PrimeEngineResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateEntity(::grpc::ServerContext* context, ::g2engine::ReevaluateEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReevaluateEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateEntityWithInfo(::grpc::ServerContext* context, ::g2engine::ReevaluateEntityWithInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReevaluateEntityWithInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateRecord(::grpc::ServerContext* context, ::g2engine::ReevaluateRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReevaluateRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateRecordWithInfo(::grpc::ServerContext* context, ::g2engine::ReevaluateRecordWithInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReevaluateRecordWithInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Reinit() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinit(::grpc::ServerContext* context, ::g2engine::ReinitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReinitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceRecord(::grpc::ServerContext* context, ::g2engine::ReplaceRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReplaceRecordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceRecordWithInfo(::grpc::ServerContext* context, ::g2engine::ReplaceRecordWithInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::ReplaceRecordWithInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchByAttributes(::grpc::ServerContext* context, ::g2engine::SearchByAttributesRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::SearchByAttributesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchByAttributes_V2(::grpc::ServerContext* context, ::g2engine::SearchByAttributes_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::SearchByAttributes_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Stats() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStats(::grpc::ServerContext* context, ::g2engine::StatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::StatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamExportCSVEntityReport(::grpc::ServerContext* context, ::g2engine::StreamExportCSVEntityReportRequest* request, ::grpc::ServerAsyncWriter< ::g2engine::StreamExportCSVEntityReportResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(56, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamExportJSONEntityReport(::grpc::ServerContext* context, ::g2engine::StreamExportJSONEntityReportRequest* request, ::grpc::ServerAsyncWriter< ::g2engine::StreamExportJSONEntityReportResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(57, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WhyEntities() {
      ::grpc::Service::MarkMethodAsync(58);
    }
    ~WithAsyncMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyEntities(::grpc::ServerContext* context, ::g2engine::WhyEntitiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::WhyEntitiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodAsync(59);
    }
    ~WithAsyncMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyEntities_V2(::grpc::ServerContext* context, ::g2engine::WhyEntities_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::WhyEntities_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WhyRecords() {
      ::grpc::Service::MarkMethodAsync(60);
    }
    ~WithAsyncMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyRecords(::grpc::ServerContext* context, ::g2engine::WhyRecordsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::WhyRecordsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodAsync(61);
    }
    ~WithAsyncMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyRecords_V2(::grpc::ServerContext* context, ::g2engine::WhyRecords_V2Request* request, ::grpc::ServerAsyncResponseWriter< ::g2engine::WhyRecords_V2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddRecord<WithAsyncMethod_AddRecordWithInfo<WithAsyncMethod_CloseExport<WithAsyncMethod_CountRedoRecords<WithAsyncMethod_DeleteRecord<WithAsyncMethod_DeleteRecordWithInfo<WithAsyncMethod_Destroy<WithAsyncMethod_ExportConfig<WithAsyncMethod_ExportConfigAndConfigID<WithAsyncMethod_ExportCSVEntityReport<WithAsyncMethod_ExportJSONEntityReport<WithAsyncMethod_FetchNext<WithAsyncMethod_FindInterestingEntitiesByEntityID<WithAsyncMethod_FindInterestingEntitiesByRecordID<WithAsyncMethod_FindNetworkByEntityID<WithAsyncMethod_FindNetworkByEntityID_V2<WithAsyncMethod_FindNetworkByRecordID<WithAsyncMethod_FindNetworkByRecordID_V2<WithAsyncMethod_FindPathByEntityID<WithAsyncMethod_FindPathByEntityID_V2<WithAsyncMethod_FindPathByRecordID<WithAsyncMethod_FindPathByRecordID_V2<WithAsyncMethod_FindPathExcludingByEntityID<WithAsyncMethod_FindPathExcludingByEntityID_V2<WithAsyncMethod_FindPathExcludingByRecordID<WithAsyncMethod_FindPathExcludingByRecordID_V2<WithAsyncMethod_FindPathIncludingSourceByEntityID<WithAsyncMethod_FindPathIncludingSourceByEntityID_V2<WithAsyncMethod_FindPathIncludingSourceByRecordID<WithAsyncMethod_FindPathIncludingSourceByRecordID_V2<WithAsyncMethod_GetActiveConfigID<WithAsyncMethod_GetEntityByEntityID<WithAsyncMethod_GetEntityByEntityID_V2<WithAsyncMethod_GetEntityByRecordID<WithAsyncMethod_GetEntityByRecordID_V2<WithAsyncMethod_GetRecord<WithAsyncMethod_GetRecord_V2<WithAsyncMethod_GetRedoRecord<WithAsyncMethod_GetRepositoryLastModifiedTime<WithAsyncMethod_GetVirtualEntityByRecordID<WithAsyncMethod_GetVirtualEntityByRecordID_V2<WithAsyncMethod_HowEntityByEntityID<WithAsyncMethod_HowEntityByEntityID_V2<WithAsyncMethod_Init<WithAsyncMethod_InitWithConfigID<WithAsyncMethod_PrimeEngine<WithAsyncMethod_ReevaluateEntity<WithAsyncMethod_ReevaluateEntityWithInfo<WithAsyncMethod_ReevaluateRecord<WithAsyncMethod_ReevaluateRecordWithInfo<WithAsyncMethod_Reinit<WithAsyncMethod_ReplaceRecord<WithAsyncMethod_ReplaceRecordWithInfo<WithAsyncMethod_SearchByAttributes<WithAsyncMethod_SearchByAttributes_V2<WithAsyncMethod_Stats<WithAsyncMethod_StreamExportCSVEntityReport<WithAsyncMethod_StreamExportJSONEntityReport<WithAsyncMethod_WhyEntities<WithAsyncMethod_WhyEntities_V2<WithAsyncMethod_WhyRecords<WithAsyncMethod_WhyRecords_V2<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddRecord() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::AddRecordRequest, ::g2engine::AddRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::AddRecordRequest* request, ::g2engine::AddRecordResponse* response) { return this->AddRecord(context, request, response); }));}
    void SetMessageAllocatorFor_AddRecord(
        ::grpc::MessageAllocator< ::g2engine::AddRecordRequest, ::g2engine::AddRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::AddRecordRequest, ::g2engine::AddRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::AddRecordWithInfoRequest, ::g2engine::AddRecordWithInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::AddRecordWithInfoRequest* request, ::g2engine::AddRecordWithInfoResponse* response) { return this->AddRecordWithInfo(context, request, response); }));}
    void SetMessageAllocatorFor_AddRecordWithInfo(
        ::grpc::MessageAllocator< ::g2engine::AddRecordWithInfoRequest, ::g2engine::AddRecordWithInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::AddRecordWithInfoRequest, ::g2engine::AddRecordWithInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CloseExport() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::CloseExportRequest, ::g2engine::CloseExportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::CloseExportRequest* request, ::g2engine::CloseExportResponse* response) { return this->CloseExport(context, request, response); }));}
    void SetMessageAllocatorFor_CloseExport(
        ::grpc::MessageAllocator< ::g2engine::CloseExportRequest, ::g2engine::CloseExportResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::CloseExportRequest, ::g2engine::CloseExportResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CloseExport(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::CountRedoRecordsRequest, ::g2engine::CountRedoRecordsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::CountRedoRecordsRequest* request, ::g2engine::CountRedoRecordsResponse* response) { return this->CountRedoRecords(context, request, response); }));}
    void SetMessageAllocatorFor_CountRedoRecords(
        ::grpc::MessageAllocator< ::g2engine::CountRedoRecordsRequest, ::g2engine::CountRedoRecordsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::CountRedoRecordsRequest, ::g2engine::CountRedoRecordsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CountRedoRecords(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::DeleteRecordRequest, ::g2engine::DeleteRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::DeleteRecordRequest* request, ::g2engine::DeleteRecordResponse* response) { return this->DeleteRecord(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRecord(
        ::grpc::MessageAllocator< ::g2engine::DeleteRecordRequest, ::g2engine::DeleteRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::DeleteRecordRequest, ::g2engine::DeleteRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::DeleteRecordWithInfoRequest, ::g2engine::DeleteRecordWithInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::DeleteRecordWithInfoRequest* request, ::g2engine::DeleteRecordWithInfoResponse* response) { return this->DeleteRecordWithInfo(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRecordWithInfo(
        ::grpc::MessageAllocator< ::g2engine::DeleteRecordWithInfoRequest, ::g2engine::DeleteRecordWithInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::DeleteRecordWithInfoRequest, ::g2engine::DeleteRecordWithInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::DestroyRequest, ::g2engine::DestroyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::DestroyRequest* request, ::g2engine::DestroyResponse* response) { return this->Destroy(context, request, response); }));}
    void SetMessageAllocatorFor_Destroy(
        ::grpc::MessageAllocator< ::g2engine::DestroyRequest, ::g2engine::DestroyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::DestroyRequest, ::g2engine::DestroyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExportConfig() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportConfigRequest, ::g2engine::ExportConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ExportConfigRequest* request, ::g2engine::ExportConfigResponse* response) { return this->ExportConfig(context, request, response); }));}
    void SetMessageAllocatorFor_ExportConfig(
        ::grpc::MessageAllocator< ::g2engine::ExportConfigRequest, ::g2engine::ExportConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportConfigRequest, ::g2engine::ExportConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportConfigAndConfigIDRequest, ::g2engine::ExportConfigAndConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ExportConfigAndConfigIDRequest* request, ::g2engine::ExportConfigAndConfigIDResponse* response) { return this->ExportConfigAndConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_ExportConfigAndConfigID(
        ::grpc::MessageAllocator< ::g2engine::ExportConfigAndConfigIDRequest, ::g2engine::ExportConfigAndConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportConfigAndConfigIDRequest, ::g2engine::ExportConfigAndConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportConfigAndConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportCSVEntityReportRequest, ::g2engine::ExportCSVEntityReportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ExportCSVEntityReportRequest* request, ::g2engine::ExportCSVEntityReportResponse* response) { return this->ExportCSVEntityReport(context, request, response); }));}
    void SetMessageAllocatorFor_ExportCSVEntityReport(
        ::grpc::MessageAllocator< ::g2engine::ExportCSVEntityReportRequest, ::g2engine::ExportCSVEntityReportResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportCSVEntityReportRequest, ::g2engine::ExportCSVEntityReportResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportCSVEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportJSONEntityReportRequest, ::g2engine::ExportJSONEntityReportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ExportJSONEntityReportRequest* request, ::g2engine::ExportJSONEntityReportResponse* response) { return this->ExportJSONEntityReport(context, request, response); }));}
    void SetMessageAllocatorFor_ExportJSONEntityReport(
        ::grpc::MessageAllocator< ::g2engine::ExportJSONEntityReportRequest, ::g2engine::ExportJSONEntityReportResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ExportJSONEntityReportRequest, ::g2engine::ExportJSONEntityReportResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportJSONEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FetchNext() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FetchNextRequest, ::g2engine::FetchNextResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FetchNextRequest* request, ::g2engine::FetchNextResponse* response) { return this->FetchNext(context, request, response); }));}
    void SetMessageAllocatorFor_FetchNext(
        ::grpc::MessageAllocator< ::g2engine::FetchNextRequest, ::g2engine::FetchNextResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FetchNextRequest, ::g2engine::FetchNextResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchNext(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindInterestingEntitiesByEntityIDRequest, ::g2engine::FindInterestingEntitiesByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* request, ::g2engine::FindInterestingEntitiesByEntityIDResponse* response) { return this->FindInterestingEntitiesByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_FindInterestingEntitiesByEntityID(
        ::grpc::MessageAllocator< ::g2engine::FindInterestingEntitiesByEntityIDRequest, ::g2engine::FindInterestingEntitiesByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindInterestingEntitiesByEntityIDRequest, ::g2engine::FindInterestingEntitiesByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindInterestingEntitiesByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindInterestingEntitiesByRecordIDRequest, ::g2engine::FindInterestingEntitiesByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* request, ::g2engine::FindInterestingEntitiesByRecordIDResponse* response) { return this->FindInterestingEntitiesByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_FindInterestingEntitiesByRecordID(
        ::grpc::MessageAllocator< ::g2engine::FindInterestingEntitiesByRecordIDRequest, ::g2engine::FindInterestingEntitiesByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindInterestingEntitiesByRecordIDRequest, ::g2engine::FindInterestingEntitiesByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindInterestingEntitiesByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByEntityIDRequest, ::g2engine::FindNetworkByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindNetworkByEntityIDRequest* request, ::g2engine::FindNetworkByEntityIDResponse* response) { return this->FindNetworkByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_FindNetworkByEntityID(
        ::grpc::MessageAllocator< ::g2engine::FindNetworkByEntityIDRequest, ::g2engine::FindNetworkByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByEntityIDRequest, ::g2engine::FindNetworkByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByEntityID_V2Request, ::g2engine::FindNetworkByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindNetworkByEntityID_V2Request* request, ::g2engine::FindNetworkByEntityID_V2Response* response) { return this->FindNetworkByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindNetworkByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindNetworkByEntityID_V2Request, ::g2engine::FindNetworkByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByEntityID_V2Request, ::g2engine::FindNetworkByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByRecordIDRequest, ::g2engine::FindNetworkByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindNetworkByRecordIDRequest* request, ::g2engine::FindNetworkByRecordIDResponse* response) { return this->FindNetworkByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_FindNetworkByRecordID(
        ::grpc::MessageAllocator< ::g2engine::FindNetworkByRecordIDRequest, ::g2engine::FindNetworkByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByRecordIDRequest, ::g2engine::FindNetworkByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByRecordID_V2Request, ::g2engine::FindNetworkByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindNetworkByRecordID_V2Request* request, ::g2engine::FindNetworkByRecordID_V2Response* response) { return this->FindNetworkByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindNetworkByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindNetworkByRecordID_V2Request, ::g2engine::FindNetworkByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindNetworkByRecordID_V2Request, ::g2engine::FindNetworkByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByEntityIDRequest, ::g2engine::FindPathByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathByEntityIDRequest* request, ::g2engine::FindPathByEntityIDResponse* response) { return this->FindPathByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathByEntityID(
        ::grpc::MessageAllocator< ::g2engine::FindPathByEntityIDRequest, ::g2engine::FindPathByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByEntityIDRequest, ::g2engine::FindPathByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByEntityID_V2Request, ::g2engine::FindPathByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathByEntityID_V2Request* request, ::g2engine::FindPathByEntityID_V2Response* response) { return this->FindPathByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathByEntityID_V2Request, ::g2engine::FindPathByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByEntityID_V2Request, ::g2engine::FindPathByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByRecordIDRequest, ::g2engine::FindPathByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathByRecordIDRequest* request, ::g2engine::FindPathByRecordIDResponse* response) { return this->FindPathByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathByRecordID(
        ::grpc::MessageAllocator< ::g2engine::FindPathByRecordIDRequest, ::g2engine::FindPathByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByRecordIDRequest, ::g2engine::FindPathByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByRecordID_V2Request, ::g2engine::FindPathByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathByRecordID_V2Request* request, ::g2engine::FindPathByRecordID_V2Response* response) { return this->FindPathByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathByRecordID_V2Request, ::g2engine::FindPathByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathByRecordID_V2Request, ::g2engine::FindPathByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByEntityIDRequest, ::g2engine::FindPathExcludingByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathExcludingByEntityIDRequest* request, ::g2engine::FindPathExcludingByEntityIDResponse* response) { return this->FindPathExcludingByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathExcludingByEntityID(
        ::grpc::MessageAllocator< ::g2engine::FindPathExcludingByEntityIDRequest, ::g2engine::FindPathExcludingByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByEntityIDRequest, ::g2engine::FindPathExcludingByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByEntityID_V2Request, ::g2engine::FindPathExcludingByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathExcludingByEntityID_V2Request* request, ::g2engine::FindPathExcludingByEntityID_V2Response* response) { return this->FindPathExcludingByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathExcludingByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathExcludingByEntityID_V2Request, ::g2engine::FindPathExcludingByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByEntityID_V2Request, ::g2engine::FindPathExcludingByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByRecordIDRequest, ::g2engine::FindPathExcludingByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathExcludingByRecordIDRequest* request, ::g2engine::FindPathExcludingByRecordIDResponse* response) { return this->FindPathExcludingByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathExcludingByRecordID(
        ::grpc::MessageAllocator< ::g2engine::FindPathExcludingByRecordIDRequest, ::g2engine::FindPathExcludingByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByRecordIDRequest, ::g2engine::FindPathExcludingByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByRecordID_V2Request, ::g2engine::FindPathExcludingByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathExcludingByRecordID_V2Request* request, ::g2engine::FindPathExcludingByRecordID_V2Response* response) { return this->FindPathExcludingByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathExcludingByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathExcludingByRecordID_V2Request, ::g2engine::FindPathExcludingByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathExcludingByRecordID_V2Request, ::g2engine::FindPathExcludingByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByEntityIDRequest, ::g2engine::FindPathIncludingSourceByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* request, ::g2engine::FindPathIncludingSourceByEntityIDResponse* response) { return this->FindPathIncludingSourceByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathIncludingSourceByEntityID(
        ::grpc::MessageAllocator< ::g2engine::FindPathIncludingSourceByEntityIDRequest, ::g2engine::FindPathIncludingSourceByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByEntityIDRequest, ::g2engine::FindPathIncludingSourceByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByEntityID_V2Request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* response) { return this->FindPathIncludingSourceByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathIncludingSourceByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathIncludingSourceByEntityID_V2Request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByEntityID_V2Request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByRecordIDRequest, ::g2engine::FindPathIncludingSourceByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* request, ::g2engine::FindPathIncludingSourceByRecordIDResponse* response) { return this->FindPathIncludingSourceByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathIncludingSourceByRecordID(
        ::grpc::MessageAllocator< ::g2engine::FindPathIncludingSourceByRecordIDRequest, ::g2engine::FindPathIncludingSourceByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByRecordIDRequest, ::g2engine::FindPathIncludingSourceByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByRecordID_V2Request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* response) { return this->FindPathIncludingSourceByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_FindPathIncludingSourceByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::FindPathIncludingSourceByRecordID_V2Request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::FindPathIncludingSourceByRecordID_V2Request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetActiveConfigIDRequest, ::g2engine::GetActiveConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetActiveConfigIDRequest* request, ::g2engine::GetActiveConfigIDResponse* response) { return this->GetActiveConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_GetActiveConfigID(
        ::grpc::MessageAllocator< ::g2engine::GetActiveConfigIDRequest, ::g2engine::GetActiveConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetActiveConfigIDRequest, ::g2engine::GetActiveConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActiveConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByEntityIDRequest, ::g2engine::GetEntityByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetEntityByEntityIDRequest* request, ::g2engine::GetEntityByEntityIDResponse* response) { return this->GetEntityByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityByEntityID(
        ::grpc::MessageAllocator< ::g2engine::GetEntityByEntityIDRequest, ::g2engine::GetEntityByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByEntityIDRequest, ::g2engine::GetEntityByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByEntityID_V2Request, ::g2engine::GetEntityByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetEntityByEntityID_V2Request* request, ::g2engine::GetEntityByEntityID_V2Response* response) { return this->GetEntityByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::GetEntityByEntityID_V2Request, ::g2engine::GetEntityByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByEntityID_V2Request, ::g2engine::GetEntityByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByRecordIDRequest, ::g2engine::GetEntityByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetEntityByRecordIDRequest* request, ::g2engine::GetEntityByRecordIDResponse* response) { return this->GetEntityByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityByRecordID(
        ::grpc::MessageAllocator< ::g2engine::GetEntityByRecordIDRequest, ::g2engine::GetEntityByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByRecordIDRequest, ::g2engine::GetEntityByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByRecordID_V2Request, ::g2engine::GetEntityByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetEntityByRecordID_V2Request* request, ::g2engine::GetEntityByRecordID_V2Response* response) { return this->GetEntityByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::GetEntityByRecordID_V2Request, ::g2engine::GetEntityByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetEntityByRecordID_V2Request, ::g2engine::GetEntityByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRecord() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRecordRequest, ::g2engine::GetRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetRecordRequest* request, ::g2engine::GetRecordResponse* response) { return this->GetRecord(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecord(
        ::grpc::MessageAllocator< ::g2engine::GetRecordRequest, ::g2engine::GetRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRecordRequest, ::g2engine::GetRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRecord_V2Request, ::g2engine::GetRecord_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetRecord_V2Request* request, ::g2engine::GetRecord_V2Response* response) { return this->GetRecord_V2(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecord_V2(
        ::grpc::MessageAllocator< ::g2engine::GetRecord_V2Request, ::g2engine::GetRecord_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRecord_V2Request, ::g2engine::GetRecord_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecord_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRedoRecordRequest, ::g2engine::GetRedoRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetRedoRecordRequest* request, ::g2engine::GetRedoRecordResponse* response) { return this->GetRedoRecord(context, request, response); }));}
    void SetMessageAllocatorFor_GetRedoRecord(
        ::grpc::MessageAllocator< ::g2engine::GetRedoRecordRequest, ::g2engine::GetRedoRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRedoRecordRequest, ::g2engine::GetRedoRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRedoRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRepositoryLastModifiedTimeRequest, ::g2engine::GetRepositoryLastModifiedTimeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetRepositoryLastModifiedTimeRequest* request, ::g2engine::GetRepositoryLastModifiedTimeResponse* response) { return this->GetRepositoryLastModifiedTime(context, request, response); }));}
    void SetMessageAllocatorFor_GetRepositoryLastModifiedTime(
        ::grpc::MessageAllocator< ::g2engine::GetRepositoryLastModifiedTimeRequest, ::g2engine::GetRepositoryLastModifiedTimeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetRepositoryLastModifiedTimeRequest, ::g2engine::GetRepositoryLastModifiedTimeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRepositoryLastModifiedTime(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetVirtualEntityByRecordIDRequest, ::g2engine::GetVirtualEntityByRecordIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetVirtualEntityByRecordIDRequest* request, ::g2engine::GetVirtualEntityByRecordIDResponse* response) { return this->GetVirtualEntityByRecordID(context, request, response); }));}
    void SetMessageAllocatorFor_GetVirtualEntityByRecordID(
        ::grpc::MessageAllocator< ::g2engine::GetVirtualEntityByRecordIDRequest, ::g2engine::GetVirtualEntityByRecordIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetVirtualEntityByRecordIDRequest, ::g2engine::GetVirtualEntityByRecordIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtualEntityByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::GetVirtualEntityByRecordID_V2Request, ::g2engine::GetVirtualEntityByRecordID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::GetVirtualEntityByRecordID_V2Request* request, ::g2engine::GetVirtualEntityByRecordID_V2Response* response) { return this->GetVirtualEntityByRecordID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_GetVirtualEntityByRecordID_V2(
        ::grpc::MessageAllocator< ::g2engine::GetVirtualEntityByRecordID_V2Request, ::g2engine::GetVirtualEntityByRecordID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::GetVirtualEntityByRecordID_V2Request, ::g2engine::GetVirtualEntityByRecordID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtualEntityByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::HowEntityByEntityIDRequest, ::g2engine::HowEntityByEntityIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::HowEntityByEntityIDRequest* request, ::g2engine::HowEntityByEntityIDResponse* response) { return this->HowEntityByEntityID(context, request, response); }));}
    void SetMessageAllocatorFor_HowEntityByEntityID(
        ::grpc::MessageAllocator< ::g2engine::HowEntityByEntityIDRequest, ::g2engine::HowEntityByEntityIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::HowEntityByEntityIDRequest, ::g2engine::HowEntityByEntityIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HowEntityByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::HowEntityByEntityID_V2Request, ::g2engine::HowEntityByEntityID_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::HowEntityByEntityID_V2Request* request, ::g2engine::HowEntityByEntityID_V2Response* response) { return this->HowEntityByEntityID_V2(context, request, response); }));}
    void SetMessageAllocatorFor_HowEntityByEntityID_V2(
        ::grpc::MessageAllocator< ::g2engine::HowEntityByEntityID_V2Request, ::g2engine::HowEntityByEntityID_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::HowEntityByEntityID_V2Request, ::g2engine::HowEntityByEntityID_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HowEntityByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Init() {
      ::grpc::Service::MarkMethodCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::InitRequest, ::g2engine::InitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::InitRequest* request, ::g2engine::InitResponse* response) { return this->Init(context, request, response); }));}
    void SetMessageAllocatorFor_Init(
        ::grpc::MessageAllocator< ::g2engine::InitRequest, ::g2engine::InitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::InitRequest, ::g2engine::InitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::InitWithConfigIDRequest, ::g2engine::InitWithConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::InitWithConfigIDRequest* request, ::g2engine::InitWithConfigIDResponse* response) { return this->InitWithConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_InitWithConfigID(
        ::grpc::MessageAllocator< ::g2engine::InitWithConfigIDRequest, ::g2engine::InitWithConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::InitWithConfigIDRequest, ::g2engine::InitWithConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitWithConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::PrimeEngineRequest, ::g2engine::PrimeEngineResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::PrimeEngineRequest* request, ::g2engine::PrimeEngineResponse* response) { return this->PrimeEngine(context, request, response); }));}
    void SetMessageAllocatorFor_PrimeEngine(
        ::grpc::MessageAllocator< ::g2engine::PrimeEngineRequest, ::g2engine::PrimeEngineResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::PrimeEngineRequest, ::g2engine::PrimeEngineResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PrimeEngine(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateEntityRequest, ::g2engine::ReevaluateEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReevaluateEntityRequest* request, ::g2engine::ReevaluateEntityResponse* response) { return this->ReevaluateEntity(context, request, response); }));}
    void SetMessageAllocatorFor_ReevaluateEntity(
        ::grpc::MessageAllocator< ::g2engine::ReevaluateEntityRequest, ::g2engine::ReevaluateEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateEntityRequest, ::g2engine::ReevaluateEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateEntityWithInfoRequest, ::g2engine::ReevaluateEntityWithInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReevaluateEntityWithInfoRequest* request, ::g2engine::ReevaluateEntityWithInfoResponse* response) { return this->ReevaluateEntityWithInfo(context, request, response); }));}
    void SetMessageAllocatorFor_ReevaluateEntityWithInfo(
        ::grpc::MessageAllocator< ::g2engine::ReevaluateEntityWithInfoRequest, ::g2engine::ReevaluateEntityWithInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateEntityWithInfoRequest, ::g2engine::ReevaluateEntityWithInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateEntityWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateRecordRequest, ::g2engine::ReevaluateRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReevaluateRecordRequest* request, ::g2engine::ReevaluateRecordResponse* response) { return this->ReevaluateRecord(context, request, response); }));}
    void SetMessageAllocatorFor_ReevaluateRecord(
        ::grpc::MessageAllocator< ::g2engine::ReevaluateRecordRequest, ::g2engine::ReevaluateRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateRecordRequest, ::g2engine::ReevaluateRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateRecordWithInfoRequest, ::g2engine::ReevaluateRecordWithInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReevaluateRecordWithInfoRequest* request, ::g2engine::ReevaluateRecordWithInfoResponse* response) { return this->ReevaluateRecordWithInfo(context, request, response); }));}
    void SetMessageAllocatorFor_ReevaluateRecordWithInfo(
        ::grpc::MessageAllocator< ::g2engine::ReevaluateRecordWithInfoRequest, ::g2engine::ReevaluateRecordWithInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReevaluateRecordWithInfoRequest, ::g2engine::ReevaluateRecordWithInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Reinit() {
      ::grpc::Service::MarkMethodCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReinitRequest, ::g2engine::ReinitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReinitRequest* request, ::g2engine::ReinitResponse* response) { return this->Reinit(context, request, response); }));}
    void SetMessageAllocatorFor_Reinit(
        ::grpc::MessageAllocator< ::g2engine::ReinitRequest, ::g2engine::ReinitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReinitRequest, ::g2engine::ReinitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Reinit(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReplaceRecordRequest, ::g2engine::ReplaceRecordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReplaceRecordRequest* request, ::g2engine::ReplaceRecordResponse* response) { return this->ReplaceRecord(context, request, response); }));}
    void SetMessageAllocatorFor_ReplaceRecord(
        ::grpc::MessageAllocator< ::g2engine::ReplaceRecordRequest, ::g2engine::ReplaceRecordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReplaceRecordRequest, ::g2engine::ReplaceRecordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::ReplaceRecordWithInfoRequest, ::g2engine::ReplaceRecordWithInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::ReplaceRecordWithInfoRequest* request, ::g2engine::ReplaceRecordWithInfoResponse* response) { return this->ReplaceRecordWithInfo(context, request, response); }));}
    void SetMessageAllocatorFor_ReplaceRecordWithInfo(
        ::grpc::MessageAllocator< ::g2engine::ReplaceRecordWithInfoRequest, ::g2engine::ReplaceRecordWithInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::ReplaceRecordWithInfoRequest, ::g2engine::ReplaceRecordWithInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::SearchByAttributesRequest, ::g2engine::SearchByAttributesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::SearchByAttributesRequest* request, ::g2engine::SearchByAttributesResponse* response) { return this->SearchByAttributes(context, request, response); }));}
    void SetMessageAllocatorFor_SearchByAttributes(
        ::grpc::MessageAllocator< ::g2engine::SearchByAttributesRequest, ::g2engine::SearchByAttributesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::SearchByAttributesRequest, ::g2engine::SearchByAttributesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchByAttributes(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::SearchByAttributes_V2Request, ::g2engine::SearchByAttributes_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::SearchByAttributes_V2Request* request, ::g2engine::SearchByAttributes_V2Response* response) { return this->SearchByAttributes_V2(context, request, response); }));}
    void SetMessageAllocatorFor_SearchByAttributes_V2(
        ::grpc::MessageAllocator< ::g2engine::SearchByAttributes_V2Request, ::g2engine::SearchByAttributes_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::SearchByAttributes_V2Request, ::g2engine::SearchByAttributes_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchByAttributes_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Stats() {
      ::grpc::Service::MarkMethodCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::StatsRequest, ::g2engine::StatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::StatsRequest* request, ::g2engine::StatsResponse* response) { return this->Stats(context, request, response); }));}
    void SetMessageAllocatorFor_Stats(
        ::grpc::MessageAllocator< ::g2engine::StatsRequest, ::g2engine::StatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::StatsRequest, ::g2engine::StatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Stats(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodCallback(56,
          new ::grpc::internal::CallbackServerStreamingHandler< ::g2engine::StreamExportCSVEntityReportRequest, ::g2engine::StreamExportCSVEntityReportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::StreamExportCSVEntityReportRequest* request) { return this->StreamExportCSVEntityReport(context, request); }));
    }
    ~WithCallbackMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::g2engine::StreamExportCSVEntityReportResponse>* StreamExportCSVEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodCallback(57,
          new ::grpc::internal::CallbackServerStreamingHandler< ::g2engine::StreamExportJSONEntityReportRequest, ::g2engine::StreamExportJSONEntityReportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::StreamExportJSONEntityReportRequest* request) { return this->StreamExportJSONEntityReport(context, request); }));
    }
    ~WithCallbackMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::g2engine::StreamExportJSONEntityReportResponse>* StreamExportJSONEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WhyEntities() {
      ::grpc::Service::MarkMethodCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyEntitiesRequest, ::g2engine::WhyEntitiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::WhyEntitiesRequest* request, ::g2engine::WhyEntitiesResponse* response) { return this->WhyEntities(context, request, response); }));}
    void SetMessageAllocatorFor_WhyEntities(
        ::grpc::MessageAllocator< ::g2engine::WhyEntitiesRequest, ::g2engine::WhyEntitiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(58);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyEntitiesRequest, ::g2engine::WhyEntitiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyEntities_V2Request, ::g2engine::WhyEntities_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::WhyEntities_V2Request* request, ::g2engine::WhyEntities_V2Response* response) { return this->WhyEntities_V2(context, request, response); }));}
    void SetMessageAllocatorFor_WhyEntities_V2(
        ::grpc::MessageAllocator< ::g2engine::WhyEntities_V2Request, ::g2engine::WhyEntities_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(59);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyEntities_V2Request, ::g2engine::WhyEntities_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyEntities_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WhyRecords() {
      ::grpc::Service::MarkMethodCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyRecordsRequest, ::g2engine::WhyRecordsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::WhyRecordsRequest* request, ::g2engine::WhyRecordsResponse* response) { return this->WhyRecords(context, request, response); }));}
    void SetMessageAllocatorFor_WhyRecords(
        ::grpc::MessageAllocator< ::g2engine::WhyRecordsRequest, ::g2engine::WhyRecordsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(60);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyRecordsRequest, ::g2engine::WhyRecordsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyRecords(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyRecords_V2Request, ::g2engine::WhyRecords_V2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2engine::WhyRecords_V2Request* request, ::g2engine::WhyRecords_V2Response* response) { return this->WhyRecords_V2(context, request, response); }));}
    void SetMessageAllocatorFor_WhyRecords_V2(
        ::grpc::MessageAllocator< ::g2engine::WhyRecords_V2Request, ::g2engine::WhyRecords_V2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(61);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2engine::WhyRecords_V2Request, ::g2engine::WhyRecords_V2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyRecords_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddRecord<WithCallbackMethod_AddRecordWithInfo<WithCallbackMethod_CloseExport<WithCallbackMethod_CountRedoRecords<WithCallbackMethod_DeleteRecord<WithCallbackMethod_DeleteRecordWithInfo<WithCallbackMethod_Destroy<WithCallbackMethod_ExportConfig<WithCallbackMethod_ExportConfigAndConfigID<WithCallbackMethod_ExportCSVEntityReport<WithCallbackMethod_ExportJSONEntityReport<WithCallbackMethod_FetchNext<WithCallbackMethod_FindInterestingEntitiesByEntityID<WithCallbackMethod_FindInterestingEntitiesByRecordID<WithCallbackMethod_FindNetworkByEntityID<WithCallbackMethod_FindNetworkByEntityID_V2<WithCallbackMethod_FindNetworkByRecordID<WithCallbackMethod_FindNetworkByRecordID_V2<WithCallbackMethod_FindPathByEntityID<WithCallbackMethod_FindPathByEntityID_V2<WithCallbackMethod_FindPathByRecordID<WithCallbackMethod_FindPathByRecordID_V2<WithCallbackMethod_FindPathExcludingByEntityID<WithCallbackMethod_FindPathExcludingByEntityID_V2<WithCallbackMethod_FindPathExcludingByRecordID<WithCallbackMethod_FindPathExcludingByRecordID_V2<WithCallbackMethod_FindPathIncludingSourceByEntityID<WithCallbackMethod_FindPathIncludingSourceByEntityID_V2<WithCallbackMethod_FindPathIncludingSourceByRecordID<WithCallbackMethod_FindPathIncludingSourceByRecordID_V2<WithCallbackMethod_GetActiveConfigID<WithCallbackMethod_GetEntityByEntityID<WithCallbackMethod_GetEntityByEntityID_V2<WithCallbackMethod_GetEntityByRecordID<WithCallbackMethod_GetEntityByRecordID_V2<WithCallbackMethod_GetRecord<WithCallbackMethod_GetRecord_V2<WithCallbackMethod_GetRedoRecord<WithCallbackMethod_GetRepositoryLastModifiedTime<WithCallbackMethod_GetVirtualEntityByRecordID<WithCallbackMethod_GetVirtualEntityByRecordID_V2<WithCallbackMethod_HowEntityByEntityID<WithCallbackMethod_HowEntityByEntityID_V2<WithCallbackMethod_Init<WithCallbackMethod_InitWithConfigID<WithCallbackMethod_PrimeEngine<WithCallbackMethod_ReevaluateEntity<WithCallbackMethod_ReevaluateEntityWithInfo<WithCallbackMethod_ReevaluateRecord<WithCallbackMethod_ReevaluateRecordWithInfo<WithCallbackMethod_Reinit<WithCallbackMethod_ReplaceRecord<WithCallbackMethod_ReplaceRecordWithInfo<WithCallbackMethod_SearchByAttributes<WithCallbackMethod_SearchByAttributes_V2<WithCallbackMethod_Stats<WithCallbackMethod_StreamExportCSVEntityReport<WithCallbackMethod_StreamExportJSONEntityReport<WithCallbackMethod_WhyEntities<WithCallbackMethod_WhyEntities_V2<WithCallbackMethod_WhyRecords<WithCallbackMethod_WhyRecords_V2<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddRecord() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CloseExport() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Destroy() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExportConfig() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FetchNext() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecord() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Init() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Reinit() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Stats() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WhyEntities() {
      ::grpc::Service::MarkMethodGeneric(58);
    }
    ~WithGenericMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodGeneric(59);
    }
    ~WithGenericMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WhyRecords() {
      ::grpc::Service::MarkMethodGeneric(60);
    }
    ~WithGenericMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodGeneric(61);
    }
    ~WithGenericMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddRecord() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRecordWithInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CloseExport() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCloseExport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCountRedoRecords(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRecordWithInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Destroy() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExportConfig() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportConfigAndConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportCSVEntityReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportJSONEntityReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FetchNext() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchNext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindInterestingEntitiesByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindInterestingEntitiesByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindNetworkByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathExcludingByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActiveConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecord() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRedoRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRepositoryLastModifiedTime(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtualEntityByRecordID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtualEntityByRecordID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHowEntityByEntityID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHowEntityByEntityID_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Init() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitWithConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPrimeEngine(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateEntityWithInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReevaluateRecordWithInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Reinit() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceRecordWithInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchByAttributes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchByAttributes_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Stats() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamExportCSVEntityReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(56, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamExportJSONEntityReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(57, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WhyEntities() {
      ::grpc::Service::MarkMethodRaw(58);
    }
    ~WithRawMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyEntities(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodRaw(59);
    }
    ~WithRawMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyEntities_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WhyRecords() {
      ::grpc::Service::MarkMethodRaw(60);
    }
    ~WithRawMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyRecords(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodRaw(61);
    }
    ~WithRawMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWhyRecords_V2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddRecord() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddRecordWithInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CloseExport() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CloseExport(context, request, response); }));
    }
    ~WithRawCallbackMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CloseExport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CountRedoRecords(context, request, response); }));
    }
    ~WithRawCallbackMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CountRedoRecords(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRecordWithInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExportConfig() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExportConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExportConfigAndConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportConfigAndConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExportCSVEntityReport(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportCSVEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExportJSONEntityReport(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportJSONEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FetchNext() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FetchNext(context, request, response); }));
    }
    ~WithRawCallbackMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchNext(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindInterestingEntitiesByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindInterestingEntitiesByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindInterestingEntitiesByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindInterestingEntitiesByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindNetworkByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindNetworkByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindNetworkByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindNetworkByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindNetworkByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathExcludingByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathExcludingByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathExcludingByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathExcludingByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathExcludingByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathIncludingSourceByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathIncludingSourceByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathIncludingSourceByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPathIncludingSourceByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPathIncludingSourceByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActiveConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActiveConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRecord() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecord_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecord_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRedoRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRedoRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRepositoryLastModifiedTime(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRepositoryLastModifiedTime(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetVirtualEntityByRecordID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtualEntityByRecordID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetVirtualEntityByRecordID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtualEntityByRecordID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->HowEntityByEntityID(context, request, response); }));
    }
    ~WithRawCallbackMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HowEntityByEntityID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->HowEntityByEntityID_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HowEntityByEntityID_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Init() {
      ::grpc::Service::MarkMethodRawCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Init(context, request, response); }));
    }
    ~WithRawCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodRawCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InitWithConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitWithConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodRawCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PrimeEngine(context, request, response); }));
    }
    ~WithRawCallbackMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PrimeEngine(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodRawCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReevaluateEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodRawCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReevaluateEntityWithInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateEntityWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodRawCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReevaluateRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodRawCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReevaluateRecordWithInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReevaluateRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Reinit() {
      ::grpc::Service::MarkMethodRawCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Reinit(context, request, response); }));
    }
    ~WithRawCallbackMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Reinit(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodRawCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReplaceRecord(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodRawCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReplaceRecordWithInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceRecordWithInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodRawCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchByAttributes(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchByAttributes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodRawCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchByAttributes_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchByAttributes_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Stats() {
      ::grpc::Service::MarkMethodRawCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Stats(context, request, response); }));
    }
    ~WithRawCallbackMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Stats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodRawCallback(56,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->StreamExportCSVEntityReport(context, request); }));
    }
    ~WithRawCallbackMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* StreamExportCSVEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodRawCallback(57,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->StreamExportJSONEntityReport(context, request); }));
    }
    ~WithRawCallbackMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* StreamExportJSONEntityReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WhyEntities() {
      ::grpc::Service::MarkMethodRawCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WhyEntities(context, request, response); }));
    }
    ~WithRawCallbackMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodRawCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WhyEntities_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyEntities_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WhyRecords() {
      ::grpc::Service::MarkMethodRawCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WhyRecords(context, request, response); }));
    }
    ~WithRawCallbackMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyRecords(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodRawCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WhyRecords_V2(context, request, response); }));
    }
    ~WithRawCallbackMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* WhyRecords_V2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddRecord() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::AddRecordRequest, ::g2engine::AddRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::AddRecordRequest, ::g2engine::AddRecordResponse>* streamer) {
                       return this->StreamedAddRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddRecord(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordRequest* /*request*/, ::g2engine::AddRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::AddRecordRequest,::g2engine::AddRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddRecordWithInfo() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::AddRecordWithInfoRequest, ::g2engine::AddRecordWithInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::AddRecordWithInfoRequest, ::g2engine::AddRecordWithInfoResponse>* streamer) {
                       return this->StreamedAddRecordWithInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::AddRecordWithInfoRequest* /*request*/, ::g2engine::AddRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddRecordWithInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::AddRecordWithInfoRequest,::g2engine::AddRecordWithInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CloseExport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CloseExport() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::CloseExportRequest, ::g2engine::CloseExportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::CloseExportRequest, ::g2engine::CloseExportResponse>* streamer) {
                       return this->StreamedCloseExport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CloseExport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CloseExport(::grpc::ServerContext* /*context*/, const ::g2engine::CloseExportRequest* /*request*/, ::g2engine::CloseExportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCloseExport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::CloseExportRequest,::g2engine::CloseExportResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CountRedoRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CountRedoRecords() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::CountRedoRecordsRequest, ::g2engine::CountRedoRecordsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::CountRedoRecordsRequest, ::g2engine::CountRedoRecordsResponse>* streamer) {
                       return this->StreamedCountRedoRecords(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CountRedoRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CountRedoRecords(::grpc::ServerContext* /*context*/, const ::g2engine::CountRedoRecordsRequest* /*request*/, ::g2engine::CountRedoRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCountRedoRecords(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::CountRedoRecordsRequest,::g2engine::CountRedoRecordsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRecord() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::DeleteRecordRequest, ::g2engine::DeleteRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::DeleteRecordRequest, ::g2engine::DeleteRecordResponse>* streamer) {
                       return this->StreamedDeleteRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRecord(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordRequest* /*request*/, ::g2engine::DeleteRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::DeleteRecordRequest,::g2engine::DeleteRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRecordWithInfo() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::DeleteRecordWithInfoRequest, ::g2engine::DeleteRecordWithInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::DeleteRecordWithInfoRequest, ::g2engine::DeleteRecordWithInfoResponse>* streamer) {
                       return this->StreamedDeleteRecordWithInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::DeleteRecordWithInfoRequest* /*request*/, ::g2engine::DeleteRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRecordWithInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::DeleteRecordWithInfoRequest,::g2engine::DeleteRecordWithInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Destroy() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::DestroyRequest, ::g2engine::DestroyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::DestroyRequest, ::g2engine::DestroyResponse>* streamer) {
                       return this->StreamedDestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2engine::DestroyRequest* /*request*/, ::g2engine::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::DestroyRequest,::g2engine::DestroyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExportConfig() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ExportConfigRequest, ::g2engine::ExportConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ExportConfigRequest, ::g2engine::ExportConfigResponse>* streamer) {
                       return this->StreamedExportConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExportConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportConfig(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigRequest* /*request*/, ::g2engine::ExportConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ExportConfigRequest,::g2engine::ExportConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportConfigAndConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExportConfigAndConfigID() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ExportConfigAndConfigIDRequest, ::g2engine::ExportConfigAndConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ExportConfigAndConfigIDRequest, ::g2engine::ExportConfigAndConfigIDResponse>* streamer) {
                       return this->StreamedExportConfigAndConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExportConfigAndConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportConfigAndConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::ExportConfigAndConfigIDRequest* /*request*/, ::g2engine::ExportConfigAndConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportConfigAndConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ExportConfigAndConfigIDRequest,::g2engine::ExportConfigAndConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExportCSVEntityReport() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ExportCSVEntityReportRequest, ::g2engine::ExportCSVEntityReportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ExportCSVEntityReportRequest, ::g2engine::ExportCSVEntityReportResponse>* streamer) {
                       return this->StreamedExportCSVEntityReport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportCSVEntityReportRequest* /*request*/, ::g2engine::ExportCSVEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportCSVEntityReport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ExportCSVEntityReportRequest,::g2engine::ExportCSVEntityReportResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExportJSONEntityReport() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ExportJSONEntityReportRequest, ::g2engine::ExportJSONEntityReportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ExportJSONEntityReportRequest, ::g2engine::ExportJSONEntityReportResponse>* streamer) {
                       return this->StreamedExportJSONEntityReport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::ExportJSONEntityReportRequest* /*request*/, ::g2engine::ExportJSONEntityReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportJSONEntityReport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ExportJSONEntityReportRequest,::g2engine::ExportJSONEntityReportResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FetchNext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FetchNext() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FetchNextRequest, ::g2engine::FetchNextResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FetchNextRequest, ::g2engine::FetchNextResponse>* streamer) {
                       return this->StreamedFetchNext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FetchNext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FetchNext(::grpc::ServerContext* /*context*/, const ::g2engine::FetchNextRequest* /*request*/, ::g2engine::FetchNextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFetchNext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FetchNextRequest,::g2engine::FetchNextResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindInterestingEntitiesByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindInterestingEntitiesByEntityID() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindInterestingEntitiesByEntityIDRequest, ::g2engine::FindInterestingEntitiesByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindInterestingEntitiesByEntityIDRequest, ::g2engine::FindInterestingEntitiesByEntityIDResponse>* streamer) {
                       return this->StreamedFindInterestingEntitiesByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindInterestingEntitiesByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindInterestingEntitiesByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByEntityIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindInterestingEntitiesByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindInterestingEntitiesByEntityIDRequest,::g2engine::FindInterestingEntitiesByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindInterestingEntitiesByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindInterestingEntitiesByRecordID() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindInterestingEntitiesByRecordIDRequest, ::g2engine::FindInterestingEntitiesByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindInterestingEntitiesByRecordIDRequest, ::g2engine::FindInterestingEntitiesByRecordIDResponse>* streamer) {
                       return this->StreamedFindInterestingEntitiesByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindInterestingEntitiesByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindInterestingEntitiesByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindInterestingEntitiesByRecordIDRequest* /*request*/, ::g2engine::FindInterestingEntitiesByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindInterestingEntitiesByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindInterestingEntitiesByRecordIDRequest,::g2engine::FindInterestingEntitiesByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindNetworkByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindNetworkByEntityID() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindNetworkByEntityIDRequest, ::g2engine::FindNetworkByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindNetworkByEntityIDRequest, ::g2engine::FindNetworkByEntityIDResponse>* streamer) {
                       return this->StreamedFindNetworkByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindNetworkByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindNetworkByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityIDRequest* /*request*/, ::g2engine::FindNetworkByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindNetworkByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindNetworkByEntityIDRequest,::g2engine::FindNetworkByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindNetworkByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindNetworkByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindNetworkByEntityID_V2Request, ::g2engine::FindNetworkByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindNetworkByEntityID_V2Request, ::g2engine::FindNetworkByEntityID_V2Response>* streamer) {
                       return this->StreamedFindNetworkByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindNetworkByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindNetworkByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByEntityID_V2Request* /*request*/, ::g2engine::FindNetworkByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindNetworkByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindNetworkByEntityID_V2Request,::g2engine::FindNetworkByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindNetworkByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindNetworkByRecordID() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindNetworkByRecordIDRequest, ::g2engine::FindNetworkByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindNetworkByRecordIDRequest, ::g2engine::FindNetworkByRecordIDResponse>* streamer) {
                       return this->StreamedFindNetworkByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindNetworkByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindNetworkByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordIDRequest* /*request*/, ::g2engine::FindNetworkByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindNetworkByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindNetworkByRecordIDRequest,::g2engine::FindNetworkByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindNetworkByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindNetworkByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindNetworkByRecordID_V2Request, ::g2engine::FindNetworkByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindNetworkByRecordID_V2Request, ::g2engine::FindNetworkByRecordID_V2Response>* streamer) {
                       return this->StreamedFindNetworkByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindNetworkByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindNetworkByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindNetworkByRecordID_V2Request* /*request*/, ::g2engine::FindNetworkByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindNetworkByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindNetworkByRecordID_V2Request,::g2engine::FindNetworkByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathByEntityID() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathByEntityIDRequest, ::g2engine::FindPathByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathByEntityIDRequest, ::g2engine::FindPathByEntityIDResponse>* streamer) {
                       return this->StreamedFindPathByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityIDRequest* /*request*/, ::g2engine::FindPathByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathByEntityIDRequest,::g2engine::FindPathByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathByEntityID_V2Request, ::g2engine::FindPathByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathByEntityID_V2Request, ::g2engine::FindPathByEntityID_V2Response>* streamer) {
                       return this->StreamedFindPathByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByEntityID_V2Request* /*request*/, ::g2engine::FindPathByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathByEntityID_V2Request,::g2engine::FindPathByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathByRecordID() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathByRecordIDRequest, ::g2engine::FindPathByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathByRecordIDRequest, ::g2engine::FindPathByRecordIDResponse>* streamer) {
                       return this->StreamedFindPathByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordIDRequest* /*request*/, ::g2engine::FindPathByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathByRecordIDRequest,::g2engine::FindPathByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathByRecordID_V2Request, ::g2engine::FindPathByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathByRecordID_V2Request, ::g2engine::FindPathByRecordID_V2Response>* streamer) {
                       return this->StreamedFindPathByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathByRecordID_V2Request* /*request*/, ::g2engine::FindPathByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathByRecordID_V2Request,::g2engine::FindPathByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathExcludingByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathExcludingByEntityID() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathExcludingByEntityIDRequest, ::g2engine::FindPathExcludingByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathExcludingByEntityIDRequest, ::g2engine::FindPathExcludingByEntityIDResponse>* streamer) {
                       return this->StreamedFindPathExcludingByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathExcludingByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathExcludingByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityIDRequest* /*request*/, ::g2engine::FindPathExcludingByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathExcludingByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathExcludingByEntityIDRequest,::g2engine::FindPathExcludingByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathExcludingByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathExcludingByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathExcludingByEntityID_V2Request, ::g2engine::FindPathExcludingByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathExcludingByEntityID_V2Request, ::g2engine::FindPathExcludingByEntityID_V2Response>* streamer) {
                       return this->StreamedFindPathExcludingByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathExcludingByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathExcludingByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByEntityID_V2Request* /*request*/, ::g2engine::FindPathExcludingByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathExcludingByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathExcludingByEntityID_V2Request,::g2engine::FindPathExcludingByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathExcludingByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathExcludingByRecordID() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathExcludingByRecordIDRequest, ::g2engine::FindPathExcludingByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathExcludingByRecordIDRequest, ::g2engine::FindPathExcludingByRecordIDResponse>* streamer) {
                       return this->StreamedFindPathExcludingByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathExcludingByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathExcludingByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordIDRequest* /*request*/, ::g2engine::FindPathExcludingByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathExcludingByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathExcludingByRecordIDRequest,::g2engine::FindPathExcludingByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathExcludingByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathExcludingByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathExcludingByRecordID_V2Request, ::g2engine::FindPathExcludingByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathExcludingByRecordID_V2Request, ::g2engine::FindPathExcludingByRecordID_V2Response>* streamer) {
                       return this->StreamedFindPathExcludingByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathExcludingByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathExcludingByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathExcludingByRecordID_V2Request* /*request*/, ::g2engine::FindPathExcludingByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathExcludingByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathExcludingByRecordID_V2Request,::g2engine::FindPathExcludingByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathIncludingSourceByEntityIDRequest, ::g2engine::FindPathIncludingSourceByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathIncludingSourceByEntityIDRequest, ::g2engine::FindPathIncludingSourceByEntityIDResponse>* streamer) {
                       return this->StreamedFindPathIncludingSourceByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathIncludingSourceByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathIncludingSourceByEntityIDRequest,::g2engine::FindPathIncludingSourceByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathIncludingSourceByEntityID_V2Request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathIncludingSourceByEntityID_V2Request, ::g2engine::FindPathIncludingSourceByEntityID_V2Response>* streamer) {
                       return this->StreamedFindPathIncludingSourceByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByEntityID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathIncludingSourceByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathIncludingSourceByEntityID_V2Request,::g2engine::FindPathIncludingSourceByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathIncludingSourceByRecordIDRequest, ::g2engine::FindPathIncludingSourceByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathIncludingSourceByRecordIDRequest, ::g2engine::FindPathIncludingSourceByRecordIDResponse>* streamer) {
                       return this->StreamedFindPathIncludingSourceByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordIDRequest* /*request*/, ::g2engine::FindPathIncludingSourceByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathIncludingSourceByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathIncludingSourceByRecordIDRequest,::g2engine::FindPathIncludingSourceByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::FindPathIncludingSourceByRecordID_V2Request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::FindPathIncludingSourceByRecordID_V2Request, ::g2engine::FindPathIncludingSourceByRecordID_V2Response>* streamer) {
                       return this->StreamedFindPathIncludingSourceByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::FindPathIncludingSourceByRecordID_V2Request* /*request*/, ::g2engine::FindPathIncludingSourceByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPathIncludingSourceByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::FindPathIncludingSourceByRecordID_V2Request,::g2engine::FindPathIncludingSourceByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActiveConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActiveConfigID() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetActiveConfigIDRequest, ::g2engine::GetActiveConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetActiveConfigIDRequest, ::g2engine::GetActiveConfigIDResponse>* streamer) {
                       return this->StreamedGetActiveConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActiveConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActiveConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::GetActiveConfigIDRequest* /*request*/, ::g2engine::GetActiveConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActiveConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetActiveConfigIDRequest,::g2engine::GetActiveConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityByEntityID() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetEntityByEntityIDRequest, ::g2engine::GetEntityByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetEntityByEntityIDRequest, ::g2engine::GetEntityByEntityIDResponse>* streamer) {
                       return this->StreamedGetEntityByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityIDRequest* /*request*/, ::g2engine::GetEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetEntityByEntityIDRequest,::g2engine::GetEntityByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetEntityByEntityID_V2Request, ::g2engine::GetEntityByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetEntityByEntityID_V2Request, ::g2engine::GetEntityByEntityID_V2Response>* streamer) {
                       return this->StreamedGetEntityByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByEntityID_V2Request* /*request*/, ::g2engine::GetEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetEntityByEntityID_V2Request,::g2engine::GetEntityByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityByRecordID() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetEntityByRecordIDRequest, ::g2engine::GetEntityByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetEntityByRecordIDRequest, ::g2engine::GetEntityByRecordIDResponse>* streamer) {
                       return this->StreamedGetEntityByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordIDRequest* /*request*/, ::g2engine::GetEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetEntityByRecordIDRequest,::g2engine::GetEntityByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetEntityByRecordID_V2Request, ::g2engine::GetEntityByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetEntityByRecordID_V2Request, ::g2engine::GetEntityByRecordID_V2Response>* streamer) {
                       return this->StreamedGetEntityByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetEntityByRecordID_V2Request* /*request*/, ::g2engine::GetEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetEntityByRecordID_V2Request,::g2engine::GetEntityByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecord() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetRecordRequest, ::g2engine::GetRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetRecordRequest, ::g2engine::GetRecordResponse>* streamer) {
                       return this->StreamedGetRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecordRequest* /*request*/, ::g2engine::GetRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetRecordRequest,::g2engine::GetRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecord_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecord_V2() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetRecord_V2Request, ::g2engine::GetRecord_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetRecord_V2Request, ::g2engine::GetRecord_V2Response>* streamer) {
                       return this->StreamedGetRecord_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecord_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecord_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetRecord_V2Request* /*request*/, ::g2engine::GetRecord_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecord_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetRecord_V2Request,::g2engine::GetRecord_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRedoRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRedoRecord() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetRedoRecordRequest, ::g2engine::GetRedoRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetRedoRecordRequest, ::g2engine::GetRedoRecordResponse>* streamer) {
                       return this->StreamedGetRedoRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRedoRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRedoRecord(::grpc::ServerContext* /*context*/, const ::g2engine::GetRedoRecordRequest* /*request*/, ::g2engine::GetRedoRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRedoRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetRedoRecordRequest,::g2engine::GetRedoRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRepositoryLastModifiedTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRepositoryLastModifiedTime() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetRepositoryLastModifiedTimeRequest, ::g2engine::GetRepositoryLastModifiedTimeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetRepositoryLastModifiedTimeRequest, ::g2engine::GetRepositoryLastModifiedTimeResponse>* streamer) {
                       return this->StreamedGetRepositoryLastModifiedTime(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRepositoryLastModifiedTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRepositoryLastModifiedTime(::grpc::ServerContext* /*context*/, const ::g2engine::GetRepositoryLastModifiedTimeRequest* /*request*/, ::g2engine::GetRepositoryLastModifiedTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRepositoryLastModifiedTime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetRepositoryLastModifiedTimeRequest,::g2engine::GetRepositoryLastModifiedTimeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVirtualEntityByRecordID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetVirtualEntityByRecordID() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetVirtualEntityByRecordIDRequest, ::g2engine::GetVirtualEntityByRecordIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetVirtualEntityByRecordIDRequest, ::g2engine::GetVirtualEntityByRecordIDResponse>* streamer) {
                       return this->StreamedGetVirtualEntityByRecordID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetVirtualEntityByRecordID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVirtualEntityByRecordID(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordIDRequest* /*request*/, ::g2engine::GetVirtualEntityByRecordIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVirtualEntityByRecordID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetVirtualEntityByRecordIDRequest,::g2engine::GetVirtualEntityByRecordIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVirtualEntityByRecordID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetVirtualEntityByRecordID_V2() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::GetVirtualEntityByRecordID_V2Request, ::g2engine::GetVirtualEntityByRecordID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::GetVirtualEntityByRecordID_V2Request, ::g2engine::GetVirtualEntityByRecordID_V2Response>* streamer) {
                       return this->StreamedGetVirtualEntityByRecordID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetVirtualEntityByRecordID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVirtualEntityByRecordID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::GetVirtualEntityByRecordID_V2Request* /*request*/, ::g2engine::GetVirtualEntityByRecordID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVirtualEntityByRecordID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::GetVirtualEntityByRecordID_V2Request,::g2engine::GetVirtualEntityByRecordID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_HowEntityByEntityID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_HowEntityByEntityID() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::HowEntityByEntityIDRequest, ::g2engine::HowEntityByEntityIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::HowEntityByEntityIDRequest, ::g2engine::HowEntityByEntityIDResponse>* streamer) {
                       return this->StreamedHowEntityByEntityID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_HowEntityByEntityID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status HowEntityByEntityID(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityIDRequest* /*request*/, ::g2engine::HowEntityByEntityIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHowEntityByEntityID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::HowEntityByEntityIDRequest,::g2engine::HowEntityByEntityIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_HowEntityByEntityID_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_HowEntityByEntityID_V2() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::HowEntityByEntityID_V2Request, ::g2engine::HowEntityByEntityID_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::HowEntityByEntityID_V2Request, ::g2engine::HowEntityByEntityID_V2Response>* streamer) {
                       return this->StreamedHowEntityByEntityID_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_HowEntityByEntityID_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status HowEntityByEntityID_V2(::grpc::ServerContext* /*context*/, const ::g2engine::HowEntityByEntityID_V2Request* /*request*/, ::g2engine::HowEntityByEntityID_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHowEntityByEntityID_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::HowEntityByEntityID_V2Request,::g2engine::HowEntityByEntityID_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Init() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::InitRequest, ::g2engine::InitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::InitRequest, ::g2engine::InitResponse>* streamer) {
                       return this->StreamedInit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2engine::InitRequest* /*request*/, ::g2engine::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::InitRequest,::g2engine::InitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::InitWithConfigIDRequest, ::g2engine::InitWithConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::InitWithConfigIDRequest, ::g2engine::InitWithConfigIDResponse>* streamer) {
                       return this->StreamedInitWithConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2engine::InitWithConfigIDRequest* /*request*/, ::g2engine::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInitWithConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::InitWithConfigIDRequest,::g2engine::InitWithConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PrimeEngine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PrimeEngine() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::PrimeEngineRequest, ::g2engine::PrimeEngineResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::PrimeEngineRequest, ::g2engine::PrimeEngineResponse>* streamer) {
                       return this->StreamedPrimeEngine(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PrimeEngine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PrimeEngine(::grpc::ServerContext* /*context*/, const ::g2engine::PrimeEngineRequest* /*request*/, ::g2engine::PrimeEngineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPrimeEngine(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::PrimeEngineRequest,::g2engine::PrimeEngineResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReevaluateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReevaluateEntity() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReevaluateEntityRequest, ::g2engine::ReevaluateEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReevaluateEntityRequest, ::g2engine::ReevaluateEntityResponse>* streamer) {
                       return this->StreamedReevaluateEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReevaluateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReevaluateEntity(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityRequest* /*request*/, ::g2engine::ReevaluateEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReevaluateEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReevaluateEntityRequest,::g2engine::ReevaluateEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReevaluateEntityWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReevaluateEntityWithInfo() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReevaluateEntityWithInfoRequest, ::g2engine::ReevaluateEntityWithInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReevaluateEntityWithInfoRequest, ::g2engine::ReevaluateEntityWithInfoResponse>* streamer) {
                       return this->StreamedReevaluateEntityWithInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReevaluateEntityWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReevaluateEntityWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateEntityWithInfoRequest* /*request*/, ::g2engine::ReevaluateEntityWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReevaluateEntityWithInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReevaluateEntityWithInfoRequest,::g2engine::ReevaluateEntityWithInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReevaluateRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReevaluateRecord() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReevaluateRecordRequest, ::g2engine::ReevaluateRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReevaluateRecordRequest, ::g2engine::ReevaluateRecordResponse>* streamer) {
                       return this->StreamedReevaluateRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReevaluateRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReevaluateRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordRequest* /*request*/, ::g2engine::ReevaluateRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReevaluateRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReevaluateRecordRequest,::g2engine::ReevaluateRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReevaluateRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReevaluateRecordWithInfo() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReevaluateRecordWithInfoRequest, ::g2engine::ReevaluateRecordWithInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReevaluateRecordWithInfoRequest, ::g2engine::ReevaluateRecordWithInfoResponse>* streamer) {
                       return this->StreamedReevaluateRecordWithInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReevaluateRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReevaluateRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReevaluateRecordWithInfoRequest* /*request*/, ::g2engine::ReevaluateRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReevaluateRecordWithInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReevaluateRecordWithInfoRequest,::g2engine::ReevaluateRecordWithInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Reinit() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReinitRequest, ::g2engine::ReinitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReinitRequest, ::g2engine::ReinitResponse>* streamer) {
                       return this->StreamedReinit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2engine::ReinitRequest* /*request*/, ::g2engine::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReinit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReinitRequest,::g2engine::ReinitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReplaceRecord() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReplaceRecordRequest, ::g2engine::ReplaceRecordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReplaceRecordRequest, ::g2engine::ReplaceRecordResponse>* streamer) {
                       return this->StreamedReplaceRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReplaceRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceRecord(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordRequest* /*request*/, ::g2engine::ReplaceRecordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReplaceRecordRequest,::g2engine::ReplaceRecordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceRecordWithInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReplaceRecordWithInfo() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::ReplaceRecordWithInfoRequest, ::g2engine::ReplaceRecordWithInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::ReplaceRecordWithInfoRequest, ::g2engine::ReplaceRecordWithInfoResponse>* streamer) {
                       return this->StreamedReplaceRecordWithInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReplaceRecordWithInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceRecordWithInfo(::grpc::ServerContext* /*context*/, const ::g2engine::ReplaceRecordWithInfoRequest* /*request*/, ::g2engine::ReplaceRecordWithInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceRecordWithInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::ReplaceRecordWithInfoRequest,::g2engine::ReplaceRecordWithInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchByAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchByAttributes() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::SearchByAttributesRequest, ::g2engine::SearchByAttributesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::SearchByAttributesRequest, ::g2engine::SearchByAttributesResponse>* streamer) {
                       return this->StreamedSearchByAttributes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchByAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchByAttributes(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributesRequest* /*request*/, ::g2engine::SearchByAttributesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchByAttributes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::SearchByAttributesRequest,::g2engine::SearchByAttributesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchByAttributes_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchByAttributes_V2() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::SearchByAttributes_V2Request, ::g2engine::SearchByAttributes_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::SearchByAttributes_V2Request, ::g2engine::SearchByAttributes_V2Response>* streamer) {
                       return this->StreamedSearchByAttributes_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchByAttributes_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchByAttributes_V2(::grpc::ServerContext* /*context*/, const ::g2engine::SearchByAttributes_V2Request* /*request*/, ::g2engine::SearchByAttributes_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchByAttributes_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::SearchByAttributes_V2Request,::g2engine::SearchByAttributes_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Stats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Stats() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::StatsRequest, ::g2engine::StatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::StatsRequest, ::g2engine::StatsResponse>* streamer) {
                       return this->StreamedStats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Stats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Stats(::grpc::ServerContext* /*context*/, const ::g2engine::StatsRequest* /*request*/, ::g2engine::StatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::StatsRequest,::g2engine::StatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WhyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WhyEntities() {
      ::grpc::Service::MarkMethodStreamed(58,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::WhyEntitiesRequest, ::g2engine::WhyEntitiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::WhyEntitiesRequest, ::g2engine::WhyEntitiesResponse>* streamer) {
                       return this->StreamedWhyEntities(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WhyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WhyEntities(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntitiesRequest* /*request*/, ::g2engine::WhyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWhyEntities(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::WhyEntitiesRequest,::g2engine::WhyEntitiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WhyEntities_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WhyEntities_V2() {
      ::grpc::Service::MarkMethodStreamed(59,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::WhyEntities_V2Request, ::g2engine::WhyEntities_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::WhyEntities_V2Request, ::g2engine::WhyEntities_V2Response>* streamer) {
                       return this->StreamedWhyEntities_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WhyEntities_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WhyEntities_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyEntities_V2Request* /*request*/, ::g2engine::WhyEntities_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWhyEntities_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::WhyEntities_V2Request,::g2engine::WhyEntities_V2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WhyRecords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WhyRecords() {
      ::grpc::Service::MarkMethodStreamed(60,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::WhyRecordsRequest, ::g2engine::WhyRecordsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::WhyRecordsRequest, ::g2engine::WhyRecordsResponse>* streamer) {
                       return this->StreamedWhyRecords(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WhyRecords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WhyRecords(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecordsRequest* /*request*/, ::g2engine::WhyRecordsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWhyRecords(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::WhyRecordsRequest,::g2engine::WhyRecordsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WhyRecords_V2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WhyRecords_V2() {
      ::grpc::Service::MarkMethodStreamed(61,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2engine::WhyRecords_V2Request, ::g2engine::WhyRecords_V2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2engine::WhyRecords_V2Request, ::g2engine::WhyRecords_V2Response>* streamer) {
                       return this->StreamedWhyRecords_V2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WhyRecords_V2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WhyRecords_V2(::grpc::ServerContext* /*context*/, const ::g2engine::WhyRecords_V2Request* /*request*/, ::g2engine::WhyRecords_V2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWhyRecords_V2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2engine::WhyRecords_V2Request,::g2engine::WhyRecords_V2Response>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddRecord<WithStreamedUnaryMethod_AddRecordWithInfo<WithStreamedUnaryMethod_CloseExport<WithStreamedUnaryMethod_CountRedoRecords<WithStreamedUnaryMethod_DeleteRecord<WithStreamedUnaryMethod_DeleteRecordWithInfo<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_ExportConfig<WithStreamedUnaryMethod_ExportConfigAndConfigID<WithStreamedUnaryMethod_ExportCSVEntityReport<WithStreamedUnaryMethod_ExportJSONEntityReport<WithStreamedUnaryMethod_FetchNext<WithStreamedUnaryMethod_FindInterestingEntitiesByEntityID<WithStreamedUnaryMethod_FindInterestingEntitiesByRecordID<WithStreamedUnaryMethod_FindNetworkByEntityID<WithStreamedUnaryMethod_FindNetworkByEntityID_V2<WithStreamedUnaryMethod_FindNetworkByRecordID<WithStreamedUnaryMethod_FindNetworkByRecordID_V2<WithStreamedUnaryMethod_FindPathByEntityID<WithStreamedUnaryMethod_FindPathByEntityID_V2<WithStreamedUnaryMethod_FindPathByRecordID<WithStreamedUnaryMethod_FindPathByRecordID_V2<WithStreamedUnaryMethod_FindPathExcludingByEntityID<WithStreamedUnaryMethod_FindPathExcludingByEntityID_V2<WithStreamedUnaryMethod_FindPathExcludingByRecordID<WithStreamedUnaryMethod_FindPathExcludingByRecordID_V2<WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID<WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID_V2<WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID<WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID_V2<WithStreamedUnaryMethod_GetActiveConfigID<WithStreamedUnaryMethod_GetEntityByEntityID<WithStreamedUnaryMethod_GetEntityByEntityID_V2<WithStreamedUnaryMethod_GetEntityByRecordID<WithStreamedUnaryMethod_GetEntityByRecordID_V2<WithStreamedUnaryMethod_GetRecord<WithStreamedUnaryMethod_GetRecord_V2<WithStreamedUnaryMethod_GetRedoRecord<WithStreamedUnaryMethod_GetRepositoryLastModifiedTime<WithStreamedUnaryMethod_GetVirtualEntityByRecordID<WithStreamedUnaryMethod_GetVirtualEntityByRecordID_V2<WithStreamedUnaryMethod_HowEntityByEntityID<WithStreamedUnaryMethod_HowEntityByEntityID_V2<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitWithConfigID<WithStreamedUnaryMethod_PrimeEngine<WithStreamedUnaryMethod_ReevaluateEntity<WithStreamedUnaryMethod_ReevaluateEntityWithInfo<WithStreamedUnaryMethod_ReevaluateRecord<WithStreamedUnaryMethod_ReevaluateRecordWithInfo<WithStreamedUnaryMethod_Reinit<WithStreamedUnaryMethod_ReplaceRecord<WithStreamedUnaryMethod_ReplaceRecordWithInfo<WithStreamedUnaryMethod_SearchByAttributes<WithStreamedUnaryMethod_SearchByAttributes_V2<WithStreamedUnaryMethod_Stats<WithStreamedUnaryMethod_WhyEntities<WithStreamedUnaryMethod_WhyEntities_V2<WithStreamedUnaryMethod_WhyRecords<WithStreamedUnaryMethod_WhyRecords_V2<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamExportCSVEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_StreamExportCSVEntityReport() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::g2engine::StreamExportCSVEntityReportRequest, ::g2engine::StreamExportCSVEntityReportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::g2engine::StreamExportCSVEntityReportRequest, ::g2engine::StreamExportCSVEntityReportResponse>* streamer) {
                       return this->StreamedStreamExportCSVEntityReport(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_StreamExportCSVEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamExportCSVEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportCSVEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportCSVEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamExportCSVEntityReport(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::g2engine::StreamExportCSVEntityReportRequest,::g2engine::StreamExportCSVEntityReportResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamExportJSONEntityReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_StreamExportJSONEntityReport() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::g2engine::StreamExportJSONEntityReportRequest, ::g2engine::StreamExportJSONEntityReportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::g2engine::StreamExportJSONEntityReportRequest, ::g2engine::StreamExportJSONEntityReportResponse>* streamer) {
                       return this->StreamedStreamExportJSONEntityReport(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_StreamExportJSONEntityReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamExportJSONEntityReport(::grpc::ServerContext* /*context*/, const ::g2engine::StreamExportJSONEntityReportRequest* /*request*/, ::grpc::ServerWriter< ::g2engine::StreamExportJSONEntityReportResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamExportJSONEntityReport(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::g2engine::StreamExportJSONEntityReportRequest,::g2engine::StreamExportJSONEntityReportResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_StreamExportCSVEntityReport<WithSplitStreamingMethod_StreamExportJSONEntityReport<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddRecord<WithStreamedUnaryMethod_AddRecordWithInfo<WithStreamedUnaryMethod_CloseExport<WithStreamedUnaryMethod_CountRedoRecords<WithStreamedUnaryMethod_DeleteRecord<WithStreamedUnaryMethod_DeleteRecordWithInfo<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_ExportConfig<WithStreamedUnaryMethod_ExportConfigAndConfigID<WithStreamedUnaryMethod_ExportCSVEntityReport<WithStreamedUnaryMethod_ExportJSONEntityReport<WithStreamedUnaryMethod_FetchNext<WithStreamedUnaryMethod_FindInterestingEntitiesByEntityID<WithStreamedUnaryMethod_FindInterestingEntitiesByRecordID<WithStreamedUnaryMethod_FindNetworkByEntityID<WithStreamedUnaryMethod_FindNetworkByEntityID_V2<WithStreamedUnaryMethod_FindNetworkByRecordID<WithStreamedUnaryMethod_FindNetworkByRecordID_V2<WithStreamedUnaryMethod_FindPathByEntityID<WithStreamedUnaryMethod_FindPathByEntityID_V2<WithStreamedUnaryMethod_FindPathByRecordID<WithStreamedUnaryMethod_FindPathByRecordID_V2<WithStreamedUnaryMethod_FindPathExcludingByEntityID<WithStreamedUnaryMethod_FindPathExcludingByEntityID_V2<WithStreamedUnaryMethod_FindPathExcludingByRecordID<WithStreamedUnaryMethod_FindPathExcludingByRecordID_V2<WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID<WithStreamedUnaryMethod_FindPathIncludingSourceByEntityID_V2<WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID<WithStreamedUnaryMethod_FindPathIncludingSourceByRecordID_V2<WithStreamedUnaryMethod_GetActiveConfigID<WithStreamedUnaryMethod_GetEntityByEntityID<WithStreamedUnaryMethod_GetEntityByEntityID_V2<WithStreamedUnaryMethod_GetEntityByRecordID<WithStreamedUnaryMethod_GetEntityByRecordID_V2<WithStreamedUnaryMethod_GetRecord<WithStreamedUnaryMethod_GetRecord_V2<WithStreamedUnaryMethod_GetRedoRecord<WithStreamedUnaryMethod_GetRepositoryLastModifiedTime<WithStreamedUnaryMethod_GetVirtualEntityByRecordID<WithStreamedUnaryMethod_GetVirtualEntityByRecordID_V2<WithStreamedUnaryMethod_HowEntityByEntityID<WithStreamedUnaryMethod_HowEntityByEntityID_V2<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitWithConfigID<WithStreamedUnaryMethod_PrimeEngine<WithStreamedUnaryMethod_ReevaluateEntity<WithStreamedUnaryMethod_ReevaluateEntityWithInfo<WithStreamedUnaryMethod_ReevaluateRecord<WithStreamedUnaryMethod_ReevaluateRecordWithInfo<WithStreamedUnaryMethod_Reinit<WithStreamedUnaryMethod_ReplaceRecord<WithStreamedUnaryMethod_ReplaceRecordWithInfo<WithStreamedUnaryMethod_SearchByAttributes<WithStreamedUnaryMethod_SearchByAttributes_V2<WithStreamedUnaryMethod_Stats<WithSplitStreamingMethod_StreamExportCSVEntityReport<WithSplitStreamingMethod_StreamExportJSONEntityReport<WithStreamedUnaryMethod_WhyEntities<WithStreamedUnaryMethod_WhyEntities_V2<WithStreamedUnaryMethod_WhyRecords<WithStreamedUnaryMethod_WhyRecords_V2<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace g2engine


#endif  // GRPC_g2engine_2eproto__INCLUDED
