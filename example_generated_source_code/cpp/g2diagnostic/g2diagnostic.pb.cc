// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: g2diagnostic.proto

#include "g2diagnostic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace g2diagnostic {
PROTOBUF_CONSTEXPR CheckDBPerfRequest::CheckDBPerfRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.secondstorun_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDBPerfRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDBPerfRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDBPerfRequestDefaultTypeInternal() {}
  union {
    CheckDBPerfRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDBPerfRequestDefaultTypeInternal _CheckDBPerfRequest_default_instance_;
PROTOBUF_CONSTEXPR CheckDBPerfResponse::CheckDBPerfResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDBPerfResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDBPerfResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDBPerfResponseDefaultTypeInternal() {}
  union {
    CheckDBPerfResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDBPerfResponseDefaultTypeInternal _CheckDBPerfResponse_default_instance_;
PROTOBUF_CONSTEXPR DestroyRequest::DestroyRequest(
    ::_pbi::ConstantInitialized) {}
struct DestroyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DestroyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DestroyRequestDefaultTypeInternal() {}
  union {
    DestroyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DestroyRequestDefaultTypeInternal _DestroyRequest_default_instance_;
PROTOBUF_CONSTEXPR DestroyResponse::DestroyResponse(
    ::_pbi::ConstantInitialized) {}
struct DestroyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DestroyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DestroyResponseDefaultTypeInternal() {}
  union {
    DestroyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DestroyResponseDefaultTypeInternal _DestroyResponse_default_instance_;
PROTOBUF_CONSTEXPR InitRequest::InitRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modulename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.iniparams_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.verboselogging_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitRequestDefaultTypeInternal() {}
  union {
    InitRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitRequestDefaultTypeInternal _InitRequest_default_instance_;
PROTOBUF_CONSTEXPR InitResponse::InitResponse(
    ::_pbi::ConstantInitialized) {}
struct InitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitResponseDefaultTypeInternal() {}
  union {
    InitResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitResponseDefaultTypeInternal _InitResponse_default_instance_;
PROTOBUF_CONSTEXPR InitWithConfigIDRequest::InitWithConfigIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modulename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.iniparams_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.initconfigid_)*/int64_t{0}
  , /*decltype(_impl_.verboselogging_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InitWithConfigIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitWithConfigIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitWithConfigIDRequestDefaultTypeInternal() {}
  union {
    InitWithConfigIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitWithConfigIDRequestDefaultTypeInternal _InitWithConfigIDRequest_default_instance_;
PROTOBUF_CONSTEXPR InitWithConfigIDResponse::InitWithConfigIDResponse(
    ::_pbi::ConstantInitialized) {}
struct InitWithConfigIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitWithConfigIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitWithConfigIDResponseDefaultTypeInternal() {}
  union {
    InitWithConfigIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitWithConfigIDResponseDefaultTypeInternal _InitWithConfigIDResponse_default_instance_;
PROTOBUF_CONSTEXPR ReinitRequest::ReinitRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.initconfigid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReinitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitRequestDefaultTypeInternal() {}
  union {
    ReinitRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitRequestDefaultTypeInternal _ReinitRequest_default_instance_;
PROTOBUF_CONSTEXPR ReinitResponse::ReinitResponse(
    ::_pbi::ConstantInitialized) {}
struct ReinitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitResponseDefaultTypeInternal() {}
  union {
    ReinitResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitResponseDefaultTypeInternal _ReinitResponse_default_instance_;
}  // namespace g2diagnostic
static ::_pb::Metadata file_level_metadata_g2diagnostic_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_g2diagnostic_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_g2diagnostic_2eproto = nullptr;

const uint32_t TableStruct_g2diagnostic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::CheckDBPerfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::CheckDBPerfRequest, _impl_.secondstorun_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::CheckDBPerfResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::CheckDBPerfResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::DestroyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::DestroyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitRequest, _impl_.modulename_),
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitRequest, _impl_.iniparams_),
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitRequest, _impl_.verboselogging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDRequest, _impl_.modulename_),
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDRequest, _impl_.iniparams_),
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDRequest, _impl_.initconfigid_),
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDRequest, _impl_.verboselogging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::InitWithConfigIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::ReinitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::ReinitRequest, _impl_.initconfigid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::g2diagnostic::ReinitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::g2diagnostic::CheckDBPerfRequest)},
  { 7, -1, -1, sizeof(::g2diagnostic::CheckDBPerfResponse)},
  { 14, -1, -1, sizeof(::g2diagnostic::DestroyRequest)},
  { 20, -1, -1, sizeof(::g2diagnostic::DestroyResponse)},
  { 26, -1, -1, sizeof(::g2diagnostic::InitRequest)},
  { 35, -1, -1, sizeof(::g2diagnostic::InitResponse)},
  { 41, -1, -1, sizeof(::g2diagnostic::InitWithConfigIDRequest)},
  { 51, -1, -1, sizeof(::g2diagnostic::InitWithConfigIDResponse)},
  { 57, -1, -1, sizeof(::g2diagnostic::ReinitRequest)},
  { 64, -1, -1, sizeof(::g2diagnostic::ReinitResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::g2diagnostic::_CheckDBPerfRequest_default_instance_._instance,
  &::g2diagnostic::_CheckDBPerfResponse_default_instance_._instance,
  &::g2diagnostic::_DestroyRequest_default_instance_._instance,
  &::g2diagnostic::_DestroyResponse_default_instance_._instance,
  &::g2diagnostic::_InitRequest_default_instance_._instance,
  &::g2diagnostic::_InitResponse_default_instance_._instance,
  &::g2diagnostic::_InitWithConfigIDRequest_default_instance_._instance,
  &::g2diagnostic::_InitWithConfigIDResponse_default_instance_._instance,
  &::g2diagnostic::_ReinitRequest_default_instance_._instance,
  &::g2diagnostic::_ReinitResponse_default_instance_._instance,
};

const char descriptor_table_protodef_g2diagnostic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022g2diagnostic.proto\022\014g2diagnostic\"*\n\022Ch"
  "eckDBPerfRequest\022\024\n\014secondsToRun\030\001 \001(\005\"%"
  "\n\023CheckDBPerfResponse\022\016\n\006result\030\001 \001(\t\"\020\n"
  "\016DestroyRequest\"\021\n\017DestroyResponse\"L\n\013In"
  "itRequest\022\022\n\nmoduleName\030\001 \001(\t\022\021\n\tiniPara"
  "ms\030\002 \001(\t\022\026\n\016verboseLogging\030\003 \001(\003\"\016\n\014Init"
  "Response\"n\n\027InitWithConfigIDRequest\022\022\n\nm"
  "oduleName\030\001 \001(\t\022\021\n\tiniParams\030\002 \001(\t\022\024\n\014in"
  "itConfigID\030\003 \001(\003\022\026\n\016verboseLogging\030\004 \001(\003"
  "\"\032\n\030InitWithConfigIDResponse\"%\n\rReinitRe"
  "quest\022\024\n\014initConfigID\030\001 \001(\003\"\020\n\016ReinitRes"
  "ponse2\233\003\n\014G2Diagnostic\022T\n\013CheckDBPerf\022 ."
  "g2diagnostic.CheckDBPerfRequest\032!.g2diag"
  "nostic.CheckDBPerfResponse\"\000\022H\n\007Destroy\022"
  "\034.g2diagnostic.DestroyRequest\032\035.g2diagno"
  "stic.DestroyResponse\"\000\022\?\n\004Init\022\031.g2diagn"
  "ostic.InitRequest\032\032.g2diagnostic.InitRes"
  "ponse\"\000\022c\n\020InitWithConfigID\022%.g2diagnost"
  "ic.InitWithConfigIDRequest\032&.g2diagnosti"
  "c.InitWithConfigIDResponse\"\000\022E\n\006Reinit\022\033"
  ".g2diagnostic.ReinitRequest\032\034.g2diagnost"
  "ic.ReinitResponse\"\000Bu\n\'com.senzing.g2.en"
  "gine.grpc.G2DiagnosticB\021G2DiagnosticProt"
  "oP\001Z5github.com/senzing-garage/g2-sdk-go"
  "-grpc/g2diagnosticb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_g2diagnostic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_g2diagnostic_2eproto = {
    false, false, 986, descriptor_table_protodef_g2diagnostic_2eproto,
    "g2diagnostic.proto",
    &descriptor_table_g2diagnostic_2eproto_once, nullptr, 0, 10,
    schemas, file_default_instances, TableStruct_g2diagnostic_2eproto::offsets,
    file_level_metadata_g2diagnostic_2eproto, file_level_enum_descriptors_g2diagnostic_2eproto,
    file_level_service_descriptors_g2diagnostic_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_g2diagnostic_2eproto_getter() {
  return &descriptor_table_g2diagnostic_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_g2diagnostic_2eproto(&descriptor_table_g2diagnostic_2eproto);
namespace g2diagnostic {

// ===================================================================

class CheckDBPerfRequest::_Internal {
 public:
};

CheckDBPerfRequest::CheckDBPerfRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.CheckDBPerfRequest)
}
CheckDBPerfRequest::CheckDBPerfRequest(const CheckDBPerfRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDBPerfRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.secondstorun_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.secondstorun_ = from._impl_.secondstorun_;
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.CheckDBPerfRequest)
}

inline void CheckDBPerfRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.secondstorun_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckDBPerfRequest::~CheckDBPerfRequest() {
  // @@protoc_insertion_point(destructor:g2diagnostic.CheckDBPerfRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDBPerfRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckDBPerfRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDBPerfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2diagnostic.CheckDBPerfRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secondstorun_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDBPerfRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 secondsToRun = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.secondstorun_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDBPerfRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2diagnostic.CheckDBPerfRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 secondsToRun = 1;
  if (this->_internal_secondstorun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_secondstorun(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2diagnostic.CheckDBPerfRequest)
  return target;
}

size_t CheckDBPerfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2diagnostic.CheckDBPerfRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 secondsToRun = 1;
  if (this->_internal_secondstorun() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_secondstorun());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDBPerfRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDBPerfRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDBPerfRequest::GetClassData() const { return &_class_data_; }


void CheckDBPerfRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDBPerfRequest*>(&to_msg);
  auto& from = static_cast<const CheckDBPerfRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2diagnostic.CheckDBPerfRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_secondstorun() != 0) {
    _this->_internal_set_secondstorun(from._internal_secondstorun());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDBPerfRequest::CopyFrom(const CheckDBPerfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2diagnostic.CheckDBPerfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDBPerfRequest::IsInitialized() const {
  return true;
}

void CheckDBPerfRequest::InternalSwap(CheckDBPerfRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.secondstorun_, other->_impl_.secondstorun_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDBPerfRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[0]);
}

// ===================================================================

class CheckDBPerfResponse::_Internal {
 public:
};

CheckDBPerfResponse::CheckDBPerfResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.CheckDBPerfResponse)
}
CheckDBPerfResponse::CheckDBPerfResponse(const CheckDBPerfResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDBPerfResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.CheckDBPerfResponse)
}

inline void CheckDBPerfResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckDBPerfResponse::~CheckDBPerfResponse() {
  // @@protoc_insertion_point(destructor:g2diagnostic.CheckDBPerfResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDBPerfResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void CheckDBPerfResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDBPerfResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:g2diagnostic.CheckDBPerfResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDBPerfResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2diagnostic.CheckDBPerfResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDBPerfResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2diagnostic.CheckDBPerfResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2diagnostic.CheckDBPerfResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2diagnostic.CheckDBPerfResponse)
  return target;
}

size_t CheckDBPerfResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2diagnostic.CheckDBPerfResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDBPerfResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDBPerfResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDBPerfResponse::GetClassData() const { return &_class_data_; }


void CheckDBPerfResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDBPerfResponse*>(&to_msg);
  auto& from = static_cast<const CheckDBPerfResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2diagnostic.CheckDBPerfResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDBPerfResponse::CopyFrom(const CheckDBPerfResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2diagnostic.CheckDBPerfResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDBPerfResponse::IsInitialized() const {
  return true;
}

void CheckDBPerfResponse::InternalSwap(CheckDBPerfResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDBPerfResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[1]);
}

// ===================================================================

class DestroyRequest::_Internal {
 public:
};

DestroyRequest::DestroyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.DestroyRequest)
}
DestroyRequest::DestroyRequest(const DestroyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DestroyRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.DestroyRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DestroyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DestroyRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DestroyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[2]);
}

// ===================================================================

class DestroyResponse::_Internal {
 public:
};

DestroyResponse::DestroyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.DestroyResponse)
}
DestroyResponse::DestroyResponse(const DestroyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DestroyResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.DestroyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DestroyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DestroyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DestroyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[3]);
}

// ===================================================================

class InitRequest::_Internal {
 public:
};

InitRequest::InitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.InitRequest)
}
InitRequest::InitRequest(const InitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InitRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.verboselogging_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modulename().empty()) {
    _this->_impl_.modulename_.Set(from._internal_modulename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iniparams().empty()) {
    _this->_impl_.iniparams_.Set(from._internal_iniparams(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.verboselogging_ = from._impl_.verboselogging_;
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.InitRequest)
}

inline void InitRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.verboselogging_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:g2diagnostic.InitRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modulename_.Destroy();
  _impl_.iniparams_.Destroy();
}

void InitRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2diagnostic.InitRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modulename_.ClearToEmpty();
  _impl_.iniparams_.ClearToEmpty();
  _impl_.verboselogging_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string moduleName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_modulename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2diagnostic.InitRequest.moduleName"));
        } else
          goto handle_unusual;
        continue;
      // string iniParams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_iniparams();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2diagnostic.InitRequest.iniParams"));
        } else
          goto handle_unusual;
        continue;
      // int64 verboseLogging = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.verboselogging_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2diagnostic.InitRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modulename().data(), static_cast<int>(this->_internal_modulename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2diagnostic.InitRequest.moduleName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_modulename(), target);
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iniparams().data(), static_cast<int>(this->_internal_iniparams().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2diagnostic.InitRequest.iniParams");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_iniparams(), target);
  }

  // int64 verboseLogging = 3;
  if (this->_internal_verboselogging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_verboselogging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2diagnostic.InitRequest)
  return target;
}

size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2diagnostic.InitRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modulename());
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iniparams());
  }

  // int64 verboseLogging = 3;
  if (this->_internal_verboselogging() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_verboselogging());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InitRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitRequest::GetClassData() const { return &_class_data_; }


void InitRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InitRequest*>(&to_msg);
  auto& from = static_cast<const InitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2diagnostic.InitRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modulename().empty()) {
    _this->_internal_set_modulename(from._internal_modulename());
  }
  if (!from._internal_iniparams().empty()) {
    _this->_internal_set_iniparams(from._internal_iniparams());
  }
  if (from._internal_verboselogging() != 0) {
    _this->_internal_set_verboselogging(from._internal_verboselogging());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2diagnostic.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitRequest::IsInitialized() const {
  return true;
}

void InitRequest::InternalSwap(InitRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.modulename_, lhs_arena,
      &other->_impl_.modulename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.iniparams_, lhs_arena,
      &other->_impl_.iniparams_, rhs_arena
  );
  swap(_impl_.verboselogging_, other->_impl_.verboselogging_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[4]);
}

// ===================================================================

class InitResponse::_Internal {
 public:
};

InitResponse::InitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.InitResponse)
}
InitResponse::InitResponse(const InitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  InitResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.InitResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[5]);
}

// ===================================================================

class InitWithConfigIDRequest::_Internal {
 public:
};

InitWithConfigIDRequest::InitWithConfigIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.InitWithConfigIDRequest)
}
InitWithConfigIDRequest::InitWithConfigIDRequest(const InitWithConfigIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InitWithConfigIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.initconfigid_){}
    , decltype(_impl_.verboselogging_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modulename().empty()) {
    _this->_impl_.modulename_.Set(from._internal_modulename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iniparams().empty()) {
    _this->_impl_.iniparams_.Set(from._internal_iniparams(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.initconfigid_, &from._impl_.initconfigid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.verboselogging_) -
    reinterpret_cast<char*>(&_impl_.initconfigid_)) + sizeof(_impl_.verboselogging_));
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.InitWithConfigIDRequest)
}

inline void InitWithConfigIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.iniparams_){}
    , decltype(_impl_.initconfigid_){int64_t{0}}
    , decltype(_impl_.verboselogging_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.iniparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iniparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InitWithConfigIDRequest::~InitWithConfigIDRequest() {
  // @@protoc_insertion_point(destructor:g2diagnostic.InitWithConfigIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InitWithConfigIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modulename_.Destroy();
  _impl_.iniparams_.Destroy();
}

void InitWithConfigIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InitWithConfigIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2diagnostic.InitWithConfigIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modulename_.ClearToEmpty();
  _impl_.iniparams_.ClearToEmpty();
  ::memset(&_impl_.initconfigid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.verboselogging_) -
      reinterpret_cast<char*>(&_impl_.initconfigid_)) + sizeof(_impl_.verboselogging_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitWithConfigIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string moduleName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_modulename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2diagnostic.InitWithConfigIDRequest.moduleName"));
        } else
          goto handle_unusual;
        continue;
      // string iniParams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_iniparams();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "g2diagnostic.InitWithConfigIDRequest.iniParams"));
        } else
          goto handle_unusual;
        continue;
      // int64 initConfigID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.initconfigid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 verboseLogging = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.verboselogging_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InitWithConfigIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2diagnostic.InitWithConfigIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modulename().data(), static_cast<int>(this->_internal_modulename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2diagnostic.InitWithConfigIDRequest.moduleName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_modulename(), target);
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iniparams().data(), static_cast<int>(this->_internal_iniparams().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "g2diagnostic.InitWithConfigIDRequest.iniParams");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_iniparams(), target);
  }

  // int64 initConfigID = 3;
  if (this->_internal_initconfigid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_initconfigid(), target);
  }

  // int64 verboseLogging = 4;
  if (this->_internal_verboselogging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_verboselogging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2diagnostic.InitWithConfigIDRequest)
  return target;
}

size_t InitWithConfigIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2diagnostic.InitWithConfigIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string moduleName = 1;
  if (!this->_internal_modulename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modulename());
  }

  // string iniParams = 2;
  if (!this->_internal_iniparams().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iniparams());
  }

  // int64 initConfigID = 3;
  if (this->_internal_initconfigid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_initconfigid());
  }

  // int64 verboseLogging = 4;
  if (this->_internal_verboselogging() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_verboselogging());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitWithConfigIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InitWithConfigIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitWithConfigIDRequest::GetClassData() const { return &_class_data_; }


void InitWithConfigIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InitWithConfigIDRequest*>(&to_msg);
  auto& from = static_cast<const InitWithConfigIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2diagnostic.InitWithConfigIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modulename().empty()) {
    _this->_internal_set_modulename(from._internal_modulename());
  }
  if (!from._internal_iniparams().empty()) {
    _this->_internal_set_iniparams(from._internal_iniparams());
  }
  if (from._internal_initconfigid() != 0) {
    _this->_internal_set_initconfigid(from._internal_initconfigid());
  }
  if (from._internal_verboselogging() != 0) {
    _this->_internal_set_verboselogging(from._internal_verboselogging());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InitWithConfigIDRequest::CopyFrom(const InitWithConfigIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2diagnostic.InitWithConfigIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitWithConfigIDRequest::IsInitialized() const {
  return true;
}

void InitWithConfigIDRequest::InternalSwap(InitWithConfigIDRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.modulename_, lhs_arena,
      &other->_impl_.modulename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.iniparams_, lhs_arena,
      &other->_impl_.iniparams_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitWithConfigIDRequest, _impl_.verboselogging_)
      + sizeof(InitWithConfigIDRequest::_impl_.verboselogging_)
      - PROTOBUF_FIELD_OFFSET(InitWithConfigIDRequest, _impl_.initconfigid_)>(
          reinterpret_cast<char*>(&_impl_.initconfigid_),
          reinterpret_cast<char*>(&other->_impl_.initconfigid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InitWithConfigIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[6]);
}

// ===================================================================

class InitWithConfigIDResponse::_Internal {
 public:
};

InitWithConfigIDResponse::InitWithConfigIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.InitWithConfigIDResponse)
}
InitWithConfigIDResponse::InitWithConfigIDResponse(const InitWithConfigIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  InitWithConfigIDResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.InitWithConfigIDResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InitWithConfigIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InitWithConfigIDResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InitWithConfigIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[7]);
}

// ===================================================================

class ReinitRequest::_Internal {
 public:
};

ReinitRequest::ReinitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.ReinitRequest)
}
ReinitRequest::ReinitRequest(const ReinitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReinitRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.initconfigid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.initconfigid_ = from._impl_.initconfigid_;
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.ReinitRequest)
}

inline void ReinitRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.initconfigid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReinitRequest::~ReinitRequest() {
  // @@protoc_insertion_point(destructor:g2diagnostic.ReinitRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReinitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReinitRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReinitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:g2diagnostic.ReinitRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initconfigid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 initConfigID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.initconfigid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReinitRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:g2diagnostic.ReinitRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 initConfigID = 1;
  if (this->_internal_initconfigid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_initconfigid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g2diagnostic.ReinitRequest)
  return target;
}

size_t ReinitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g2diagnostic.ReinitRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 initConfigID = 1;
  if (this->_internal_initconfigid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_initconfigid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReinitRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitRequest::GetClassData() const { return &_class_data_; }


void ReinitRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReinitRequest*>(&to_msg);
  auto& from = static_cast<const ReinitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:g2diagnostic.ReinitRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_initconfigid() != 0) {
    _this->_internal_set_initconfigid(from._internal_initconfigid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReinitRequest::CopyFrom(const ReinitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g2diagnostic.ReinitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitRequest::IsInitialized() const {
  return true;
}

void ReinitRequest::InternalSwap(ReinitRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.initconfigid_, other->_impl_.initconfigid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[8]);
}

// ===================================================================

class ReinitResponse::_Internal {
 public:
};

ReinitResponse::ReinitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:g2diagnostic.ReinitResponse)
}
ReinitResponse::ReinitResponse(const ReinitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReinitResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:g2diagnostic.ReinitResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReinitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_g2diagnostic_2eproto_getter, &descriptor_table_g2diagnostic_2eproto_once,
      file_level_metadata_g2diagnostic_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace g2diagnostic
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::g2diagnostic::CheckDBPerfRequest*
Arena::CreateMaybeMessage< ::g2diagnostic::CheckDBPerfRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::CheckDBPerfRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::CheckDBPerfResponse*
Arena::CreateMaybeMessage< ::g2diagnostic::CheckDBPerfResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::CheckDBPerfResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::DestroyRequest*
Arena::CreateMaybeMessage< ::g2diagnostic::DestroyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::DestroyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::DestroyResponse*
Arena::CreateMaybeMessage< ::g2diagnostic::DestroyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::DestroyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::InitRequest*
Arena::CreateMaybeMessage< ::g2diagnostic::InitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::InitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::InitResponse*
Arena::CreateMaybeMessage< ::g2diagnostic::InitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::InitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::InitWithConfigIDRequest*
Arena::CreateMaybeMessage< ::g2diagnostic::InitWithConfigIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::InitWithConfigIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::InitWithConfigIDResponse*
Arena::CreateMaybeMessage< ::g2diagnostic::InitWithConfigIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::InitWithConfigIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::ReinitRequest*
Arena::CreateMaybeMessage< ::g2diagnostic::ReinitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::ReinitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::g2diagnostic::ReinitResponse*
Arena::CreateMaybeMessage< ::g2diagnostic::ReinitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::g2diagnostic::ReinitResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
