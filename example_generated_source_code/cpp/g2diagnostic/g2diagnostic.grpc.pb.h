// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: g2diagnostic.proto
#ifndef GRPC_g2diagnostic_2eproto__INCLUDED
#define GRPC_g2diagnostic_2eproto__INCLUDED

#include "g2diagnostic.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace g2diagnostic {

class G2Diagnostic final {
 public:
  static constexpr char const* service_full_name() {
    return "g2diagnostic.G2Diagnostic";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::g2diagnostic::CheckDBPerfResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>> AsyncCheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>>(AsyncCheckDBPerfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>> PrepareAsyncCheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>>(PrepareAsyncCheckDBPerfRaw(context, request, cq));
    }
    virtual ::grpc::Status CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::g2diagnostic::CloseEntityListBySizeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>> AsyncCloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>>(AsyncCloseEntityListBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>> PrepareAsyncCloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>>(PrepareAsyncCloseEntityListBySizeRaw(context, request, cq));
    }
    virtual ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::g2diagnostic::DestroyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    virtual ::grpc::Status FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::g2diagnostic::FetchNextEntityBySizeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>> AsyncFetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>>(AsyncFetchNextEntityBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>> PrepareAsyncFetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>>(PrepareAsyncFetchNextEntityBySizeRaw(context, request, cq));
    }
    virtual ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>> AsyncFindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>>(AsyncFindEntitiesByFeatureIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>> PrepareAsyncFindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>>(PrepareAsyncFindEntitiesByFeatureIDsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::g2diagnostic::GetAvailableMemoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>> AsyncGetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>>(AsyncGetAvailableMemoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>> PrepareAsyncGetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>>(PrepareAsyncGetAvailableMemoryRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::g2diagnostic::GetDataSourceCountsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>> AsyncGetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>>(AsyncGetDataSourceCountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>> PrepareAsyncGetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>>(PrepareAsyncGetDataSourceCountsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::g2diagnostic::GetDBInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>> AsyncGetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>>(AsyncGetDBInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>> PrepareAsyncGetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>>(PrepareAsyncGetDBInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::g2diagnostic::GetEntityDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>> AsyncGetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>>(AsyncGetEntityDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>> PrepareAsyncGetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>>(PrepareAsyncGetEntityDetailsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::g2diagnostic::GetEntityListBySizeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>> AsyncGetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>>(AsyncGetEntityListBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>> PrepareAsyncGetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>>(PrepareAsyncGetEntityListBySizeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::g2diagnostic::GetEntityResumeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>> AsyncGetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>>(AsyncGetEntityResumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>> PrepareAsyncGetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>>(PrepareAsyncGetEntityResumeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>> AsyncGetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>>(AsyncGetEntitySizeBreakdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>> PrepareAsyncGetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>>(PrepareAsyncGetEntitySizeBreakdownRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::g2diagnostic::GetFeatureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>> AsyncGetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>>(AsyncGetFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>> PrepareAsyncGetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>>(PrepareAsyncGetFeatureRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::g2diagnostic::GetGenericFeaturesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>> AsyncGetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>>(AsyncGetGenericFeaturesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>> PrepareAsyncGetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>>(PrepareAsyncGetGenericFeaturesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::g2diagnostic::GetLogicalCoresResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>> AsyncGetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>>(AsyncGetLogicalCoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>> PrepareAsyncGetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>>(PrepareAsyncGetLogicalCoresRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::g2diagnostic::GetMappingStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>> AsyncGetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>>(AsyncGetMappingStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>> PrepareAsyncGetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>>(PrepareAsyncGetMappingStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::g2diagnostic::GetPhysicalCoresResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>> AsyncGetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>>(AsyncGetPhysicalCoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>> PrepareAsyncGetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>>(PrepareAsyncGetPhysicalCoresRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::g2diagnostic::GetRelationshipDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>> AsyncGetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>>(AsyncGetRelationshipDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>> PrepareAsyncGetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>>(PrepareAsyncGetRelationshipDetailsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::g2diagnostic::GetResolutionStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>> AsyncGetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>>(AsyncGetResolutionStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>> PrepareAsyncGetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>>(PrepareAsyncGetResolutionStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::g2diagnostic::GetTotalSystemMemoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>> AsyncGetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>>(AsyncGetTotalSystemMemoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>> PrepareAsyncGetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>>(PrepareAsyncGetTotalSystemMemoryRaw(context, request, cq));
    }
    virtual ::grpc::Status Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::g2diagnostic::InitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    virtual ::grpc::Status InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::g2diagnostic::InitWithConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>> AsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>>(AsyncInitWithConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>> PrepareAsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>>(PrepareAsyncInitWithConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::g2diagnostic::ReinitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>> AsyncReinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>>(AsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>> PrepareAsyncReinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>>(PrepareAsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>> StreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>>(StreamEntityListBySizeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>> AsyncStreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>>(AsyncStreamEntityListBySizeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>> PrepareAsyncStreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>>(PrepareAsyncStreamEntityListBySizeRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest* request, ::grpc::ClientReadReactor< ::g2diagnostic::StreamEntityListBySizeResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>* AsyncCheckDBPerfRaw(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CheckDBPerfResponse>* PrepareAsyncCheckDBPerfRaw(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>* AsyncCloseEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::CloseEntityListBySizeResponse>* PrepareAsyncCloseEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>* AsyncFetchNextEntityBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FetchNextEntityBySizeResponse>* PrepareAsyncFetchNextEntityBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* AsyncFindEntitiesByFeatureIDsRaw(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* PrepareAsyncFindEntitiesByFeatureIDsRaw(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>* AsyncGetAvailableMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetAvailableMemoryResponse>* PrepareAsyncGetAvailableMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>* AsyncGetDataSourceCountsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDataSourceCountsResponse>* PrepareAsyncGetDataSourceCountsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>* AsyncGetDBInfoRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetDBInfoResponse>* PrepareAsyncGetDBInfoRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>* AsyncGetEntityDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityDetailsResponse>* PrepareAsyncGetEntityDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>* AsyncGetEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityListBySizeResponse>* PrepareAsyncGetEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>* AsyncGetEntityResumeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntityResumeResponse>* PrepareAsyncGetEntityResumeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>* AsyncGetEntitySizeBreakdownRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetEntitySizeBreakdownResponse>* PrepareAsyncGetEntitySizeBreakdownRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>* AsyncGetFeatureRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetFeatureResponse>* PrepareAsyncGetFeatureRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>* AsyncGetGenericFeaturesRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetGenericFeaturesResponse>* PrepareAsyncGetGenericFeaturesRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>* AsyncGetLogicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetLogicalCoresResponse>* PrepareAsyncGetLogicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>* AsyncGetMappingStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetMappingStatisticsResponse>* PrepareAsyncGetMappingStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>* AsyncGetPhysicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetPhysicalCoresResponse>* PrepareAsyncGetPhysicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>* AsyncGetRelationshipDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetRelationshipDetailsResponse>* PrepareAsyncGetRelationshipDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>* AsyncGetResolutionStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetResolutionStatisticsResponse>* PrepareAsyncGetResolutionStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>* AsyncGetTotalSystemMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::GetTotalSystemMemoryResponse>* PrepareAsyncGetTotalSystemMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>* AsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::InitWithConfigIDResponse>* PrepareAsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>* AsyncReinitRaw(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2diagnostic::ReinitResponse>* PrepareAsyncReinitRaw(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>* StreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>* AsyncStreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::g2diagnostic::StreamEntityListBySizeResponse>* PrepareAsyncStreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::g2diagnostic::CheckDBPerfResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>> AsyncCheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>>(AsyncCheckDBPerfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>> PrepareAsyncCheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>>(PrepareAsyncCheckDBPerfRaw(context, request, cq));
    }
    ::grpc::Status CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::g2diagnostic::CloseEntityListBySizeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>> AsyncCloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>>(AsyncCloseEntityListBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>> PrepareAsyncCloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>>(PrepareAsyncCloseEntityListBySizeRaw(context, request, cq));
    }
    ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::g2diagnostic::DestroyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    ::grpc::Status FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::g2diagnostic::FetchNextEntityBySizeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>> AsyncFetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>>(AsyncFetchNextEntityBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>> PrepareAsyncFetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>>(PrepareAsyncFetchNextEntityBySizeRaw(context, request, cq));
    }
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>> AsyncFindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>>(AsyncFindEntitiesByFeatureIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>> PrepareAsyncFindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>>(PrepareAsyncFindEntitiesByFeatureIDsRaw(context, request, cq));
    }
    ::grpc::Status GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::g2diagnostic::GetAvailableMemoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>> AsyncGetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>>(AsyncGetAvailableMemoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>> PrepareAsyncGetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>>(PrepareAsyncGetAvailableMemoryRaw(context, request, cq));
    }
    ::grpc::Status GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::g2diagnostic::GetDataSourceCountsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>> AsyncGetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>>(AsyncGetDataSourceCountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>> PrepareAsyncGetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>>(PrepareAsyncGetDataSourceCountsRaw(context, request, cq));
    }
    ::grpc::Status GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::g2diagnostic::GetDBInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>> AsyncGetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>>(AsyncGetDBInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>> PrepareAsyncGetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>>(PrepareAsyncGetDBInfoRaw(context, request, cq));
    }
    ::grpc::Status GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::g2diagnostic::GetEntityDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>> AsyncGetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>>(AsyncGetEntityDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>> PrepareAsyncGetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>>(PrepareAsyncGetEntityDetailsRaw(context, request, cq));
    }
    ::grpc::Status GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::g2diagnostic::GetEntityListBySizeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>> AsyncGetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>>(AsyncGetEntityListBySizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>> PrepareAsyncGetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>>(PrepareAsyncGetEntityListBySizeRaw(context, request, cq));
    }
    ::grpc::Status GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::g2diagnostic::GetEntityResumeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>> AsyncGetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>>(AsyncGetEntityResumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>> PrepareAsyncGetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>>(PrepareAsyncGetEntityResumeRaw(context, request, cq));
    }
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>> AsyncGetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>>(AsyncGetEntitySizeBreakdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>> PrepareAsyncGetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>>(PrepareAsyncGetEntitySizeBreakdownRaw(context, request, cq));
    }
    ::grpc::Status GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::g2diagnostic::GetFeatureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>> AsyncGetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>>(AsyncGetFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>> PrepareAsyncGetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>>(PrepareAsyncGetFeatureRaw(context, request, cq));
    }
    ::grpc::Status GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::g2diagnostic::GetGenericFeaturesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>> AsyncGetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>>(AsyncGetGenericFeaturesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>> PrepareAsyncGetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>>(PrepareAsyncGetGenericFeaturesRaw(context, request, cq));
    }
    ::grpc::Status GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::g2diagnostic::GetLogicalCoresResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>> AsyncGetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>>(AsyncGetLogicalCoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>> PrepareAsyncGetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>>(PrepareAsyncGetLogicalCoresRaw(context, request, cq));
    }
    ::grpc::Status GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::g2diagnostic::GetMappingStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>> AsyncGetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>>(AsyncGetMappingStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>> PrepareAsyncGetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>>(PrepareAsyncGetMappingStatisticsRaw(context, request, cq));
    }
    ::grpc::Status GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::g2diagnostic::GetPhysicalCoresResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>> AsyncGetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>>(AsyncGetPhysicalCoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>> PrepareAsyncGetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>>(PrepareAsyncGetPhysicalCoresRaw(context, request, cq));
    }
    ::grpc::Status GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::g2diagnostic::GetRelationshipDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>> AsyncGetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>>(AsyncGetRelationshipDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>> PrepareAsyncGetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>>(PrepareAsyncGetRelationshipDetailsRaw(context, request, cq));
    }
    ::grpc::Status GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::g2diagnostic::GetResolutionStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>> AsyncGetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>>(AsyncGetResolutionStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>> PrepareAsyncGetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>>(PrepareAsyncGetResolutionStatisticsRaw(context, request, cq));
    }
    ::grpc::Status GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::g2diagnostic::GetTotalSystemMemoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>> AsyncGetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>>(AsyncGetTotalSystemMemoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>> PrepareAsyncGetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>>(PrepareAsyncGetTotalSystemMemoryRaw(context, request, cq));
    }
    ::grpc::Status Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::g2diagnostic::InitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    ::grpc::Status InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::g2diagnostic::InitWithConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>> AsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>>(AsyncInitWithConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>> PrepareAsyncInitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>>(PrepareAsyncInitWithConfigIDRaw(context, request, cq));
    }
    ::grpc::Status Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::g2diagnostic::ReinitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>> AsyncReinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>>(AsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>> PrepareAsyncReinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>>(PrepareAsyncReinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::g2diagnostic::StreamEntityListBySizeResponse>> StreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::g2diagnostic::StreamEntityListBySizeResponse>>(StreamEntityListBySizeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>> AsyncStreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>>(AsyncStreamEntityListBySizeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>> PrepareAsyncStreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>>(PrepareAsyncStreamEntityListBySizeRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckDBPerf(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response, std::function<void(::grpc::Status)>) override;
      void CloseEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response, std::function<void(::grpc::Status)>) override;
      void Destroy(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response, std::function<void(::grpc::Status)>) override;
      void FetchNextEntityBySize(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response, std::function<void(::grpc::Status)>) override;
      void FindEntitiesByFeatureIDs(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAvailableMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDataSourceCounts(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDBInfo(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityResume(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitySizeBreakdown(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFeature(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetGenericFeatures(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLogicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMappingStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPhysicalCores(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRelationshipDetails(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetResolutionStatistics(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTotalSystemMemory(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response, std::function<void(::grpc::Status)>) override;
      void Init(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void InitWithConfigID(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response, std::function<void(::grpc::Status)>) override;
      void Reinit(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamEntityListBySize(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest* request, ::grpc::ClientReadReactor< ::g2diagnostic::StreamEntityListBySizeResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>* AsyncCheckDBPerfRaw(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CheckDBPerfResponse>* PrepareAsyncCheckDBPerfRaw(::grpc::ClientContext* context, const ::g2diagnostic::CheckDBPerfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>* AsyncCloseEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::CloseEntityListBySizeResponse>* PrepareAsyncCloseEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2diagnostic::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>* AsyncFetchNextEntityBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FetchNextEntityBySizeResponse>* PrepareAsyncFetchNextEntityBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* AsyncFindEntitiesByFeatureIDsRaw(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* PrepareAsyncFindEntitiesByFeatureIDsRaw(::grpc::ClientContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>* AsyncGetAvailableMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetAvailableMemoryResponse>* PrepareAsyncGetAvailableMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetAvailableMemoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>* AsyncGetDataSourceCountsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDataSourceCountsResponse>* PrepareAsyncGetDataSourceCountsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDataSourceCountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>* AsyncGetDBInfoRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetDBInfoResponse>* PrepareAsyncGetDBInfoRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetDBInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>* AsyncGetEntityDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityDetailsResponse>* PrepareAsyncGetEntityDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>* AsyncGetEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityListBySizeResponse>* PrepareAsyncGetEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>* AsyncGetEntityResumeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntityResumeResponse>* PrepareAsyncGetEntityResumeRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntityResumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>* AsyncGetEntitySizeBreakdownRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetEntitySizeBreakdownResponse>* PrepareAsyncGetEntitySizeBreakdownRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>* AsyncGetFeatureRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetFeatureResponse>* PrepareAsyncGetFeatureRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>* AsyncGetGenericFeaturesRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetGenericFeaturesResponse>* PrepareAsyncGetGenericFeaturesRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetGenericFeaturesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>* AsyncGetLogicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetLogicalCoresResponse>* PrepareAsyncGetLogicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetLogicalCoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>* AsyncGetMappingStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetMappingStatisticsResponse>* PrepareAsyncGetMappingStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetMappingStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>* AsyncGetPhysicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetPhysicalCoresResponse>* PrepareAsyncGetPhysicalCoresRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetPhysicalCoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>* AsyncGetRelationshipDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetRelationshipDetailsResponse>* PrepareAsyncGetRelationshipDetailsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>* AsyncGetResolutionStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetResolutionStatisticsResponse>* PrepareAsyncGetResolutionStatisticsRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>* AsyncGetTotalSystemMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::GetTotalSystemMemoryResponse>* PrepareAsyncGetTotalSystemMemoryRaw(::grpc::ClientContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>* AsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::InitWithConfigIDResponse>* PrepareAsyncInitWithConfigIDRaw(::grpc::ClientContext* context, const ::g2diagnostic::InitWithConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>* AsyncReinitRaw(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2diagnostic::ReinitResponse>* PrepareAsyncReinitRaw(::grpc::ClientContext* context, const ::g2diagnostic::ReinitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::g2diagnostic::StreamEntityListBySizeResponse>* StreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request) override;
    ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>* AsyncStreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::g2diagnostic::StreamEntityListBySizeResponse>* PrepareAsyncStreamEntityListBySizeRaw(::grpc::ClientContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CheckDBPerf_;
    const ::grpc::internal::RpcMethod rpcmethod_CloseEntityListBySize_;
    const ::grpc::internal::RpcMethod rpcmethod_Destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_FetchNextEntityBySize_;
    const ::grpc::internal::RpcMethod rpcmethod_FindEntitiesByFeatureIDs_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAvailableMemory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDataSourceCounts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDBInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityListBySize_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityResume_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitySizeBreakdown_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFeature_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGenericFeatures_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLogicalCores_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMappingStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPhysicalCores_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRelationshipDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_GetResolutionStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTotalSystemMemory_;
    const ::grpc::internal::RpcMethod rpcmethod_Init_;
    const ::grpc::internal::RpcMethod rpcmethod_InitWithConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_Reinit_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamEntityListBySize_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CheckDBPerf(::grpc::ServerContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response);
    virtual ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response);
    virtual ::grpc::Status Destroy(::grpc::ServerContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response);
    virtual ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response);
    virtual ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response);
    virtual ::grpc::Status GetAvailableMemory(::grpc::ServerContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response);
    virtual ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response);
    virtual ::grpc::Status GetDBInfo(::grpc::ServerContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response);
    virtual ::grpc::Status GetEntityDetails(::grpc::ServerContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response);
    virtual ::grpc::Status GetEntityListBySize(::grpc::ServerContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response);
    virtual ::grpc::Status GetEntityResume(::grpc::ServerContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response);
    virtual ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response);
    virtual ::grpc::Status GetFeature(::grpc::ServerContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response);
    virtual ::grpc::Status GetGenericFeatures(::grpc::ServerContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response);
    virtual ::grpc::Status GetLogicalCores(::grpc::ServerContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response);
    virtual ::grpc::Status GetMappingStatistics(::grpc::ServerContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response);
    virtual ::grpc::Status GetPhysicalCores(::grpc::ServerContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response);
    virtual ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response);
    virtual ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response);
    virtual ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response);
    virtual ::grpc::Status Init(::grpc::ServerContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response);
    virtual ::grpc::Status InitWithConfigID(::grpc::ServerContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response);
    virtual ::grpc::Status Reinit(::grpc::ServerContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response);
    virtual ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest* request, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckDBPerf(::grpc::ServerContext* context, ::g2diagnostic::CheckDBPerfRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::CheckDBPerfResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCloseEntityListBySize(::grpc::ServerContext* context, ::g2diagnostic::CloseEntityListBySizeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::CloseEntityListBySizeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Destroy() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::g2diagnostic::DestroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::DestroyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchNextEntityBySize(::grpc::ServerContext* context, ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::FetchNextEntityBySizeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindEntitiesByFeatureIDs(::grpc::ServerContext* context, ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAvailableMemory(::grpc::ServerContext* context, ::g2diagnostic::GetAvailableMemoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetAvailableMemoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataSourceCounts(::grpc::ServerContext* context, ::g2diagnostic::GetDataSourceCountsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetDataSourceCountsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDBInfo(::grpc::ServerContext* context, ::g2diagnostic::GetDBInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetDBInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityDetails(::grpc::ServerContext* context, ::g2diagnostic::GetEntityDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetEntityDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityListBySize(::grpc::ServerContext* context, ::g2diagnostic::GetEntityListBySizeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetEntityListBySizeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityResume(::grpc::ServerContext* context, ::g2diagnostic::GetEntityResumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetEntityResumeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitySizeBreakdown(::grpc::ServerContext* context, ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetEntitySizeBreakdownResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFeature() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFeature(::grpc::ServerContext* context, ::g2diagnostic::GetFeatureRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetFeatureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGenericFeatures(::grpc::ServerContext* context, ::g2diagnostic::GetGenericFeaturesRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetGenericFeaturesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLogicalCores(::grpc::ServerContext* context, ::g2diagnostic::GetLogicalCoresRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetLogicalCoresResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMappingStatistics(::grpc::ServerContext* context, ::g2diagnostic::GetMappingStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetMappingStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPhysicalCores(::grpc::ServerContext* context, ::g2diagnostic::GetPhysicalCoresRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetPhysicalCoresResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationshipDetails(::grpc::ServerContext* context, ::g2diagnostic::GetRelationshipDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetRelationshipDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetResolutionStatistics(::grpc::ServerContext* context, ::g2diagnostic::GetResolutionStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetResolutionStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTotalSystemMemory(::grpc::ServerContext* context, ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::GetTotalSystemMemoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Init() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::g2diagnostic::InitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::InitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitWithConfigID(::grpc::ServerContext* context, ::g2diagnostic::InitWithConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::InitWithConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Reinit() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinit(::grpc::ServerContext* context, ::g2diagnostic::ReinitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2diagnostic::ReinitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamEntityListBySize(::grpc::ServerContext* context, ::g2diagnostic::StreamEntityListBySizeRequest* request, ::grpc::ServerAsyncWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(23, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CheckDBPerf<WithAsyncMethod_CloseEntityListBySize<WithAsyncMethod_Destroy<WithAsyncMethod_FetchNextEntityBySize<WithAsyncMethod_FindEntitiesByFeatureIDs<WithAsyncMethod_GetAvailableMemory<WithAsyncMethod_GetDataSourceCounts<WithAsyncMethod_GetDBInfo<WithAsyncMethod_GetEntityDetails<WithAsyncMethod_GetEntityListBySize<WithAsyncMethod_GetEntityResume<WithAsyncMethod_GetEntitySizeBreakdown<WithAsyncMethod_GetFeature<WithAsyncMethod_GetGenericFeatures<WithAsyncMethod_GetLogicalCores<WithAsyncMethod_GetMappingStatistics<WithAsyncMethod_GetPhysicalCores<WithAsyncMethod_GetRelationshipDetails<WithAsyncMethod_GetResolutionStatistics<WithAsyncMethod_GetTotalSystemMemory<WithAsyncMethod_Init<WithAsyncMethod_InitWithConfigID<WithAsyncMethod_Reinit<WithAsyncMethod_StreamEntityListBySize<Service > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::CheckDBPerfRequest, ::g2diagnostic::CheckDBPerfResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::CheckDBPerfRequest* request, ::g2diagnostic::CheckDBPerfResponse* response) { return this->CheckDBPerf(context, request, response); }));}
    void SetMessageAllocatorFor_CheckDBPerf(
        ::grpc::MessageAllocator< ::g2diagnostic::CheckDBPerfRequest, ::g2diagnostic::CheckDBPerfResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::CheckDBPerfRequest, ::g2diagnostic::CheckDBPerfResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckDBPerf(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::CloseEntityListBySizeRequest, ::g2diagnostic::CloseEntityListBySizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::CloseEntityListBySizeRequest* request, ::g2diagnostic::CloseEntityListBySizeResponse* response) { return this->CloseEntityListBySize(context, request, response); }));}
    void SetMessageAllocatorFor_CloseEntityListBySize(
        ::grpc::MessageAllocator< ::g2diagnostic::CloseEntityListBySizeRequest, ::g2diagnostic::CloseEntityListBySizeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::CloseEntityListBySizeRequest, ::g2diagnostic::CloseEntityListBySizeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CloseEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::DestroyRequest, ::g2diagnostic::DestroyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::DestroyRequest* request, ::g2diagnostic::DestroyResponse* response) { return this->Destroy(context, request, response); }));}
    void SetMessageAllocatorFor_Destroy(
        ::grpc::MessageAllocator< ::g2diagnostic::DestroyRequest, ::g2diagnostic::DestroyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::DestroyRequest, ::g2diagnostic::DestroyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::FetchNextEntityBySizeRequest, ::g2diagnostic::FetchNextEntityBySizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::FetchNextEntityBySizeRequest* request, ::g2diagnostic::FetchNextEntityBySizeResponse* response) { return this->FetchNextEntityBySize(context, request, response); }));}
    void SetMessageAllocatorFor_FetchNextEntityBySize(
        ::grpc::MessageAllocator< ::g2diagnostic::FetchNextEntityBySizeRequest, ::g2diagnostic::FetchNextEntityBySizeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::FetchNextEntityBySizeRequest, ::g2diagnostic::FetchNextEntityBySizeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchNextEntityBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::FindEntitiesByFeatureIDsRequest, ::g2diagnostic::FindEntitiesByFeatureIDsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* request, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* response) { return this->FindEntitiesByFeatureIDs(context, request, response); }));}
    void SetMessageAllocatorFor_FindEntitiesByFeatureIDs(
        ::grpc::MessageAllocator< ::g2diagnostic::FindEntitiesByFeatureIDsRequest, ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::FindEntitiesByFeatureIDsRequest, ::g2diagnostic::FindEntitiesByFeatureIDsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindEntitiesByFeatureIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetAvailableMemoryRequest, ::g2diagnostic::GetAvailableMemoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetAvailableMemoryRequest* request, ::g2diagnostic::GetAvailableMemoryResponse* response) { return this->GetAvailableMemory(context, request, response); }));}
    void SetMessageAllocatorFor_GetAvailableMemory(
        ::grpc::MessageAllocator< ::g2diagnostic::GetAvailableMemoryRequest, ::g2diagnostic::GetAvailableMemoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetAvailableMemoryRequest, ::g2diagnostic::GetAvailableMemoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAvailableMemory(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetDataSourceCountsRequest, ::g2diagnostic::GetDataSourceCountsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetDataSourceCountsRequest* request, ::g2diagnostic::GetDataSourceCountsResponse* response) { return this->GetDataSourceCounts(context, request, response); }));}
    void SetMessageAllocatorFor_GetDataSourceCounts(
        ::grpc::MessageAllocator< ::g2diagnostic::GetDataSourceCountsRequest, ::g2diagnostic::GetDataSourceCountsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetDataSourceCountsRequest, ::g2diagnostic::GetDataSourceCountsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataSourceCounts(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetDBInfoRequest, ::g2diagnostic::GetDBInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetDBInfoRequest* request, ::g2diagnostic::GetDBInfoResponse* response) { return this->GetDBInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetDBInfo(
        ::grpc::MessageAllocator< ::g2diagnostic::GetDBInfoRequest, ::g2diagnostic::GetDBInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetDBInfoRequest, ::g2diagnostic::GetDBInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDBInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityDetailsRequest, ::g2diagnostic::GetEntityDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetEntityDetailsRequest* request, ::g2diagnostic::GetEntityDetailsResponse* response) { return this->GetEntityDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityDetails(
        ::grpc::MessageAllocator< ::g2diagnostic::GetEntityDetailsRequest, ::g2diagnostic::GetEntityDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityDetailsRequest, ::g2diagnostic::GetEntityDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityListBySizeRequest, ::g2diagnostic::GetEntityListBySizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetEntityListBySizeRequest* request, ::g2diagnostic::GetEntityListBySizeResponse* response) { return this->GetEntityListBySize(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityListBySize(
        ::grpc::MessageAllocator< ::g2diagnostic::GetEntityListBySizeRequest, ::g2diagnostic::GetEntityListBySizeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityListBySizeRequest, ::g2diagnostic::GetEntityListBySizeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityResumeRequest, ::g2diagnostic::GetEntityResumeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetEntityResumeRequest* request, ::g2diagnostic::GetEntityResumeResponse* response) { return this->GetEntityResume(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityResume(
        ::grpc::MessageAllocator< ::g2diagnostic::GetEntityResumeRequest, ::g2diagnostic::GetEntityResumeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntityResumeRequest, ::g2diagnostic::GetEntityResumeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityResume(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntitySizeBreakdownRequest, ::g2diagnostic::GetEntitySizeBreakdownResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetEntitySizeBreakdownRequest* request, ::g2diagnostic::GetEntitySizeBreakdownResponse* response) { return this->GetEntitySizeBreakdown(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitySizeBreakdown(
        ::grpc::MessageAllocator< ::g2diagnostic::GetEntitySizeBreakdownRequest, ::g2diagnostic::GetEntitySizeBreakdownResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetEntitySizeBreakdownRequest, ::g2diagnostic::GetEntitySizeBreakdownResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitySizeBreakdown(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFeature() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetFeatureRequest, ::g2diagnostic::GetFeatureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetFeatureRequest* request, ::g2diagnostic::GetFeatureResponse* response) { return this->GetFeature(context, request, response); }));}
    void SetMessageAllocatorFor_GetFeature(
        ::grpc::MessageAllocator< ::g2diagnostic::GetFeatureRequest, ::g2diagnostic::GetFeatureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetFeatureRequest, ::g2diagnostic::GetFeatureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetGenericFeaturesRequest, ::g2diagnostic::GetGenericFeaturesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetGenericFeaturesRequest* request, ::g2diagnostic::GetGenericFeaturesResponse* response) { return this->GetGenericFeatures(context, request, response); }));}
    void SetMessageAllocatorFor_GetGenericFeatures(
        ::grpc::MessageAllocator< ::g2diagnostic::GetGenericFeaturesRequest, ::g2diagnostic::GetGenericFeaturesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetGenericFeaturesRequest, ::g2diagnostic::GetGenericFeaturesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGenericFeatures(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetLogicalCoresRequest, ::g2diagnostic::GetLogicalCoresResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetLogicalCoresRequest* request, ::g2diagnostic::GetLogicalCoresResponse* response) { return this->GetLogicalCores(context, request, response); }));}
    void SetMessageAllocatorFor_GetLogicalCores(
        ::grpc::MessageAllocator< ::g2diagnostic::GetLogicalCoresRequest, ::g2diagnostic::GetLogicalCoresResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetLogicalCoresRequest, ::g2diagnostic::GetLogicalCoresResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLogicalCores(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetMappingStatisticsRequest, ::g2diagnostic::GetMappingStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetMappingStatisticsRequest* request, ::g2diagnostic::GetMappingStatisticsResponse* response) { return this->GetMappingStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_GetMappingStatistics(
        ::grpc::MessageAllocator< ::g2diagnostic::GetMappingStatisticsRequest, ::g2diagnostic::GetMappingStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetMappingStatisticsRequest, ::g2diagnostic::GetMappingStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMappingStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetPhysicalCoresRequest, ::g2diagnostic::GetPhysicalCoresResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetPhysicalCoresRequest* request, ::g2diagnostic::GetPhysicalCoresResponse* response) { return this->GetPhysicalCores(context, request, response); }));}
    void SetMessageAllocatorFor_GetPhysicalCores(
        ::grpc::MessageAllocator< ::g2diagnostic::GetPhysicalCoresRequest, ::g2diagnostic::GetPhysicalCoresResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetPhysicalCoresRequest, ::g2diagnostic::GetPhysicalCoresResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPhysicalCores(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetRelationshipDetailsRequest, ::g2diagnostic::GetRelationshipDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetRelationshipDetailsRequest* request, ::g2diagnostic::GetRelationshipDetailsResponse* response) { return this->GetRelationshipDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetRelationshipDetails(
        ::grpc::MessageAllocator< ::g2diagnostic::GetRelationshipDetailsRequest, ::g2diagnostic::GetRelationshipDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetRelationshipDetailsRequest, ::g2diagnostic::GetRelationshipDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationshipDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetResolutionStatisticsRequest, ::g2diagnostic::GetResolutionStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetResolutionStatisticsRequest* request, ::g2diagnostic::GetResolutionStatisticsResponse* response) { return this->GetResolutionStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_GetResolutionStatistics(
        ::grpc::MessageAllocator< ::g2diagnostic::GetResolutionStatisticsRequest, ::g2diagnostic::GetResolutionStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetResolutionStatisticsRequest, ::g2diagnostic::GetResolutionStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetResolutionStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetTotalSystemMemoryRequest, ::g2diagnostic::GetTotalSystemMemoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::GetTotalSystemMemoryRequest* request, ::g2diagnostic::GetTotalSystemMemoryResponse* response) { return this->GetTotalSystemMemory(context, request, response); }));}
    void SetMessageAllocatorFor_GetTotalSystemMemory(
        ::grpc::MessageAllocator< ::g2diagnostic::GetTotalSystemMemoryRequest, ::g2diagnostic::GetTotalSystemMemoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::GetTotalSystemMemoryRequest, ::g2diagnostic::GetTotalSystemMemoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTotalSystemMemory(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Init() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::InitRequest, ::g2diagnostic::InitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::InitRequest* request, ::g2diagnostic::InitResponse* response) { return this->Init(context, request, response); }));}
    void SetMessageAllocatorFor_Init(
        ::grpc::MessageAllocator< ::g2diagnostic::InitRequest, ::g2diagnostic::InitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::InitRequest, ::g2diagnostic::InitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::InitWithConfigIDRequest, ::g2diagnostic::InitWithConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::InitWithConfigIDRequest* request, ::g2diagnostic::InitWithConfigIDResponse* response) { return this->InitWithConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_InitWithConfigID(
        ::grpc::MessageAllocator< ::g2diagnostic::InitWithConfigIDRequest, ::g2diagnostic::InitWithConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::InitWithConfigIDRequest, ::g2diagnostic::InitWithConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitWithConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Reinit() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::ReinitRequest, ::g2diagnostic::ReinitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::ReinitRequest* request, ::g2diagnostic::ReinitResponse* response) { return this->Reinit(context, request, response); }));}
    void SetMessageAllocatorFor_Reinit(
        ::grpc::MessageAllocator< ::g2diagnostic::ReinitRequest, ::g2diagnostic::ReinitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2diagnostic::ReinitRequest, ::g2diagnostic::ReinitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Reinit(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackServerStreamingHandler< ::g2diagnostic::StreamEntityListBySizeRequest, ::g2diagnostic::StreamEntityListBySizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2diagnostic::StreamEntityListBySizeRequest* request) { return this->StreamEntityListBySize(context, request); }));
    }
    ~WithCallbackMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::g2diagnostic::StreamEntityListBySizeResponse>* StreamEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CheckDBPerf<WithCallbackMethod_CloseEntityListBySize<WithCallbackMethod_Destroy<WithCallbackMethod_FetchNextEntityBySize<WithCallbackMethod_FindEntitiesByFeatureIDs<WithCallbackMethod_GetAvailableMemory<WithCallbackMethod_GetDataSourceCounts<WithCallbackMethod_GetDBInfo<WithCallbackMethod_GetEntityDetails<WithCallbackMethod_GetEntityListBySize<WithCallbackMethod_GetEntityResume<WithCallbackMethod_GetEntitySizeBreakdown<WithCallbackMethod_GetFeature<WithCallbackMethod_GetGenericFeatures<WithCallbackMethod_GetLogicalCores<WithCallbackMethod_GetMappingStatistics<WithCallbackMethod_GetPhysicalCores<WithCallbackMethod_GetRelationshipDetails<WithCallbackMethod_GetResolutionStatistics<WithCallbackMethod_GetTotalSystemMemory<WithCallbackMethod_Init<WithCallbackMethod_InitWithConfigID<WithCallbackMethod_Reinit<WithCallbackMethod_StreamEntityListBySize<Service > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Destroy() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFeature() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Init() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Reinit() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckDBPerf(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCloseEntityListBySize(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Destroy() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchNextEntityBySize(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindEntitiesByFeatureIDs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAvailableMemory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataSourceCounts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDBInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityListBySize(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityResume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitySizeBreakdown(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFeature() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFeature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGenericFeatures(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLogicalCores(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMappingStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPhysicalCores(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationshipDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetResolutionStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTotalSystemMemory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Init() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitWithConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Reinit() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamEntityListBySize(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(23, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckDBPerf(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckDBPerf(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CloseEntityListBySize(context, request, response); }));
    }
    ~WithRawCallbackMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CloseEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FetchNextEntityBySize(context, request, response); }));
    }
    ~WithRawCallbackMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchNextEntityBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindEntitiesByFeatureIDs(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindEntitiesByFeatureIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAvailableMemory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAvailableMemory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDataSourceCounts(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataSourceCounts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDBInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDBInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityListBySize(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityResume(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityResume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitySizeBreakdown(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitySizeBreakdown(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFeature() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFeature(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGenericFeatures(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGenericFeatures(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLogicalCores(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLogicalCores(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMappingStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMappingStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPhysicalCores(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPhysicalCores(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRelationshipDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationshipDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetResolutionStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetResolutionStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTotalSystemMemory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTotalSystemMemory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Init() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Init(context, request, response); }));
    }
    ~WithRawCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InitWithConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitWithConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Reinit() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Reinit(context, request, response); }));
    }
    ~WithRawCallbackMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Reinit(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->StreamEntityListBySize(context, request); }));
    }
    ~WithRawCallbackMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* StreamEntityListBySize(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckDBPerf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckDBPerf() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::CheckDBPerfRequest, ::g2diagnostic::CheckDBPerfResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::CheckDBPerfRequest, ::g2diagnostic::CheckDBPerfResponse>* streamer) {
                       return this->StreamedCheckDBPerf(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckDBPerf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckDBPerf(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CheckDBPerfRequest* /*request*/, ::g2diagnostic::CheckDBPerfResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckDBPerf(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::CheckDBPerfRequest,::g2diagnostic::CheckDBPerfResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CloseEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CloseEntityListBySize() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::CloseEntityListBySizeRequest, ::g2diagnostic::CloseEntityListBySizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::CloseEntityListBySizeRequest, ::g2diagnostic::CloseEntityListBySizeResponse>* streamer) {
                       return this->StreamedCloseEntityListBySize(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CloseEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CloseEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::CloseEntityListBySizeRequest* /*request*/, ::g2diagnostic::CloseEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCloseEntityListBySize(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::CloseEntityListBySizeRequest,::g2diagnostic::CloseEntityListBySizeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Destroy() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::DestroyRequest, ::g2diagnostic::DestroyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::DestroyRequest, ::g2diagnostic::DestroyResponse>* streamer) {
                       return this->StreamedDestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2diagnostic::DestroyRequest* /*request*/, ::g2diagnostic::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::DestroyRequest,::g2diagnostic::DestroyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FetchNextEntityBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FetchNextEntityBySize() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::FetchNextEntityBySizeRequest, ::g2diagnostic::FetchNextEntityBySizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::FetchNextEntityBySizeRequest, ::g2diagnostic::FetchNextEntityBySizeResponse>* streamer) {
                       return this->StreamedFetchNextEntityBySize(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FetchNextEntityBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FetchNextEntityBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FetchNextEntityBySizeRequest* /*request*/, ::g2diagnostic::FetchNextEntityBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFetchNextEntityBySize(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::FetchNextEntityBySizeRequest,::g2diagnostic::FetchNextEntityBySizeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindEntitiesByFeatureIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindEntitiesByFeatureIDs() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::FindEntitiesByFeatureIDsRequest, ::g2diagnostic::FindEntitiesByFeatureIDsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::FindEntitiesByFeatureIDsRequest, ::g2diagnostic::FindEntitiesByFeatureIDsResponse>* streamer) {
                       return this->StreamedFindEntitiesByFeatureIDs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindEntitiesByFeatureIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindEntitiesByFeatureIDs(::grpc::ServerContext* /*context*/, const ::g2diagnostic::FindEntitiesByFeatureIDsRequest* /*request*/, ::g2diagnostic::FindEntitiesByFeatureIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindEntitiesByFeatureIDs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::FindEntitiesByFeatureIDsRequest,::g2diagnostic::FindEntitiesByFeatureIDsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAvailableMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAvailableMemory() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetAvailableMemoryRequest, ::g2diagnostic::GetAvailableMemoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetAvailableMemoryRequest, ::g2diagnostic::GetAvailableMemoryResponse>* streamer) {
                       return this->StreamedGetAvailableMemory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAvailableMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAvailableMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetAvailableMemoryRequest* /*request*/, ::g2diagnostic::GetAvailableMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAvailableMemory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetAvailableMemoryRequest,::g2diagnostic::GetAvailableMemoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDataSourceCounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDataSourceCounts() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetDataSourceCountsRequest, ::g2diagnostic::GetDataSourceCountsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetDataSourceCountsRequest, ::g2diagnostic::GetDataSourceCountsResponse>* streamer) {
                       return this->StreamedGetDataSourceCounts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDataSourceCounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDataSourceCounts(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDataSourceCountsRequest* /*request*/, ::g2diagnostic::GetDataSourceCountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDataSourceCounts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetDataSourceCountsRequest,::g2diagnostic::GetDataSourceCountsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDBInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDBInfo() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetDBInfoRequest, ::g2diagnostic::GetDBInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetDBInfoRequest, ::g2diagnostic::GetDBInfoResponse>* streamer) {
                       return this->StreamedGetDBInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDBInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDBInfo(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetDBInfoRequest* /*request*/, ::g2diagnostic::GetDBInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDBInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetDBInfoRequest,::g2diagnostic::GetDBInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityDetails() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetEntityDetailsRequest, ::g2diagnostic::GetEntityDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetEntityDetailsRequest, ::g2diagnostic::GetEntityDetailsResponse>* streamer) {
                       return this->StreamedGetEntityDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityDetailsRequest* /*request*/, ::g2diagnostic::GetEntityDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetEntityDetailsRequest,::g2diagnostic::GetEntityDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityListBySize() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetEntityListBySizeRequest, ::g2diagnostic::GetEntityListBySizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetEntityListBySizeRequest, ::g2diagnostic::GetEntityListBySizeResponse>* streamer) {
                       return this->StreamedGetEntityListBySize(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityListBySizeRequest* /*request*/, ::g2diagnostic::GetEntityListBySizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityListBySize(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetEntityListBySizeRequest,::g2diagnostic::GetEntityListBySizeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityResume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityResume() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetEntityResumeRequest, ::g2diagnostic::GetEntityResumeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetEntityResumeRequest, ::g2diagnostic::GetEntityResumeResponse>* streamer) {
                       return this->StreamedGetEntityResume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityResume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityResume(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntityResumeRequest* /*request*/, ::g2diagnostic::GetEntityResumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityResume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetEntityResumeRequest,::g2diagnostic::GetEntityResumeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitySizeBreakdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitySizeBreakdown() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetEntitySizeBreakdownRequest, ::g2diagnostic::GetEntitySizeBreakdownResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetEntitySizeBreakdownRequest, ::g2diagnostic::GetEntitySizeBreakdownResponse>* streamer) {
                       return this->StreamedGetEntitySizeBreakdown(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitySizeBreakdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitySizeBreakdown(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetEntitySizeBreakdownRequest* /*request*/, ::g2diagnostic::GetEntitySizeBreakdownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitySizeBreakdown(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetEntitySizeBreakdownRequest,::g2diagnostic::GetEntitySizeBreakdownResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFeature() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetFeatureRequest, ::g2diagnostic::GetFeatureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetFeatureRequest, ::g2diagnostic::GetFeatureResponse>* streamer) {
                       return this->StreamedGetFeature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetFeatureRequest* /*request*/, ::g2diagnostic::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFeature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetFeatureRequest,::g2diagnostic::GetFeatureResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGenericFeatures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGenericFeatures() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetGenericFeaturesRequest, ::g2diagnostic::GetGenericFeaturesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetGenericFeaturesRequest, ::g2diagnostic::GetGenericFeaturesResponse>* streamer) {
                       return this->StreamedGetGenericFeatures(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGenericFeatures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGenericFeatures(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetGenericFeaturesRequest* /*request*/, ::g2diagnostic::GetGenericFeaturesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGenericFeatures(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetGenericFeaturesRequest,::g2diagnostic::GetGenericFeaturesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLogicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLogicalCores() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetLogicalCoresRequest, ::g2diagnostic::GetLogicalCoresResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetLogicalCoresRequest, ::g2diagnostic::GetLogicalCoresResponse>* streamer) {
                       return this->StreamedGetLogicalCores(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLogicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLogicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetLogicalCoresRequest* /*request*/, ::g2diagnostic::GetLogicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLogicalCores(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetLogicalCoresRequest,::g2diagnostic::GetLogicalCoresResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMappingStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMappingStatistics() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetMappingStatisticsRequest, ::g2diagnostic::GetMappingStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetMappingStatisticsRequest, ::g2diagnostic::GetMappingStatisticsResponse>* streamer) {
                       return this->StreamedGetMappingStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMappingStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMappingStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetMappingStatisticsRequest* /*request*/, ::g2diagnostic::GetMappingStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMappingStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetMappingStatisticsRequest,::g2diagnostic::GetMappingStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPhysicalCores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPhysicalCores() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetPhysicalCoresRequest, ::g2diagnostic::GetPhysicalCoresResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetPhysicalCoresRequest, ::g2diagnostic::GetPhysicalCoresResponse>* streamer) {
                       return this->StreamedGetPhysicalCores(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPhysicalCores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPhysicalCores(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetPhysicalCoresRequest* /*request*/, ::g2diagnostic::GetPhysicalCoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPhysicalCores(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetPhysicalCoresRequest,::g2diagnostic::GetPhysicalCoresResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRelationshipDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRelationshipDetails() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetRelationshipDetailsRequest, ::g2diagnostic::GetRelationshipDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetRelationshipDetailsRequest, ::g2diagnostic::GetRelationshipDetailsResponse>* streamer) {
                       return this->StreamedGetRelationshipDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRelationshipDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRelationshipDetails(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetRelationshipDetailsRequest* /*request*/, ::g2diagnostic::GetRelationshipDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRelationshipDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetRelationshipDetailsRequest,::g2diagnostic::GetRelationshipDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetResolutionStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetResolutionStatistics() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetResolutionStatisticsRequest, ::g2diagnostic::GetResolutionStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetResolutionStatisticsRequest, ::g2diagnostic::GetResolutionStatisticsResponse>* streamer) {
                       return this->StreamedGetResolutionStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetResolutionStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetResolutionStatistics(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetResolutionStatisticsRequest* /*request*/, ::g2diagnostic::GetResolutionStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetResolutionStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetResolutionStatisticsRequest,::g2diagnostic::GetResolutionStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTotalSystemMemory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTotalSystemMemory() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::GetTotalSystemMemoryRequest, ::g2diagnostic::GetTotalSystemMemoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::GetTotalSystemMemoryRequest, ::g2diagnostic::GetTotalSystemMemoryResponse>* streamer) {
                       return this->StreamedGetTotalSystemMemory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTotalSystemMemory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTotalSystemMemory(::grpc::ServerContext* /*context*/, const ::g2diagnostic::GetTotalSystemMemoryRequest* /*request*/, ::g2diagnostic::GetTotalSystemMemoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTotalSystemMemory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::GetTotalSystemMemoryRequest,::g2diagnostic::GetTotalSystemMemoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Init() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::InitRequest, ::g2diagnostic::InitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::InitRequest, ::g2diagnostic::InitResponse>* streamer) {
                       return this->StreamedInit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitRequest* /*request*/, ::g2diagnostic::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::InitRequest,::g2diagnostic::InitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InitWithConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InitWithConfigID() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::InitWithConfigIDRequest, ::g2diagnostic::InitWithConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::InitWithConfigIDRequest, ::g2diagnostic::InitWithConfigIDResponse>* streamer) {
                       return this->StreamedInitWithConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InitWithConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InitWithConfigID(::grpc::ServerContext* /*context*/, const ::g2diagnostic::InitWithConfigIDRequest* /*request*/, ::g2diagnostic::InitWithConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInitWithConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::InitWithConfigIDRequest,::g2diagnostic::InitWithConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Reinit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Reinit() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2diagnostic::ReinitRequest, ::g2diagnostic::ReinitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2diagnostic::ReinitRequest, ::g2diagnostic::ReinitResponse>* streamer) {
                       return this->StreamedReinit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Reinit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Reinit(::grpc::ServerContext* /*context*/, const ::g2diagnostic::ReinitRequest* /*request*/, ::g2diagnostic::ReinitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReinit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2diagnostic::ReinitRequest,::g2diagnostic::ReinitResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CheckDBPerf<WithStreamedUnaryMethod_CloseEntityListBySize<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_FetchNextEntityBySize<WithStreamedUnaryMethod_FindEntitiesByFeatureIDs<WithStreamedUnaryMethod_GetAvailableMemory<WithStreamedUnaryMethod_GetDataSourceCounts<WithStreamedUnaryMethod_GetDBInfo<WithStreamedUnaryMethod_GetEntityDetails<WithStreamedUnaryMethod_GetEntityListBySize<WithStreamedUnaryMethod_GetEntityResume<WithStreamedUnaryMethod_GetEntitySizeBreakdown<WithStreamedUnaryMethod_GetFeature<WithStreamedUnaryMethod_GetGenericFeatures<WithStreamedUnaryMethod_GetLogicalCores<WithStreamedUnaryMethod_GetMappingStatistics<WithStreamedUnaryMethod_GetPhysicalCores<WithStreamedUnaryMethod_GetRelationshipDetails<WithStreamedUnaryMethod_GetResolutionStatistics<WithStreamedUnaryMethod_GetTotalSystemMemory<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitWithConfigID<WithStreamedUnaryMethod_Reinit<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamEntityListBySize : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_StreamEntityListBySize() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::g2diagnostic::StreamEntityListBySizeRequest, ::g2diagnostic::StreamEntityListBySizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::g2diagnostic::StreamEntityListBySizeRequest, ::g2diagnostic::StreamEntityListBySizeResponse>* streamer) {
                       return this->StreamedStreamEntityListBySize(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_StreamEntityListBySize() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamEntityListBySize(::grpc::ServerContext* /*context*/, const ::g2diagnostic::StreamEntityListBySizeRequest* /*request*/, ::grpc::ServerWriter< ::g2diagnostic::StreamEntityListBySizeResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamEntityListBySize(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::g2diagnostic::StreamEntityListBySizeRequest,::g2diagnostic::StreamEntityListBySizeResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_StreamEntityListBySize<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_CheckDBPerf<WithStreamedUnaryMethod_CloseEntityListBySize<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_FetchNextEntityBySize<WithStreamedUnaryMethod_FindEntitiesByFeatureIDs<WithStreamedUnaryMethod_GetAvailableMemory<WithStreamedUnaryMethod_GetDataSourceCounts<WithStreamedUnaryMethod_GetDBInfo<WithStreamedUnaryMethod_GetEntityDetails<WithStreamedUnaryMethod_GetEntityListBySize<WithStreamedUnaryMethod_GetEntityResume<WithStreamedUnaryMethod_GetEntitySizeBreakdown<WithStreamedUnaryMethod_GetFeature<WithStreamedUnaryMethod_GetGenericFeatures<WithStreamedUnaryMethod_GetLogicalCores<WithStreamedUnaryMethod_GetMappingStatistics<WithStreamedUnaryMethod_GetPhysicalCores<WithStreamedUnaryMethod_GetRelationshipDetails<WithStreamedUnaryMethod_GetResolutionStatistics<WithStreamedUnaryMethod_GetTotalSystemMemory<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitWithConfigID<WithStreamedUnaryMethod_Reinit<WithSplitStreamingMethod_StreamEntityListBySize<Service > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace g2diagnostic


#endif  // GRPC_g2diagnostic_2eproto__INCLUDED
