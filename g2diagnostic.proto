syntax = "proto3";
package g2diagnostic;

option go_package = "github.com/senzing-garage/g2-sdk-go-grpc/g2diagnostic";
option java_multiple_files = true;
option java_package = "com.senzing.g2.engine.grpc.G2Diagnostic";
option java_outer_classname = "G2DiagnosticProto";

service G2Diagnostic {
  rpc CheckDBPerf (CheckDBPerfRequest) returns (CheckDBPerfResponse) {}
  rpc Destroy (DestroyRequest) returns (DestroyResponse) {}
  rpc Init (InitRequest) returns (InitResponse) {}
  rpc InitWithConfigID (InitWithConfigIDRequest) returns (InitWithConfigIDResponse) {}
  rpc PurgeRepository(PurgeRepositoryRequest) returns (PurgeRepositoryResponse) {}
  rpc Reinit (ReinitRequest) returns (ReinitResponse) {}
}

message CheckDBPerfRequest {
  int32 secondsToRun = 1;
}

message CheckDBPerfResponse {
  string result = 1;
}

message DestroyRequest {}

message DestroyResponse {}

message InitRequest {
  string moduleName = 1;
  string iniParams = 2;
  int64 verboseLogging = 3;
}

message InitResponse {}

message InitWithConfigIDRequest {
  string moduleName = 1;
  string iniParams = 2;
  int64 initConfigID = 3;
  int64 verboseLogging = 4;
}

message InitWithConfigIDResponse {}

message PurgeRepositoryRequest {}

message PurgeRepositoryResponse {}

message ReinitRequest {
  int64 initConfigID = 1;
}

message ReinitResponse {}
